{
    "created": "2018-05-15T08:54:56.925Z",
    "entities": {
        "SDOs": {
            "attack_patterns": [
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2863d1b2-56d5-4e18-b9a0-30e1cfbc7b0f",
                    "created": "2018-05-15T08:54:56.882Z",
                    "modified": "2018-05-15T08:54:56.882Z",
                    "name": "Accessing Functionality Not Properly Constrained by ACLs",
                    "description": [
                        "In applications, particularly web applications, access to functionality is mitigated by an authorization framework. This framework maps Access Control Lists (ACLs) to elements of the application's functionality; particularly URL's for web apps. In the case that the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker can access resources that must be available only to users at a higher privilege level, can access management sections of the application, or can run queries for data that they otherwise not supposed to."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-1",
                            "url": "https://capec.mitre.org/data/definitions/1.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey",
                                    "description": [
                                        "The attacker surveys the target application, possibly as a valid and authenticated user"
                                    ],
                                    "steps": [
                                        "Spidering web sites for all available links",
                                        "Brute force guessing of resource names",
                                        "Brute force guessing of user names / credentials",
                                        "Brute force guessing of function names / actions"
                                    ]
                                },
                                {
                                    "title": "Identify Functionality",
                                    "description": [
                                        "At each step, the attacker notes the resource or functionality access mechanism invoked upon performing specific actions"
                                    ],
                                    "steps": [
                                        "Use the web inventory of all forms and inputs and apply attack data to those inputs.",
                                        "Use a packet sniffer to capture and record network traffic",
                                        "Execute the software in a debugger and record API calls into the operating system or important libraries. This might occur in an environment other than a production environment, in order to find weaknesses that can be exploited in a production environment."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Iterate over access capabilities",
                                    "description": [
                                        "Possibly as a valid user, the attacker then tries to access each of the noted access mechanisms directly in order to perform functions not constrained by the ACLs."
                                    ],
                                    "steps": [
                                        "Fuzzing of API parameters (URL parameters, OS API parameters, protocol parameters)"
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "The application must be navigable in a manner that associates elements (subsections) of the application with ACLs.",
                            "The various resources, or individual URLs, must be somehow discoverable by the attacker",
                            "The administrator must have forgotten to associate an ACL or has associated an inappropriately permissive ACL with a particular navigable resource."
                        ],
                        "severity": "High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "Implementing the Model-View-Controller (MVC) within Java EE's Servlet paradigm using a \"Single front controller\" pattern that demands that brokered HTTP requests be authenticated before hand-offs to other Action Servlets.",
                                    "If no security-constraint is placed on those Action Servlets, such that positively no one can access them, the front controller can be subverted."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "In the case of web applications, use of a spider or other crawling software can allow an attacker to search for accessible pages not beholden to a security constraint.",
                            "More generally, noting the target resource accessed upon performing specific actions drives an understanding of the resources accessible from the current context."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Medium",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c24ffca5-046a-4e26-85a9-f0b54571adc4",
                    "created": "2018-05-15T08:54:56.884Z",
                    "modified": "2018-05-15T08:54:56.884Z",
                    "name": "Session Sidejacking",
                    "description": [
                        "Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim.",
                        "This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-102",
                            "url": "https://capec.mitre.org/data/definitions/102.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Detect Unprotected Session Token Transfer",
                                    "description": [
                                        "The attacker sniffs on the wireless network to detect unencrypted traffic that contains session tokens."
                                    ],
                                    "steps": [
                                        "The attacker uses a network sniffer tool like ferret or hamster to monitor the wireless traffic at a WiFi hotspot while examining it for evidence of transmittal of session tokens in unencrypted or recognizably encrypted form. An attacker applies his knowledge of the manner by which session tokens are generated and transmitted by various target systems to identify the session tokens."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Capture session token",
                                    "description": [
                                        "The attacker uses sniffing tools to capture a session token from traffic."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": "Insert captured session token",
                                    "description": [
                                        "The attacker attempts to insert a captured session token into communication with the targeted application to confirm viability for exploitation."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Session Token Exploitation",
                                    "description": [
                                        "The attacker leverages the captured session token to interact with the targeted application in a malicious fashion, impersonating the victim."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "An attacker and the victim are both using the same WiFi network.",
                            "The victim has an active session with a target system.",
                            "The victim is not using a secure channel to communicate with the target system (e.g. SSL, VPN, etc.)",
                            "The victim initiated communication with a target system that requires transfer of the session token or the target application uses AJAX and thereby periodically \"rings home\" asynchronously using the session token"
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "The attacker and the victim are using the same WiFi public hotspot. When the victim connects to the hotspot, he has a hosted e-mail account open. This e-mail account uses AJAX on the client side which periodically asynchronously connects to the server side and transfers, amongst other things, the user's session token to the server. The communication is supposed to happen over HTTPS. However, the configuration in the public hotspot initially disallows the HTTPS connection (or any other connection) between the victim and the hosted e-mail servers because the victim first needs to register with the hotspot. The victim does so, but his e-mail client already defaulted to using a connection without HTTPS, since it was denied access the first time. Victim's session token is now flowing unencrypted between the victim's browser and the hosted e-mail servers. The attacker leverages this opportunity to capture the session token and gain access to the victim's hosted e-mail account."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Use available tools to snoop on communications between the victim and the target system and try to capture the transmitted session token",
                            "Use the captured session token to impersonate the victim on the target system to perform actions and view information on their behalf."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart",
                                    "DoS: instability"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "name": "Cross Zone Scripting",
                    "description": [
                        "An attacker is able to cause a victim to load content into their web-browser that bypasses security zone controls and gain access to increased privileges to execute scripting code or other web objects such as unsigned ActiveX controls or applets. This is a privilege elevation attack targeted at zone-based web-browser security. In a zone-based model, pages belong to one of a set of zones corresponding to the level of privilege assigned to that page. Pages in an untrusted zone would have a lesser level of access to the system and/or be restricted in the types of executable content it was allowed to invoke. In a cross-zone scripting attack, a page that should be assigned to a less privileged zone is granted the privileges of a more trusted zone. This can be accomplished by exploiting bugs in the browser, exploiting incorrect configuration in the zone controls, through a cross-site scripting attack that causes the attackers' content to be treated as coming from a more trusted page, or by leveraging some piece of system functionality that is accessible from both the trusted and less trusted zone. This attack differs from \"Restful Privilege Escalation\" in that the latter correlates to the inadequate securing of RESTful access methods (such as HTTP DELETE) on the server, while cross-zone scripting attacks the concept of security zones as implemented by a browser."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Find systems susceptible to the attack",
                                    "description": [
                                        "Find systems that contain functionality that is accessed from both the internet zone and the local zone. There needs to be a way to supply input to that functionality from the internet zone and that original input needs to be used later on a page from a local zone."
                                    ],
                                    "steps": [
                                        "Leverage knowledge of common local zone functionality on targeted platforms to guide attempted injection of code through relevant internet zone mechanisms. In some cases this may be due to standard system configurations enabling shared functionality between internet and local zones. The attacker can search for indicators that these standard configurations are in place."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Find the insertion point for the payload",
                                    "description": [
                                        "The attacker first needs to find some system functionality or possibly another weakness in the system (e.g. susceptibility to cross site scripting) that would provide the attacker with a mechanism to deliver the payload (i.e. the code to be executed) to the user. The location from which this code is executed in the user's browser needs to be within the local machine zone."
                                    ],
                                    "steps": [
                                        "Finding weaknesses in functionality used by both privileged and unprivileged users."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Craft and inject the payload",
                                    "description": [
                                        "Develop the payload to be executed in the higher privileged zone in the user's browser. Inject the payload and attempt to lure the victim (if possible) into executing the functionality which unleashes the payload."
                                    ],
                                    "steps": [
                                        "The attacker makes it as likely as possible that the vulnerable functionality into which he has injected the payload has a high likelihood of being used by the victim.",
                                        "Leverage cross-site scripting vulnerability to inject payload."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The target must be using a zone-aware browser."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "There was a cross zone scripting vulnerability discovered in Skype that allowed one user to upload a video with a maliciously crafted title that contains a script. Subsequently, when the victim attempts to use the \"add video to chat\" feature on attacker's video, the script embedded in the title of the video runs with local zone privileges. Skype is using IE web controls to render internal and external HTML pages. \"Add video to chat\" uses these web controls and they are running in the Local Zone. Any user who searched for the video in Skype with the same keywords as in the title field, would have the attackers' code executing in their browser with local zone privileges to their host machine (e.g. applications on the victim's host system could be executed)."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data",
                                    "Modify files or directories",
                                    "Modify memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read files or directories",
                                    "Read memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7d277159-2e4c-44f9-b642-e887bcd76bc5",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "name": "Command Line Execution through SQL Injection",
                    "description": [
                        "An attacker uses standard SQL injection methods to inject data into the command line for execution. This could be done directly through misuse of directives such as MSSQL_xp_cmdshell or indirectly through injection of data into the database that would be interpreted as shell commands. Sometime later, an unscrupulous backend application (or could be part of the functionality of the same application) fetches the injected data stored in the database and uses this data as command line arguments without performing proper validation. The malicious data escapes that data plane by spawning new commands to be executed on the host."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-108",
                            "url": "https://capec.mitre.org/data/definitions/108.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Probe for SQL Injection vulnerability",
                                    "description": [
                                        "The attacker injects SQL syntax into user-controllable data inputs to search unfiltered execution of the SQL syntax in a query."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": "Achieve arbitrary command execution through SQL Injection with the MSSQL_xp_cmdshell directive",
                                    "description": [
                                        "The attacker leverages a SQL Injection attack to inject shell code to be executed by leveraging the xp_cmdshell directive."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": "Inject malicious data in the database",
                                    "description": [
                                        "Leverage SQL injection to inject data in the database that could later be used to achieve command injection if ever used as a command line argument"
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": "Trigger command line execution with injected arguments",
                                    "description": [
                                        "The attacker causes execution of command line functionality which leverages previously injected database content as arguments."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The application does not properly validate data before storing in the database",
                            "Backend application implicitly trusts the data stored in the database",
                            "Malicious data is used on the backend as a command line argument"
                        ],
                        "severity": "Very High",
                        "likelihood": "Low",
                        "examples": [
                            {
                                "description": [
                                    "SQL injection vulnerability in Cacti 0.8.6i and earlier, when register_argc_argv is enabled, allows remote attackers to execute arbitrary SQL commands via the (1) second or (2) third arguments to cmd.php. NOTE: this issue can be leveraged to execute arbitrary commands since the SQL query results are later used in the polling_items array and popen function (CVE-2006-6799).",
                                    "Reference: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-6799"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory",
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart",
                                    "DoS: instability"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8bc82424-635b-492a-be95-7be19db2f550",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "name": "Object Relational Mapping Injection",
                    "description": [
                        "An attacker leverages a weakness present in the database access layer code generated with an Object Relational Mapping (ORM) tool or a weakness in the way that a developer used a persistence framework to inject his or her own SQL commands to be executed against the underlying database. The attack here is similar to plain SQL injection, except that the application does not use JDBC to directly talk to the database, but instead it uses a data access layer generated by an ORM tool or framework (e.g. Hibernate). While most of the time code generated by an ORM tool contains safe access methods that are immune to SQL injection, sometimes either due to some weakness in the generated code or due to the fact that the developer failed to use the generated access methods properly, SQL injection is still possible."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-109",
                            "url": "https://capec.mitre.org/data/definitions/109.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Determine Persistence Framework Used",
                                    "description": [
                                        "An attacker tries to determine what persistence framework is used by the application in order to leverage a weakness in the generated data access layer code or a weakness in a way that the data access layer may have been used by the developer."
                                    ],
                                    "steps": [
                                        "An attacker provides input to the application in an attempt to induce an error screen that reveals a stack trace that gives an indication of the automated data access layer used. Or an attacker may simply make some educated guesses and assume, for instance, that Hibernate is used and try to craft an attack from there."
                                    ]
                                },
                                {
                                    "title": "Probe for ORM Injection vulnerabilities",
                                    "description": [
                                        "The attacker injects ORM syntax into user-controllable data inputs of the application to determine if it is possible modify data query structure and content."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": "Perform SQL Injection through the generated data access layer",
                                    "description": [
                                        "An attacker proceeds to exploit a weakness in the generated data access methods that does not properly separate control plane from the data plan, or potentially a particular way in which developer might have misused the generated code, to modify the structure of the executed SQL queries and/or inject entirely new SQL queries."
                                    ],
                                    "steps": [
                                        "An attacker uses normal SQL injection techniques and adjusts them to reflect the type of data access layer generation framework used by the application."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "An application uses data access layer generated by an ORM tool or framework",
                            "An application uses user supplied data in queries executed against the database",
                            "The separation between data plane and control plane is not ensured, through either developer error or an underlying weakness in the data access layer code generation framework"
                        ],
                        "severity": "High",
                        "likelihood": "Low",
                        "examples": [
                            {
                                "description": [
                                    "When using Hibernate, it is possible to use the session.find() method to run queries against the database. This is an overloaded method that provides facilities to perform binding between the supplied user data and place holders in the statically defined query. However, it is also possible to use the session.find() method without using any of these query binding overloads, hence effectively concatenating the user supplied data with rest of the SQL query, resulting in a possibility for SQL injection. While the framework may provide mechanisms to use methods immune to SQL injections, it may also contain ways that are not immune that may be chosen by the developer."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Provide various input to the system in an attempt to induce an error that would reveal stack trace information about the ORM layer (if any) used"
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart",
                                    "DoS: instability"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory",
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--59ed2658-d167-4603-85ef-45743496e6e6",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "name": "Cause Web Server Misclassification",
                    "description": [
                        "An attack of this type exploits a Web server's decision to take action based on filename or file extension. Because different file types are handled by different server processes, misclassification may force the Web server to take unexpected action, or expected actions in an unexpected sequence. This may cause the server to exhaust resources, supply debug or system data to the attacker, or bind an attacker to a remote process.",
                        "This type of vulnerability has been found in many widely used servers including IIS, Lotus Domino, and Orion. The attacker's job in this case is straightforward, standard communication protocols and methods are used and are generally appended with malicious information at the tail end of an otherwise legitimate request. The attack payload varies, but it could be special characters like a period or simply appending a tag that has a special meaning for operations on the server side like .jsp for a java application server. The essence of this attack is that the attacker deceives the server into executing functionality based on the name of the request, i.e. login.jsp, not the contents."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-11",
                            "url": "https://capec.mitre.org/data/definitions/11.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Footprint file input vectors",
                                    "description": [
                                        "Manually or using an automated tool, an attacker searches for all input locations where a user has control over the filenames or MIME types of files submitted to the web server."
                                    ],
                                    "steps": [
                                        "Attacker manually crawls application to identify file inputs",
                                        "Attacker uses an automated tool to crawl application identify file inputs",
                                        "Attacker manually assesses strength of access control protecting native application files from user control",
                                        "Attacker explores potential for submitting files directly to the web server via independently constructed HTTP Requests"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "File misclassification shotgunning",
                                    "description": [
                                        "An attacker makes changes to file extensions and MIME types typically processed by web servers and looks for abnormal behavior."
                                    ],
                                    "steps": [
                                        "Attacker submits files with switched extensions (e.g. .php on a .jsp file) to web server.",
                                        "Attacker adds extra characters (e.g. adding an extra . after the file extension) to filenames of files submitted to web server."
                                    ]
                                },
                                {
                                    "title": "File misclassification sniping",
                                    "description": [
                                        "Understanding how certain file types are processed by web servers, an attacker crafts varying file payloads and modifies their file extension or MIME type to be that of the targeted type to see if the web server is vulnerable to misclassification of that type."
                                    ],
                                    "steps": [
                                        "Craft a malicious file payload, modify file extension to the targeted file type and submit it to the web server.",
                                        "Craft a malicious file payload, modify its associated MIME type to the targeted file type and submit it to the web server."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Disclose information",
                                    "description": [
                                        "The attacker, by manipulating a file extension or MIME type is able to make the web server return raw information (not executed)."
                                    ],
                                    "steps": [
                                        "Manipulate the file names that are explicitly sent to the server.",
                                        "Manipulate the MIME sent in order to confuse the web server."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Web server software must rely on file name or file extension for processing.",
                            "The attacker must be able to make HTTP requests to the web server."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "J2EE application servers are supposed to execute Java Server Pages (JSP). There have been disclosure issues relating to Orion Application Server, where an attacker that appends either a period (.) or space characters to the end of a legitimate Http request, then the server displays the full source code in the attackers' web browser.",
                                    "Since remote data and directory access may be accessed directly from the JSP, this is a potentially very serious issue.",
                                    "[R.11.2]",
                                    "http://victim.site/login.jsp."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory",
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through standard Web application calls, e.g. HTTP Request.",
                            "categories": [
                                "Client",
                                "Network"
                            ]
                        },
                        "payload": "Varies with instantiation of attack pattern. Malicious payload may alter or append filename or extension to communicate with processes in unexpected order.",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Low",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--77be55ff-0fde-4039-bcac-a367c93d8f72",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "name": "SQL Injection through SOAP Parameter Tampering",
                    "description": [
                        "An attacker modifies the parameters of the SOAP message that is sent from the service consumer to the service provider to initiate a SQL injection attack. On the service provider side, the SOAP message is parsed and parameters are not properly validated before being used to access a database in a way that does not use parameter binding, thus enabling the attacker to control the structure of the executed SQL query. This pattern describes a SQL injection attack with the delivery mechanism being a SOAP message."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-110",
                            "url": "https://capec.mitre.org/data/definitions/110.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Detect Incorrect SOAP Parameter Handling",
                                    "description": [
                                        "The attacker tampers with the SOAP message parameters and looks for indications that the tampering caused a change in behavior of the targeted application."
                                    ],
                                    "steps": [
                                        "The attacker tampers with the SOAP message parameters by injecting some special characters such as single quotes, double quotes, semi columns, etc. The attacker observes system behavior."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Probe for SQL Injection vulnerability",
                                    "description": [
                                        "The attacker injects SQL syntax into vulnerable SOAP parameters identified during the Explore phase to search for unfiltered execution of the SQL syntax in a query."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Inject SQL via SOAP Parameters",
                                    "description": [
                                        "The attacker injects SQL via SOAP parameters identified as vulnerable during Explore phase to launch a first or second order SQL injection attack."
                                    ],
                                    "steps": [
                                        "An attacker performs a SQL injection attack via the usual methods leveraging SOAP parameters as the injection vector. An attacker has to be careful not to break the XML parser at the service provider which may prevent the payload getting through to the SQL query. The attacker may also look at the WSDL for the web service (if available) to better understand what is expected by the service provider."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "SOAP messages are used as a communication mechanism in the system",
                            "SOAP parameters are not properly validated at the service provider",
                            "The service provider does not properly utilize parameter binding when building SQL queries"
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "An attacker uses a travel booking system that leverages SOAP communication between the client and the travel booking service. An attacker begins to tamper with the outgoing SOAP messages by modifying their parameters to include characters that would break a dynamically constructed SQL query. He notices that the system fails to respond when these malicious inputs are injected in certain parameters transferred in a SOAP message. The attacker crafts a SQL query that modifies his payment amount in the travel system's database and passes it as one of the parameters . A backend batch payment system later fetches the payment amount from the database (the modified payment amount) and sends to the credit card processor, enabling the attacker to purchase the airfare at a lower price. An attacker needs to have some knowledge of the system's database, perhaps by exploiting another weakness that results in information disclosure."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Inject SQL characters in SOAP parameters and observe system behavior",
                            "Review WSDL to understand what is expected by the service provider"
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "Unexpected State"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--5bd71f08-648e-4876-840a-ce3cab3828ca",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "name": "Brute Force",
                    "description": [
                        "In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.",
                        "The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space. Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers. Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-112",
                            "url": "https://capec.mitre.org/data/definitions/112.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Determine secret testing procedure",
                                    "description": [
                                        "Determine how a potential guess of the secret may be tested. This may be accomplished by comparing some manipulation of the secret to a known value, use of the secret to manipulate some known set of data and determining if the result displays specific characteristics (for example, turning cryptotext into plaintext), or by submitting the secret to some external authority and having the external authority respond as to whether the value was the correct secret. Ideally, the attacker will want to determine the correctness of their guess independently since involvement of an external authority is usually slower and can provide an indication to the defender that a brute-force attack is being attempted."
                                    ],
                                    "steps": [
                                        "Determine if there is a way to parallelize the attack. Most brute force attacks can take advantage of parallel techniques by dividing the search space among available resources, thus dividing the average time to success by the number of resources available. If there is a single choke point, such as a need to check answers with an external authority, the attackers' position is significantly degraded."
                                    ]
                                },
                                {
                                    "title": "Reduce search space",
                                    "description": [
                                        "Find ways to reduce the secret space. The smaller the attacker can make the space they need to search for the secret value, the greater their chances for success. There are a great many ways in which the search space may be reduced."
                                    ],
                                    "steps": [
                                        "If possible, determine how the secret was selected. If the secret was determined algorithmically (such as by a random number generator) the algorithm may have patterns or dependencies that reduce the size of the secret space. If the secret was created by a human, behavioral factors may, if not completely reduce the space, make some types of secrets more likely than others. (For example, humans may use the same secrets in multiple places or use secrets that look or sound familiar for ease of recall.)",
                                        "If the secret was chosen algorithmically, cryptanalysis can be applied to the algorithm to discover patterns in this algorithm. (This is true even if the secret is not used in cryptography.) Periodicity, the need for seed values, or weaknesses in the generator all can result in a significantly smaller secret space.",
                                        "If the secret was chosen by a person, social engineering and simple espionage can indicate patterns in their secret selection. If old secrets can be learned (and a target may feel they have little need to protect a secret that has been replaced) hints as to their selection preferences can be gleaned. These can include character substitutions a target employs, patterns in sources (dates, famous phrases, music lyrics, family members, etc.). Once these patterns have been determined, the initial efforts of a brute-force attack can focus on these areas.",
                                        "Some algorithmic techniques for secret selection may leave indicators that can be tested for relatively easily and which could then be used to eliminate large areas of the search space for consideration. For example, it may be possible to determine that a secret does or does not start with a given character after a relatively small number of tests. Alternatively, it might be possible to discover the length of the secret relatively easily. These discoveries would significantly reduce the search space, thus increasing speed with which the attacker discovers the secret."
                                    ]
                                },
                                {
                                    "title": "Expand victory conditions",
                                    "description": [
                                        "It is sometimes possible to expand victory conditions. For example, the attacker might not need to know the exact secret but simply needs a value that produces the same result using a one-way function. While doing this does not reduce the size of the search space, the presence of multiple victory conditions does reduce the likely amount of time that the attacker will need to explore the space before finding a workable value."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": "Gather information so attack can be performed independently.",
                                    "description": [
                                        "If possible, gather the necessary information so a successful search can be determined without consultation of an external authority. This can be accomplished by capturing cryptotext (if the goal is decoding the text) or the encrypted password dictionary (if the goal is learning passwords)."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The attacker must be able to determine when they have successfully guessed the secret. As such, one-time pads are immune to this type of attack since there is no way to determine when a guess is correct."
                        ],
                        "severity": "High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": [
                            "Repeated submissions of incorrect secret values may indicate a brute force attack. For example, repeated bad passwords when accessing user accounts or repeated queries to databases using non-existent keys.",
                            "Attempts to download files protected by secrets (usually using encryption) may be a precursor to an offline attack to break the file's encryption and read its contents. This is especially significant if the file itself contains other secret values, such as password files.",
                            "If the attacker is able to perform the checking offline then there will likely be no indication that an attack is ongoing."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--39896e7f-c4d3-490e-b3c9-20f26b32d20f",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "name": "Authentication Abuse",
                    "description": [
                        "An attacker obtains unauthorized access to an application, service or device either through knowledge of the inherent weaknesses of an authentication mechanism, or by exploiting a flaw in the authentication scheme's implementation. In such an attack an authentication mechanism is functioning but a carefully controlled sequence of events causes the mechanism to grant access to the attacker. This attack may exploit assumptions made by the target's authentication procedures, such as assumptions regarding trust relationships or assumptions regarding the generation of secret values. This attack differs from Authentication Bypass attacks in that Authentication Abuse allows the attacker to be certified as a valid user through illegitimate means, while Authentication Bypass allows the user to access protected material without ever being certified as an authenticated user. This attack does not rely on prior sessions established by successfully authenticating users, as relied upon for the \"Exploitation of Session Variables, Resource IDs and other Trusted Credentials\" attack patterns."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-114",
                            "url": "https://capec.mitre.org/data/definitions/114.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An authentication mechanism or subsystem implementing some form of authentication such as passwords, digest authentication, security certificates, etc. which is flawed in some way."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "name": "Path Traversal",
                    "description": [
                        "An adversary uses path manipulation methods to exploit insufficient input validation of a target to obtain access to data that should be not be retrievable by ordinary well-formed requests. A typical variety of this attack involves specifying a path to a desired file together with dot-dot-slash characters, resulting in the file access API or function traversing out of the intended directory structure and into the root file system. By replacing or modifying the expected path information the access function or API retrieves the file desired by the attacker. These attacks either involve the attacker providing a complete path to a targeted file or using control characters (e.g. path separators (/ or \\) and/or dots (.)) to reach desired directories or files."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The attacker must be able to control the path that is requested of the target.",
                            "The target must fail to adequately sanitize incoming paths"
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "An example of using path traversal to attack some set of resources on a web server is to use a standard HTTP request",
                                    "From an attacker point of view, this may be sufficient to gain access to the password file on a poorly protected system. If the attacker can list directories of critical resources then read only access is not sufficient to protect the system.",
                                    "http://example/../../../../../etc/passwd"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity",
                                    "Confidentiality",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries."
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify files or directories"
                                ],
                                "notes": [
                                    "The attacker may be able to overwrite or create critical files, such as programs, libraries, or important data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, appending a new account at the end of a password file may allow an attacker to bypass authentication."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": [
                                    "The attacker may be able read the contents of unexpected files and expose sensitive data. If the targeted file is used for a security mechanism, then the attacker may be able to bypass that mechanism. For example, by reading a password file, the attacker could conduct brute force password guessing attacks in order to break into an account on the system."
                                ]
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart"
                                ],
                                "notes": [
                                    "The attacker may be able to overwrite, delete, or corrupt unexpected critical files such as programs, libraries, or important data. This may prevent the software from working at all and in the case of a protection mechanisms such as authentication, it has the potential to lockout every user of the software."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols and inputs.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "File system commands and specifiers",
                        "activation_zone": {
                            "description": "File system",
                            "categories": [
                                "File System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ac3dd450-6d15-4065-b4a3-85042ac429c4",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "name": "Directory Indexing",
                    "description": [
                        "An adversary crafts a request to a target that results in the target listing/indexing the content of a directory as output. One common method of triggering directory contents as output is to construct a request containing a path that terminates in a directory name rather than a file name since many applications are configured to provide a list of the directory's contents when such a request is received. An adversary can use this to explore the directory tree on a target as well as learn the names of files. This can often end up revealing test files, backup files, temporary files, hidden files, configuration files, user accounts, script contents, as well as naming conventions, all of which can be used by an attacker to mount additional attacks."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-127",
                            "url": "https://capec.mitre.org/data/definitions/127.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Directory Discovery",
                                    "description": [
                                        "Use a method, either manual, scripted, or automated to discover the directories on the server by making requests for directories that may possibly exist. During this phase the adversary is less concerned with whether a directory can be accessed or indexed and more focused on simply discovering what directories do exist on the target."
                                    ],
                                    "steps": [
                                        "Send requests to the web server for common directory names",
                                        "If directories are discovered that are native to a server type further refine the directory search to include directories usually present on those types of servers.",
                                        "Search for uncommon or potentially user created directories that may be present."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Iteratively explore directory/file structures",
                                    "description": [
                                        "The adversary attempts to access the discovered directories that allow access and may attempt to bypass server or application level ACLs by using manual or automated methods"
                                    ],
                                    "steps": [
                                        "Use a scanner tool to dynamically add directories/files to include their scan based upon data obtained in initial probes.",
                                        "Use a browser to manually explore the website by issuing a request ending the URL in a slash '/'.",
                                        "Attempt to bypass ACLs on directories by using methods that known to work against some server types by appending data to the directory request. For instance, appending a Null byte to the end of the request which may cause an ACL to fail and allow access.",
                                        "Sequentially request a list of common base files to each directory discovered.",
                                        "Try multiple fuzzing techniques to list directory contents for directories that will not reveal their contents with a \"/\" request"
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Read directories or files which are not intended for public viewing.",
                                    "description": [
                                        "The adversary attempts to access the discovered directories that allow access and may attempt to bypass server or application level ACLs by using manual or automated methods"
                                    ],
                                    "steps": [
                                        "Try multiple exploit techniques to list directory contents for directories that will not reveal their contents with a \"/\" request",
                                        "Try other known exploits to elevate privileges sufficient to bypass protected directories.",
                                        "List the files in the directory by issuing a request with the URL ending in a \"/\" slash.",
                                        "Access the files via direct URL and capture contents.",
                                        "Attempt to bypass ACLs on directories by using methods that are known to work against some server types by appending data to the directory request. For instance, appending a Null byte to the end of the request which may cause an ACL to fail and allow access.",
                                        "Sequentially request a list of common base files to each directory discovered."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The target must be misconfigured to return a list of a directory's content when it receives a request that ends in a directory name rather than a file name.",
                            "The adversary must be able to control the path that is requested of the target.",
                            "The administrator must have failed to properly configure an ACL or has associated an overly permissive ACL with a particular directory.",
                            "The server version or patch level must not inherently prevent known directory listing attacks from working."
                        ],
                        "severity": "Medium",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "The adversary uses directory listing to view sensitive files in the application. This is an example of accessing the backup file. The attack issues a request for http://www.example.com/admin/ and receives the following dynamic directory indexing content in the response: Index of /admin Name Last Modified Size Description backup/ 31-May-2007 08:18 - Apache/ 2.0.55 Server at www.example.com Port 80",
                                    "The target application does not have direct hyperlink to the \"backup\" directory in the normal html webpage, however the attacker has learned of this directory due to indexing the content. The client then requests the backup directory URL and receives output which has a \"db_dump.php\" file in it. This sensitive data should not be disclosed publicly."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": [
                                    "Information Leakage"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Low",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "name": "Subverting Environment Variable Values",
                    "description": [
                        "The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker probes the application for information. Which version of the application is running? Are there known environment variables? etc."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker gains control of an environment variable and ties to find out what process(es) the environment variable controls."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker modifies the environment variable to abuse the normal flow of processes or to gain access to privileged resources."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "An environment variable is accessible to the user.",
                            "An environment variable used by the application can be tainted with user supplied data.",
                            "Input data used in an environment variable is not validated properly.",
                            "The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable."
                        ],
                        "severity": "Very High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "Environment variables",
                                    "Changing the LD_LIBRARY_PATH environment variable in TELNET will cause TELNET to use an alternate (possibly Trojan) version of a function library. The Trojan library must be accessible using the target file system and should include Trojan code that will allow the user to log in with a bad password. This requires that the attacker upload the Trojan library to a specific location on the target.",
                                    "As an alternative to uploading a Trojan file, some file systems support file paths that include remote addresses, such as \\\\172.16.2.100\\shared_files\\trojan_dll.dll."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-1999-0073",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0073",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "An attacker can intentionally modify the client side parameter and monitor how the server behaves in response to that modification. For instance an attacker will look at the cookie data, the URL parameters, the hidden variables in forms, variables used in system calls, etc.",
                            "If the client uses a program in binary format to connect to the server, disassembler can be used to identify parameter within the binary code, and then the attacker would try to simulate the client application and change some of the parameters sent to the server. For instance the attacker may find that a secret key or a path is hard coded in the binary client application.",
                            "Environment variables are frequently stored in cleartext configuration files. If the attacker can modify those configuration files, he can control the environment variables. Even a read access can potentially be dangerous since this may give sensitive information to perform this type of attack. Indeed knowing which environment variables the application uses is a prerequisite to this type of attack."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "Unexpected State"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The client controlled parameter",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "The new value of the client controlled parameter.",
                        "activation_zone": {
                            "description": "The activation zone is the server side function where the client controlled parameter is consumed.",
                            "categories": [
                                "Server Side Function"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--68206981-695b-4c78-a98e-33ea1ee5b36c",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "name": "Try All Common Switches",
                    "description": [
                        "An attacker attempts to invoke all common switches and options in the target application for the purpose of discovering weaknesses in the target. For example, in some applications, adding a --debug switch causes debugging information to be displayed, which can sometimes reveal sensitive processing or configuration information to an attacker. This attack differs from other forms of API abuse in that the attacker is blindly attempting to invoke options in the hope that one of them will work rather than specifically targeting a known option. Nonetheless, even if the attacker is familiar with the published options of a targeted application this attack method may still be fruitful as it might discover unpublicized functionality."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-133",
                            "url": "https://capec.mitre.org/data/definitions/133.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The attacker must be able to control the options or switches sent to the target."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--987fc72e-04d8-41bd-ba94-23c4da5d594a",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "LDAP Injection",
                    "description": [
                        "An attacker manipulates or crafts an LDAP query for the purpose of undermining the security of the target. Some applications use user input to create LDAP queries that are processed by an LDAP server. For example, a user might provide their username during authentication and the username might be inserted in an LDAP query during the authentication process. An attacker could use this input to inject additional commands into an LDAP query that could disclose sensitive information. For example, entering a * in the aforementioned query might return information about all users on the system. This attack is very similar to an SQL injection attack in that it manipulates a query to gather additional information or coerce a particular return value."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-136",
                            "url": "https://capec.mitre.org/data/definitions/136.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey application",
                                    "description": [
                                        "The attacker takes an inventory of the entry points of the application."
                                    ],
                                    "steps": [
                                        "Spider web sites for all available links",
                                        "Sniff network communications with application using a utility such as WireShark."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Determine user-controllable input susceptible to LDAP injection",
                                    "description": [
                                        "For each user-controllable input that the attacker suspects is vulnerable to LDAP injection, attempt to inject characters that have special meaning in LDAP (such as a single quote character, etc.). The goal is to create a LDAP query with an invalid syntax"
                                    ],
                                    "steps": [
                                        "Use web browser to inject input through text fields or through HTTP GET parameters",
                                        "Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, or other HTTP header.",
                                        "Use modified client (modified by reverse engineering) to inject input."
                                    ]
                                },
                                {
                                    "title": "Try to exploit the LDAP injection vulnerability",
                                    "description": [
                                        "After determining that a given input is vulnerable to LDAP Injection, hypothesize what the underlying query looks like. Possibly using a tool, iteratively try to add logic to the query to extract information from the LDAP, or to modify or delete information in the LDAP."
                                    ],
                                    "steps": [
                                        "Add logic to the LDAP query to change the meaning of that command. Automated tools could be used to generate the LDAP injection strings.",
                                        "Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, or other HTTP header."
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must accept a string as user input, fail to sanitize characters that have a special meaning in LDAP queries in the user input, and insert the user-supplied string in an LDAP query which is then processed."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "PowerDNS before 2.9.18, when running with an LDAP backend, does not properly escape LDAP queries, which allows remote attackers to cause a denial of service (failure to answer ldap questions) and possibly conduct an LDAP injection attack."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2005-2301",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2301",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: instability"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Authorization"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Accountability",
                                    "Authentication",
                                    "Authorization",
                                    "Non-Repudiation"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input used as part of LDAP queries: This may include input fields on web forms, data in user-accessible files or even command-line parameters.",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "LDAP statement intended to reveal information or run malicious code",
                        "activation_zone": {
                            "description": "Back-end LDAP directory tree",
                            "categories": [
                                "LDAP System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "Command Delimiters",
                    "description": [
                        "An attack of this type exploits a programs' vulnerabilities that allows an attacker's commands to be concatenated onto a legitimate command with the intent of targeting other resources such as the file system or database. The system that uses a filter or a blacklist input validation, as opposed to whitelist validation is vulnerable to an attacker who predicts delimiters (or combinations of delimiters) not present in the filter or blacklist. As with other injection attacks, the attacker uses the command delimiter payload as an entry point to tunnel through the application and activate additional attacks through SQL queries, shell commands, network scanning, and so on."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Assess Target Runtime Environment",
                                    "description": [
                                        "In situations where the runtime environment is not implicitly known, the attacker makes connections to the target system and tries to determine the system's runtime environment. Knowing the environment is vital to choosing the correct delimiters."
                                    ],
                                    "steps": [
                                        "Port mapping using network connection-based software (e.g., nmap, nessus, etc.)",
                                        "Port mapping by exploring the operating system (netstat, sockstat, etc.)",
                                        "TCP/IP Fingerprinting",
                                        "Induce errors to find informative error messages"
                                    ]
                                },
                                {
                                    "title": "Survey the Application",
                                    "description": [
                                        "The attacker surveys the target application, possibly as a valid and authenticated user"
                                    ],
                                    "steps": [
                                        "Spidering web sites for all available links",
                                        "Inventory all application inputs"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Attempt delimiters in inputs",
                                    "description": [
                                        "The attacker systematically attempts variations of delimiters on known inputs, observing the application's response each time."
                                    ],
                                    "steps": [
                                        "Inject command delimiters using network packet injection tools (netcat, nemesis, etc.)",
                                        "Inject command delimiters using web test frameworks (proxies, TamperData, custom programs, etc.)",
                                        "Enter command delimiters directly in input fields."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Use malicious command delimiters",
                                    "description": [
                                        "The attacker uses combinations of payload and carefully placed command delimiters to attack the software."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "Software's input validation or filtering must not detect and block presence of additional malicious command."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "By appending special characters, such as a semicolon or other commands that are executed by the target process, the attacker is able to execute a wide variety of malicious commands in the target process space, utilizing the target's inherited permissions, against any resource the host has access to. The possibilities are vast including injection attacks against RDBMS (SQL Injection), directory servers (LDAP Injection), XML documents (XPath and XQuery Injection), and command line shells. In many injection attacks, the results are converted back to strings and displayed to the client process such as a web browser without tripping any security alarms, so the network firewall does not log any out of the ordinary behavior.",
                                    "LDAP servers house critical identity assets such as user, profile, password, and group information that is used to authenticate and authorize users. An attacker that can query the directory at will and execute custom commands against the directory server is literally working with the keys to the kingdom in many enterprises. When user, organizational units, and other directory objects are queried by building the query string directly from user input with no validation, or other conversion, then the attacker has the ability to use any LDAP commands to query, filter, list, and crawl against the LDAP server directly in the same manner as SQL injection gives the ability to the attacker to run SQL commands on the database."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through appending delimiters to standard input",
                            "categories": [
                                "Client",
                                "Server"
                            ]
                        },
                        "payload": "Command(s) appended to valid parameters to enable attacker to execute commands on host",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c7b84791-a892-40b4-81c1-a67e7ccdd12e",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "Identity Spoofing",
                    "description": [
                        "Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials. Alternatively, an adversary may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the apparent identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the apparent identity of the message but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-151",
                            "url": "https://capec.mitre.org/data/definitions/151.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The identity associated with the message or resource must be removable or modifiable in an undetectable way."
                        ],
                        "severity": "Medium",
                        "likelihood": "Medium",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Authentication",
                                    "Access_Control"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0e495ba7-1dd3-43d9-bd92-db5d27451f4c",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "Screen Temporary Files for Sensitive Information",
                    "description": [
                        "An adversary exploits the temporary, insecure storage of information by monitoring the content of files used to store temp data during an application's routine execution flow. Many applications use temporary files to accelerate processing or to provide records of state across multiple executions of the application. Sometimes, however, these temporary files may end up storing sensitive information. By screening an application's temporary files, an adversary might be able to discover such sensitive information. For example, web browsers often cache content to accelerate subsequent lookups. If the content contains sensitive information then the adversary could recover this from the web cache."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-155",
                            "url": "https://capec.mitre.org/data/definitions/155.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must utilize temporary files and must fail to adequately secure them against other parties reading them."
                        ],
                        "severity": "Medium",
                        "likelihood": "Medium",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--59ea8a01-1f02-49f9-b667-02eee7d69ff5",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "Sniffing Attacks",
                    "description": [
                        "An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-157",
                            "url": "https://capec.mitre.org/data/definitions/157.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Any target that transmits readable data could be attacked in this way. Cryptographic techniques that render a data-stream unreadable can thwart this type of attack."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--be1118ad-68d6-4e72-a2e3-c0d6006cff23",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "name": "Sniffing Network Traffic",
                    "description": [
                        "An adversary monitors network traffic between nodes of a public or multicast network in an attempt to capture sensitive information. The adversary doesn't prevent reception or change content but simply observes and reads the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-158",
                            "url": "https://capec.mitre.org/data/definitions/158.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Any target that transmits readable data over a public or multicast network could be attacked in this way."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9e58e7d9-af38-4db5-acd5-eb8e123e430d",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "name": "Accessing, Modifying or Executing Executable Files",
                    "description": [
                        "An attack of this type exploits a system's configuration that allows an attacker to either directly access an executable file, for example through shell access; or in a possible worst case allows an attacker to upload a file and then execute it. Web servers, ftp servers, and message oriented middleware systems which have many integration points are particularly vulnerable, because both the programmers and the administrators must be in synch regarding the interfaces and the correct privileges for each interface."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-17",
                            "url": "https://capec.mitre.org/data/definitions/17.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "System's configuration must allow an attacker to directly access executable files or upload files to execute. This means that any access control system that is supposed to mediate communications between the subject and the object is set incorrectly or assumes a benign environment."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Consider a directory on a web server with the following permissions",
                                    "This could allow an attacker to both execute and upload and execute programs' on the web server. This one vulnerability can be exploited by a threat to probe the system and identify additional vulnerabilities to exploit.",
                                    "drwxrwxrwx 5 admin public 170 Nov 17 01:08 webroot"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Command(s) executed directly on host",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Medium",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "name": "Embedding Scripts within Scripts",
                    "description": [
                        "An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts. The adversary leverages this capability to execute his/her own script by embedding it within other scripts that the target software is likely to execute. The adversary must have the ability to inject their script into a script that is likely to be executed. If this is done, then the adversary can potentially launch a variety of probes and attacks against the web server's local environment, in many cases the so-called DMZ, back end resources the web server can communicate with, and other hosts. With the proliferation of intermediaries, such as Web App Firewalls, network devices, and even printers having JVMs and Web servers, there are many locales where an attacker can inject malicious scripts. Since this attack pattern defines scripts within scripts, there are likely privileges to execute said attack on the host. These attacks are not solely limited to the server side, client side scripts like Ajax and client side JavaScript can contain malicious scripts as well."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Spider",
                                    "description": [
                                        "Using a browser or an automated tool, an attacker records all entry points for inputs that happen to be reflected in a client-side script element. These script elements can be located in the HTML content (head, body, comments), in an HTML tag, XML, CSS, etc."
                                    ],
                                    "steps": [
                                        "Use a spidering tool to follow and record all non-static links that are likely to have input parameters (through forms, URL, fragments, etc.) actively used by the Web application.",
                                        "Use a proxy tool to record all links visited during a manual traversal of the web application.",
                                        "Use a browser to manually explore the website and analyze how it is constructed. Many browsers' plugins are available to facilitate the analysis or automate the discovery."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Probe identified potential entry points for XSS vulnerability",
                                    "description": [
                                        "The attacker uses the entry points gathered in the \"Explore\" phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited."
                                    ],
                                    "steps": [
                                        "Manually inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side script elements context and observe system behavior to determine if script was executed.",
                                        "Manually inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a server-side script elements context and observe system behavior to determine if script was executed.",
                                        "Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a client-side script elements context and observe system behavior to determine if script was executed.",
                                        "Use an automated injection attack tool to inject various script payloads into each identified entry point using a list of common script injection probes that typically work in a server-side script elements context and observe system behavior to determine if script was executed.",
                                        "Use a proxy tool to record results of the created requests."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Steal session IDs, credentials, page content, etc.",
                                    "description": [
                                        "As the attacker succeeds in exploiting the vulnerability, he can choose to steal user's credentials in order to reuse or to analyze them later on."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and sends document information to the attacker.",
                                        "Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute appropriately."
                                    ]
                                },
                                {
                                    "title": "Forceful browsing",
                                    "description": [
                                        "When the attacker targets the current application or another one (through CSRF vulnerabilities), the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws, but it can also be used to create a widespread attack against a particular website on the user's current network (Internet or not)."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and performs actions on the same web site",
                                        "Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities)."
                                    ]
                                },
                                {
                                    "title": "Content spoofing",
                                    "description": [
                                        "By manipulating the content, the attacker targets the information that the user would like to get from the website."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and exposes attacker-modified invalid information to the user on the current web page."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Target software must be able to execute scripts, and also grant the adversary privilege to write/upload scripts."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Ajax applications enable rich functionality for browser based web applications. Applications like Google Maps deliver unprecedented ability to zoom in and out, scroll graphics, and change graphic presentation through Ajax. The security issues that an attacker may exploit in this instance are the relative lack of security features in JavaScript and the various browser's implementation of JavaScript, these security gaps are what XSS and a host of other client side vulnerabilities are based on. While Ajax may not open up new security holes, per se, due to the conversational aspects between client and server of Ajax communication, attacks can be optimized. A single zoom in or zoom out on a graphic in an Ajax application may round trip to the server dozens of times. One of the first steps many attackers take is frequently footprinting an environment, this can include scanning local addresses like 192.*.*.* IP addresses, checking local directories, files, and settings for known vulnerabilities, and so on.",
                                    "The XSS script that is embedded in a given IMG tag can be manipulated to probe a different address on every click of the mouse or other motions that the Ajax application is aware of.",
                                    "In addition the enumerations allow for the attacker to nest sequential logic in the attacks. While Ajax applications do not open up brand new attack vectors, the existing attack vectors are more than adequate to execute attacks, and now these attacks can be optimized to sequentially execute and enumerate host environments.",
                                    "<IMG SRC=javascript:alert('XSS')>"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through standard script page, e.g. ASP web page",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Varies with instantiation of attack pattern. May contain network probe or attacks that run against or on host using host account permissions",
                        "activation_zone": {
                            "description": "Web server scripting host",
                            "categories": [
                                "Scripting Host"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--231c06b7-5cb4-4443-982e-7772480b9d3c",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "name": "Session Credential Falsification through Forging",
                    "description": [
                        "An attacker creates a false but functional session credential in order to gain or usurp access to a service. Session credentials allow users to identify themselves to a service after an initial authentication without needing to resend the authentication information (usually a username and password) with every message. If an attacker is able to forge valid session credentials they may be able to bypass authentication or piggy-back off some other authenticated user's session. This attack differs from Reuse of Session IDs and Session Sidejacking attacks in that in the latter attacks an attacker uses a previous or existing credential without modification while, in a forging attack, the attacker must create their own credential, although it may be based on previously observed credentials."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-196",
                            "url": "https://capec.mitre.org/data/definitions/196.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Analyze and Understand Session IDs",
                                    "description": [
                                        "The attacker finds that the targeted application use session credentials to identify legitimate users."
                                    ],
                                    "steps": [
                                        "An attacker makes many anonymous connections and records the session IDs.",
                                        "An attacker makes authorized connections and records the session tokens or credentials."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Create Session IDs.",
                                    "description": [
                                        "Attackers craft messages containing their forged credentials in GET, POST request, HTTP headers or cookies."
                                    ],
                                    "steps": [
                                        "The attacker manipulates the HTTP request message and adds his forged session IDs in to the requests or cookies."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Abuse the Victim's Session Credentials",
                                    "description": [
                                        "The attacker fixates falsified session ID to the victim when victim access the system. Once the victim has achieved a higher level of privilege, possibly by logging into the application, the attacker can now take over the session using the forged session identifier."
                                    ],
                                    "steps": [
                                        "The attacker loads the predefined or predicted session ID into his browser and browses to protected data or functionality.",
                                        "The attacker loads the predefined or predicted session ID into his software and utilizes functionality with the rights of the victim."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The targeted application must use session credentials to identify legitimate users. Session identifiers that remains unchanged when the privilege levels change. Predictable session identifiers."
                        ],
                        "severity": "Medium",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "This example uses client side scripting to set session ID in the victim's browser. The JavaScript code",
                                    "fixates a falsified session credential into victim's browser, with the help of crafted a URL link.",
                                    "A similar example uses session ID as an argument of the URL.",
                                    "Once the victim clicks the links, the attacker may be able to bypass authentication or piggy-back off some other authenticated victim's session.",
                                    "document.cookie=\"sessionid=0123456789\"",
                                    "http://www.example.com/<script>document.cookie=\"sessionid=0123456789\";</script>",
                                    "http://www.example.com/index.php/sessionid=0123456789"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Authorization"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Accountability",
                                    "Authentication",
                                    "Authorization",
                                    "Non-Repudiation"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "GET or POST data, HTTP header, session cookies",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Any HTTP Request transport variables (GET, POST, Headers, etc.)",
                        "activation_zone": {
                            "description": "Target application's session management mechanism",
                            "categories": [
                                "Session Management System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--13546eea-b901-4e20-8f4a-61201ca9f0b3",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "name": "Encryption Brute Forcing",
                    "description": [
                        "An attacker, armed with the cipher text and the encryption algorithm used, performs an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-20",
                            "url": "https://capec.mitre.org/data/definitions/20.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "Determine the ciphertext and the encryption algorithm."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "Perform an exhaustive brute force search of the key space, producing candidate plaintexts and observing if they make sense."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "Ciphertext is known.",
                            "Encryption algorithm and key size are known."
                        ],
                        "severity": "Low",
                        "likelihood": "Low",
                        "examples": [
                            {
                                "description": [
                                    "In 1997 the original DES challenge used distributed net computing to brute force the encryption key and decrypt the ciphertext to obtain the original plaintext. Each machine was given its own section of the key space to cover. The ciphertext was decrypted in 96 days."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": [
                            "None. This attack happens offline."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ccf167e1-5804-478a-9b4c-440b71136c7d",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "name": "Lifting Sensitive Data Embedded in Cache",
                    "description": [
                        "An attacker examines a target application's cache for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-204",
                            "url": "https://capec.mitre.org/data/definitions/204.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must store sensitive information in a cache.",
                            "The cache must be inadequately protected against attacker access."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--60377816-14a5-4aed-a0ef-8648925b5dab",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "name": "XSS Using MIME Type Mismatch",
                    "description": [
                        "An adversary creates a file with scripting content but where the specified MIME type of the file is such that scripting is not expected. The adversary tricks the victim into accessing a URL that responds with the script file. Some browsers will detect that the specified MIME type of the file does not match the actual type of its content and will automatically switch to using an interpreter for the real content type. If the browser does not invoke script filters before doing this, the adversary's script may run on the target unsanitized, possibly revealing the victim's cookies or executing arbitrary script in their browser."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-209",
                            "url": "https://capec.mitre.org/data/definitions/209.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The victim must follow a crafted link that references a scripting file that is mis-typed as a non-executable file.",
                            "The victim's browser must detect the true type of a mis-labeled scripting file and invoke the appropriate script interpreter without first performing filtering on the content."
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": [
                            {
                                "description": [
                                    "For example, the MIME type text/plain may be used where the actual content is text/javascript or text/html. Since text does not contain scripting instructions, the stated MIME type would indicate that filtering is unnecessary. However, if the target application subsequently determines the file's real type and invokes the appropriate interpreter, scripted content could be invoked."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "In another example, img tags in HTML content could reference a renderable type file instead of an expected image file. The file extension and MIME type can describe an image file, but the file content can be text/javascript or text/html resulting in script execution. If the browser assumes all references in img tags are images, and therefore do not need to be filtered for scripts, this would bypass content filters."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "name": "Exploitation of Trusted Credentials",
                    "description": [
                        "Attacks on session IDs and resource IDs take advantage of the fact that some software accepts user input without verifying its authenticity. For example, a message queuing system that allows service requesters to post messages to its queue through an open channel (such as anonymous FTP), authorization is done through checking group or role membership contained in the posted message. However, there is no proof that the message itself, the information in the message (such group or role membership), or indeed the process that wrote the message to the queue are authentic and authorized to do so.",
                        "Many server side processes are vulnerable to these attacks because the server to server communications have not been analyzed from a security perspective or the processes \"trust\" other systems because they are behind a firewall. In a similar way servers that use easy to guess or spoofable schemes for representing digital identity can also be vulnerable. Such systems frequently use schemes without cryptography and digital signatures (or with broken cryptography). Session IDs may be guessed due to insufficient randomness, poor protection (passed in the clear), lack of integrity (unsigned), or improperly correlation with access control policy enforcement points.",
                        "Exposed configuration and properties files that contain system passwords, database connection strings, and such may also give an attacker an edge to identify these identifiers.",
                        "The net result is that spoofing and impersonation is possible leading to an attacker's ability to break authentication, authorization, and audit controls on the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey the application for Indicators of Susceptibility",
                                    "description": [
                                        "Using a variety of methods, until one is found that applies to the target system. the attacker probes for credentials, session tokens, or entry points that bypass credentials altogether."
                                    ],
                                    "steps": [
                                        "Spider all available pages",
                                        "Attack known bad interfaces"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Fetch samples",
                                    "description": [
                                        "An attacker fetches many samples of a session ID. This may be through legitimate access (logging in, legitimate connections, etc) or just systematic probing."
                                    ],
                                    "steps": [
                                        "An attacker makes many anonymous connections and records the session IDs assigned.",
                                        "An attacker makes authorized connections and records the session tokens or credentials issued.",
                                        "An attacker gains access to (legitimately or illegitimately) a nearby system (e.g., in the same operations network, DMZ, or local network) and makes a connections from it, attempting to gain the same privileges as a trusted system."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Impersonate",
                                    "description": [
                                        "An attacker can use successful experiments to impersonate an authorized user or system"
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": "Spoofing",
                                    "description": [
                                        "Bad data can be injected into the system by an attacker."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "Server software must rely on weak session IDs proof and/or verification schemes"
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Thin client applications like web applications are particularly vulnerable to session ID attacks. Since the server has very little control over the client, but still must track sessions, data, and objects on the server side, cookies and other mechanisms have been used to pass the key to the session data between the client and server. When these session keys are compromised it is trivial for an attacker to impersonate a user's session in effect, have the same capabilities as the authorized user. There are two main ways for an attacker to exploit session IDs.",
                                    "A brute force attack involves an attacker repeatedly attempting to query the system with a spoofed session header in the HTTP request. A web server that uses a short session ID can be easily spoofed by trying many possible combinations so the parameters session-ID= 1234 has few possible combinations, and an attacker can retry several hundred or thousand request with little to no issue on their side.",
                                    "The second method is interception, where a tool such as wireshark is used to sniff the wire and pull off any unprotected session identifiers. The attacker can then use these variables and access the application."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through standard service calls, e.g. FTP or posting a message to a message queue.",
                            "categories": [
                                "Client",
                                "Network"
                            ]
                        },
                        "payload": "Varies with instantiation of attack pattern. The main goal is so spoof or impersonate a legitimate user.",
                        "activation_zone": {
                            "description": "Client machine and client network (e.g. Intranet)",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3365186e-001e-4f60-b3e8-f0c19195a447",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "name": "Fuzzing for garnering J2EE/.NET-based stack traces, for application mapping",
                    "description": [
                        "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-214",
                            "url": "https://capec.mitre.org/data/definitions/214.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must fail to sanitize incoming messages adequately before processing and must generate a stack trace in at least some error situations."
                        ],
                        "severity": "Low",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "name": "Fuzzing and observing application log data/errors for application mapping",
                    "description": [
                        "An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. By observing logs and error messages, the attacker can learn details about the configuration of the target application and might be able to cause the target to disclose sensitive information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Probing",
                                    "description": [
                                        "The attacker uses fuzzing tools to send random malformed messages to web server and observes for server's log or error message."
                                    ],
                                    "steps": [
                                        "The attacker uses fuzzing tools to send random malformed messages to web server and observes for server's log or error message."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Modify the parameters to get the desired information from the error messages.",
                                    "description": [
                                        "Attacker usually needs to modify the fuzzing parameters according to the observed error messages to get the desired sensitive information for the application. To defeat correlation, the attacker may try changing the origin IP addresses or client browser identification strings or start a new session from where he left off in obfuscating the attack."
                                    ],
                                    "steps": [
                                        "Modify the parameters in the fuzzing tool according to the observed error messages. Repeat with enough parameters until the application has been sufficiently mapped.",
                                        "If the application rejects the large amount of fuzzing messages from the same host machine, the attacker needs to hide the attacks by changing the IP addresses or other credentials."
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must fail to sanitize incoming messages adequately before processing."
                        ],
                        "severity": "Low",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "The following code generates an error message that leaks the full pathname of the configuration file.",
                                    "If this code is running on a server, such as a web application, then the person making the request should not know what the full pathname of the configuration directory is. By submitting a username that does not produce a $file that exists, an attacker could get this pathname. It could then be used to exploit path traversal or symbolic link following problems that may exist elsewhere in the application.",
                                    "Perl",
                                    "$ConfigDir = \"/home/myprog/config\";",
                                    "$uname = GetUserInput(\"username\");",
                                    "ExitError(\"Bad hacker!\") if ($uname !~ /^\\w+$/);",
                                    "$file = \"$ConfigDir/$uname.txt\";",
                                    "if (! (-e $file)) { ExitError(\"Error: $file does not exist\"); }",
                                    "..."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "\"Varies by context\""
                                ],
                                "notes": [
                                    "Information Leakage"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable request",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Malformed message, based on application context, crafted to elicit error conditions from the application.",
                        "activation_zone": {
                            "description": "Error handling mechanism within the application.",
                            "categories": [
                                "Error Handling System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "Low",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "name": "Exploiting Trust in Client",
                    "description": [
                        "An attack of this type exploits vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client. An attacker executes this type of attack by placing themselves in the communication channel between client and server such that communication directly to the server is possible where the server believes it is communicating only with a valid client. There are numerous variations of this type of attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Web applications may use JavaScript to perform client side validation, request encoding/formatting, and other security functions, which provides some usability benefits and eliminates some client-server round-tripping. However, the web server cannot assume that the requests it receives have been subject to those validations, because an attacker can use an alternate method for crafting the HTTP Request and submit data that contains poisoned values designed to spoof a user and/or get the web server to disclose information."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Web 2.0 style applications may be particularly vulnerable because they in large part rely on existing infrastructure which provides scalability without the ability to govern the clients. Attackers identify vulnerabilities that either assume the client side is responsible for some security services (without the requisite ability to ensure enforcement of these checks) and/or the lack of a hardened, default deny server configuration that allows for an attacker probing for weaknesses in unexpected ways. Client side validation, request formatting and other services may be performed, but these are strictly usability enhancements not security enhancements."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Many web applications use client side scripting like JavaScript to enforce authentication, authorization, session state and other variables, but at the end of day they all make requests to the server. These client side checks may provide usability and performance gains, but they lack integrity in terms of the http request. It is possible for an attacker to post variables directly to the server without using any of the client script security checks and customize the patterns to impersonate other users or probe for more information."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Many message oriented middleware systems like MQ Series are rely on information that is passed along with the message request for making authorization decisions, for example what group or role the request should be passed. However, if the message server does not or cannot authenticate the authorization information in the request then the server's policy decisions about authorization are trivial to subvert because the client process can simply elevate privilege by passing in elevated group or role information which the message server accepts and acts on."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "name": "File Content Injection",
                    "description": [
                        "An attack of this type exploits the host's trust in executing remote content, including binary files. The files are poisoned with a malicious payload (targeting the file systems accessible by the target software) by the adversary and may be passed through standard channels such as via email, and standard web content like PDF and multimedia files. The adversary exploits known vulnerabilities or handling routines in the target processes. Vulnerabilities of this type have been found in a wide variety of commercial applications from Microsoft Office to Adobe Acrobat and Apple Safari web browser. When the adversary knows the standard handling routines and can identify vulnerabilities and entry points, they can be exploited by otherwise seemingly normal content. Once the attack is executed, the adversary's program can access relative directories such as C:\\Program Files or other standard system directories to launch further attacks. In a worst case scenario, these programs are combined with other propagation logic and work as a virus."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target software must consume files.",
                            "The adversary must have access to modify files that the target software will consume."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "PHP is a very popular language used for developing web applications. When PHP is used with global variables, a vulnerability may be opened that affects the file system. A standard HTML form that allows for remote users to upload files, may also place those files in a public directory where the adversary can directly access and execute them through a browser. This vulnerability allows remote adversaries to execute arbitrary code on the system, and can result in the adversary being able to erase intrusion evidence from system and application logs.",
                                    "[R.23.2]"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Command(s) executed directly on host filesystem",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "name": "XML Oversized Payloads",
                    "description": [
                        "Applications often need to transform data in and out of the XML format by using an XML parser. It may be possible for an attacker to inject data that may have an adverse effect on the XML parser when it is being processed. By supplying oversized payloads in input vectors that will be processed by the XML parser, an attacker can cause the XML parser to consume more resources while processing, causing excessive memory consumption and CPU utilization, and potentially cause execution of arbitrary code. An attacker's goal is to leverage parser failure to his or her advantage. In many cases this type of an attack will result in a denial of service due to an application becoming unstable, freezing, or crash. However it is possible to cause a crash resulting in arbitrary code execution, leading to a jump from the data plane to the control plane [R.231.1]."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "An attacker determines the input data stream that is being processed by an XML parser on the victim's side."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "An attacker crafts input data that may have an adverse effect on the operation of the XML parser when the data is parsed on the victim's system."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "An application uses an XML parser to perform transformation on user-controllable data.",
                            "An application does not perform sufficient validation to ensure that user-controllable data is safe for an XML parser."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": [
                            "Bad data is passed to the XML parser (possibly repeatedly), possibly making it crash or execute arbitrary code."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: resource consumption (memory)"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Application XML-compliant interface",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "User-controllable XML code",
                        "activation_zone": {
                            "description": "The XML parser code.",
                            "categories": [
                                "Data Parser"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--546c3cd9-496d-418e-84e5-8c540a9774dc",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "name": "Command Injection",
                    "description": [
                        "An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-248",
                            "url": "https://capec.mitre.org/data/definitions/248.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The target application must accept input from the user and then use this input in the construction of commands to be executed. In virtually all cases, this is some form of string input that is concatenated to a constant string defined by the application to form the full command to be executed."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "A successful command injection attack enables an adversary to alter the command being executed and achieve a variety of negative consequences depending on the makeup of the new command. This includes potential information disclosure or the corruption of application data."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fdfa46b0-2184-47ed-b849-e12d5c84fa3a",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "name": "XML Injection",
                    "description": [
                        "An attacker utilizes crafted XML user-controllable input to probe, attack, and inject data into the XML database, using techniques similar to SQL injection. The user-controllable input can allow for unauthorized viewing of data, bypassing authentication or the front-end application for direct XML database access, and possibly altering database information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-250",
                            "url": "https://capec.mitre.org/data/definitions/250.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey Application",
                                    "description": [],
                                    "steps": [
                                        "Spider web sites for all available links.",
                                        "Gather results for analysis via responses or network sniffing."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Test user-controllable inputs for injection",
                                    "description": [],
                                    "steps": [
                                        "Use XML reserved characters or words, possibly with other input data to attempt to cause unexpected results"
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "XML queries used to process user input and retrieve information stored in XML documents",
                            "User-controllable input not properly sanitized"
                        ],
                        "severity": null,
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Consider an application that uses an XML database to authenticate its users. The application retrieves the user name and password from a request and forms an XPath expression to query the database. An attacker can successfully bypass authentication and login without valid credentials through XPath Injection. This can be achieved by injecting the query to the XML database with XPath syntax that causes the authentication check to fail. Improper validation of user-controllable input and use of a non-parameterized XPath expression enable the attacker to inject an XPath expression that causes authentication bypass."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "The attacker tries to inject characters that can cause an error, such as single-quote (') or equal sign (=), or content that may cause a malformed XML expression. If the injection of such content into the input causes an XPath error and the resulting error is displayed unfiltered, the attacker can begin to determine the nature of input validation and structure of XPath expressions used in queries."
                        ],
                        "indicators": [
                            "Too many exceptions generated by the application as a result of malformed queries"
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input used as part of XML queries",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "XML expressions intended to reveal information or bypass authentication",
                        "activation_zone": {
                            "description": "XML database",
                            "categories": [
                                "Database"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Accessing/Intercepting/Modifying HTTP Cookies",
                    "description": [
                        "This attack relies on the use of HTTP Cookies to store credentials, state information and other critical data on client systems. There are several different forms of this attack. The first form of this attack involves accessing HTTP Cookies to mine for potentially sensitive data contained therein. The second form involves intercepting this data as it is transmitted from client to server. This intercepted information is then used by the adversary to impersonate the remote user/session. The third form is when the cookie's content is modified by the adversary before it is sent back to the server. Here the adversary seeks to convince the target server to operate on this falsified information."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Obtain copy of cookie",
                                    "description": [
                                        "The adversary first needs to obtain a copy of the cookie. The adversary may be a legitimate end user wanting to escalate privilege, or could be somebody sniffing on a network to get a copy of HTTP cookies."
                                    ],
                                    "steps": [
                                        "Obtain cookie from local filesystem (e.g. C:\\Documents and Settings\\*\\Cookies and C:\\Documents and Settings\\*\\Application Data\\Mozilla\\Firefox\\Profiles\\*\\cookies.txt in Windows)",
                                        "Sniff cookie using a network sniffer such as Wireshark",
                                        "Obtain cookie from local memory or filesystem using a utility such as the Firefox Cookie Manager or AnEC Cookie Editor.",
                                        "Steal cookie via a cross-site scripting attack.",
                                        "Guess cookie contents if it contains predictable information."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Obtain sensitive information from cookie",
                                    "description": [
                                        "The adversary may be able to get sensitive information from the cookie. The web application developers may have assumed that cookies are not accessible by end users, and thus, may have put potentially sensitive information in them."
                                    ],
                                    "steps": [
                                        "If cookie shows any signs of being encoded using a standard scheme such as base64, decode it.",
                                        "Analyze the cookie's contents to determine whether it contains any sensitive information."
                                    ]
                                },
                                {
                                    "title": "Modify cookie to subvert security controls.",
                                    "description": [
                                        "The adversary may be able to modify or replace cookies to bypass security controls in the application."
                                    ],
                                    "steps": [
                                        "Modify logical parts of cookie and send it back to server to observe the effects.",
                                        "Modify numeric parts of cookie arithmetically and send it back to server to observe the effects.",
                                        "Modify cookie bitwise and send it back to server to observe the effects.",
                                        "Replace cookie with an older legitimate cookie and send it back to server to observe the effects. This technique would be helpful in cases where the cookie contains a \"points balance\" for a given user where the points have some value. The user may spend his points and then replace his cookie with an older one to restore his balance."
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "Target server software must be a HTTP daemon that relies on cookies.",
                            "The cookies must contain sensitive information.",
                            "The adversary must be able to make HTTP requests to the server, and the cookie must be contained in the reply."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "There are two main attack vectors for exploiting poorly protected session variables like cookies. One is the local machine itself which can be exploited directly at the physical level or indirectly through XSS and phishing. In addition, the man in the middle attack relies on a network sniffer, proxy, or other intermediary to intercept the subject's credentials and use them to impersonate the digital subject on the host. The issue is that once the credentials are intercepted, impersonation is trivial for the adversary to accomplish if no other protection mechanisms are in place."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2010-5148",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-5148",
                                        "description": null
                                    },
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2016-0353",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0353",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "HTTP cookie",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Malicious input delivered through cookie in HTTP Request.",
                        "activation_zone": {
                            "description": "Client software, such as a browser and its component libraries, or an intermediary",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7556f7a6-15a0-4c8d-8af6-8a83be5472b6",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Retrieve Embedded Sensitive Data",
                    "description": [
                        "An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-37",
                            "url": "https://capec.mitre.org/data/definitions/37.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Identify Target",
                                    "description": [
                                        "Attacker identifies client components to extract information from. These may be binary executables, class files, shared libraries (e.g., DLLs), configuration files, or other system files."
                                    ],
                                    "steps": [
                                        "Binary file extraction. The attacker extracts binary files from zips, jars, wars, PDFs or other composite formats.",
                                        "Package listing. The attacker uses a package manifest provided with the software installer, or the filesystem itself, to identify component files suitable for attack."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Apply mining techniques",
                                    "description": [
                                        "The attacker then uses a variety of techniques, such as sniffing, reverse-engineering, and cryptanalysis to extract the information of interest."
                                    ],
                                    "steps": [
                                        "API Profiling. The attacker monitors the software's use of registry keys or other operating system-provided storage locations that can contain sensitive information.",
                                        "Execution in simulator. The attacker physically removes mass storage from the system and explores it using a simulator, external system, or other debugging harness.",
                                        "Common decoding methods. The attacker applies methods to decode such encodings and compressions as Base64, unzip, unrar, RLE decoding, gzip decompression and so on.",
                                        "Common data typing. The attacker looks for common file signatures for well-known file types (JPEG, TIFF, ASN.1, LDIF, etc.). If the signatures match, he attempts decoding in that format."
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "In order to feasibly execute this type of attack, some valuable data must be present in client software.",
                            "Additionally, this information must be unprotected, or protected in a flawed fashion, or through a mechanism that fails to resist reverse engineering, statistical, or other attack."
                        ],
                        "severity": "Very High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "Using a tool such as 'strings' or similar to pull out text data, perhaps part of a database table, that extends beyond what a particular user's purview should be."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "An attacker can also use a decompiler to decompile a downloaded Java applet in order to look for information such as hardcoded IP addresses, file paths, passwords or other such contents."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Attacker uses a tool such as a browser plug-in to pull cookie or other token information that, from a previous user at the same machine (perhaps a kiosk), allows the attacker to log in as the previous user."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Attackers may confine (and succeed with) probing as simple as deleting a cache or data file, or less drastically twiddling its bits and then testing the mutation's effect on an executing client.",
                            "At the other extreme, attackers capable of reverse engineering client code will have the ability to remove functionality or identify the whereabouts of sensitive data through white box analysis, such as review of reverse-engineered code."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Medium",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--93a895fd-711a-40c0-bcb6-49a5f73e5eef",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Harvesting Usernames or UserIDs via Application API Event Monitoring",
                    "description": [
                        "An attacker hosts an event within an application framework and then monitors the data exchanged during the course of the event for the purpose of harvesting any important data leaked during the transactions. One example could be harvesting lists of usernames or userIDs for the purpose of sending spam messages to those users. One example of this type of attack involves the attacker creating an event within the sub-application. Assume the attacker hosts a \"virtual sale\" of rare items. As other users enter the event, the attacker records via MITM proxy the user_ids and usernames of everyone who attends. The attacker would then be able to spam those users within the application using an automated script."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-383",
                            "url": "https://capec.mitre.org/data/definitions/383.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Low",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--1719abae-1434-4a8c-821d-cd801ad8cead",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Application API Message Manipulation via Man-in-the-Middle",
                    "description": [
                        "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack can allow the attacker to gain unauthorized privileges within the application, or conduct attacks such as phishing, deceptive strategies to spread malware, or traditional web-application attacks. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system. Despite the use of MITM software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. Additionally, it is not true \"Man-in-the-Middle\" attack at the network layer, but an application-layer attack the root cause of which is the master applications trust in the integrity of code supplied by the client."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-384",
                            "url": "https://capec.mitre.org/data/definitions/384.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Low",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--945ae331-1b5a-4556-8eb8-1765669acffa",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Transaction or Event Tampering via Application API Manipulation",
                    "description": [
                        "An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, substitute one item or another, spoof an existing item and conduct a false exchange, or otherwise change the amounts or identity of what is being exchanged. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in game can be monetized via sales for coin, virtual dollars, etc. The purpose of the attack is for the attack to scam the victim by trapping the data packets involved the exchange and altering the integrity of the transfer process."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-385",
                            "url": "https://capec.mitre.org/data/definitions/385.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a6f2cfd8-1765-4fd4-ae2f-8b9823cfbf89",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Application API Navigation Remapping",
                    "description": [
                        "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of links/buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains links/buttons that point to an attacker controlled destination. Some applications make navigation remapping more difficult to detect because the actual HREF values of images, profile elements, and links/buttons are masked. One example would be to place an image in a user's photo gallery that when clicked upon redirected the user to an off-site location. Also, traditional web vulnerabilities (such as CSRF) can be constructed with remapped buttons or links. In some cases navigation remapping can be used for Phishing attacks or even means to artificially boost the page view, user site reputation, or click-fraud."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-386",
                            "url": "https://capec.mitre.org/data/definitions/386.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--332df2d7-94e2-44c8-bd6d-64248245248a",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Navigation Remapping To Propagate Malicious Content",
                    "description": [
                        "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages and thereby circumvent the expected application logic. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain deceptive links, spam-like content, or links to the attackers' code. In general, content-spoofing within an application API can be employed to stage many different types of attacks varied based on the attackers' intent. When the goal is to spread malware, deceptive content is created such as modified links, buttons, or images, that entice users to click on those items, all of which point to a malicious URI. The techniques require use of specialized software that allow the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the destination of various application interface elements."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-387",
                            "url": "https://capec.mitre.org/data/definitions/387.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c2ecf8a6-407b-42a6-9e01-28a69e073c96",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Application API Button Hijacking",
                    "description": [
                        "An attacker manipulates either egress or ingress data from a client within an application framework in order to change the destination and/or content of buttons displayed to a user within API messages. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that looks authentic but contains buttons that point to an attacker controlled destination. For example, an in-game event occurs and the attacker traps the result, which turns out to be a form that will be populated to their primary profile. The attacker, using a MITM proxy, observes the following data:",
                        "By altering the destination of \"Claim_Link\" to point to the attackers' server an unwitting victim can be enticed to click the link. Another example would be for the attacker to rewrite the button destinations for an event so that clicking \"Yes\" or \"No\" causes the user to load the attackers' code.",
                        "[Button][Claim_Item]Sourdough_Cookie[URL_IMG]foo[/URL_IMG][Claim_Link]bar[/Claim_Link]"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-388",
                            "url": "https://capec.mitre.org/data/definitions/388.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Targeted software is utilizing application framework APIs"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0e0713e0-2cdf-4dee-badc-9e696288f106",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "name": "Manipulating Opaque Client-based Data Tokens",
                    "description": [
                        "In circumstances where an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) that data can be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker. In this pattern an attacker undermines the assumption that client side tokens have been adequately protected from tampering through use of encryption or obfuscation."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-39",
                            "url": "https://capec.mitre.org/data/definitions/39.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Enumerate information passed to client side",
                                    "description": [
                                        "The attacker identifies the parameters used as part of tokens to take business or security decisions"
                                    ],
                                    "steps": [
                                        "Use WebScarab to reveal hidden fields while browsing.",
                                        "Use a sniffer to capture packets",
                                        "View source of web page to find hidden fields",
                                        "Examine URL to see if any opaque tokens are in it",
                                        "Disassemble or decompile client-side application",
                                        "Use debugging tools such as File Monitor, Registry Monitor, Debuggers, etc."
                                    ]
                                },
                                {
                                    "title": "Determine protection mechanism for opaque token",
                                    "description": [
                                        "The attacker determines the protection mechanism used to protect the confidentiality and integrity of these data tokens. They may be obfuscated or a full blown encryption may be used."
                                    ],
                                    "steps": [
                                        "Look for signs of well-known character encodings",
                                        "Look for cryptographic signatures",
                                        "Look for delimiters or other indicators of structure"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Modify parameter/token values",
                                    "description": [
                                        "Trying each parameter in turn, the attacker modifies the values"
                                    ],
                                    "steps": [
                                        "Modify tokens logically",
                                        "Modify tokens arithmetically",
                                        "Modify tokens bitwise",
                                        "Modify structural components of tokens",
                                        "Modify order of parameters/tokens"
                                    ]
                                },
                                {
                                    "title": "Cycle through values for each parameter.",
                                    "description": [
                                        "Depending on the nature of the application, the attacker now cycles through values of each parameter and observes the effects of this modification in the data returned by the server"
                                    ],
                                    "steps": [
                                        "Use network-level packet injection tools such as netcat",
                                        "Use application-level data modification tools such as Tamper Data, WebScarab, TamperIE, etc.",
                                        "Use modified client (modified by reverse engineering)",
                                        "Use debugging tools to modify data in client"
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "An attacker already has some access to the system or can steal the client based data tokens from another user who has access to the system.",
                            "For an Attacker to viably execute this attack, some data (later interpreted by the application) must be held client-side in a way that can be manipulated without detection. This means that the data or tokens are not CRCd as part of their value or through a separate meta-data store elsewhere."
                        ],
                        "severity": "Medium",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "With certain price watching websites, that aggregate products available prices, the user can buy items through whichever vendors has product availability, the best price, or other differentiator. Once a user selects an item, the site must broker the purchase of that item with the vendor. Because vendors sell the same product through different channel partners at different prices, token exchange between price watching sites and selling vendors will often contain pricing information. With some price watching sites, manipulating URL-data (which is encrypted) even opaquely yields different prices charged by the fulfilling vendor. If the manipulated price turns out higher, the Attacker can cancel purchase. If the Attacker succeeded in manipulating the token and creating a lower price, he/she proceeds."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Upon successful authentication user is granted an encrypted authentication cookie by the server and it is stored on the client. One piece of information stored in the authentication cookie reflects the access level of the user (e.g. \"u\" for user). The authentication cookie is encrypted using the Electronic Code Book (ECB) mode, that naively encrypts each of the plaintext blocks to each of the ciphertext blocks separately. An attacker knows the structure of the cookie and can figure out what bits (encrypted) store the information relating to the access level of the user. An attacker modifies the authentication cookie and effectively substitutes \"u\" for \"a\" by flipping some of the corresponding bits of ciphertext (trial and error). Once the correct \"flip\" is found, when the system is accessed, the attacker is granted administrative privileges in the system. Note that in this case an attacker did not have to figure out the exact encryption algorithm or find the secret key, but merely exploit the weakness inherent in using the ECB encryption mode."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Archangel Weblog 0.90.02 allows remote attackers to bypass authentication by setting the ba_admin cookie to 1."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-0944",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-0944",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "Tamper with the client side data token and observe the effects it has on interaction with the system.",
                            "This attack is in and of itself a trial-and-error-based probing technique."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--2e28dade-577f-4848-9b9f-85654b1dd4f1",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "name": "Using Meta-characters in E-mail Headers to Inject Malicious Payloads",
                    "description": [
                        "This type of attack involves an attacker leveraging meta-characters in email headers to inject improper behavior into email programs.",
                        "Email software has become increasingly sophisticated and feature-rich. In addition, email applications are ubiquitous and connected directly to the Web making them ideal targets to launch and propagate attacks. As the user demand for new functionality in email applications grows, they become more like browsers with complex rendering and plug in routines. As more email functionality is included and abstracted from the user, this creates opportunities for attackers. Virtually all email applications do not list email header information by default, however the email header contains valuable attacker vectors for the attacker to exploit particularly if the behavior of the email client application is known. Meta-characters are hidden from the user, but can contain scripts, enumerations, probes, and other attacks against the user's system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-41",
                            "url": "https://capec.mitre.org/data/definitions/41.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": [
                                {
                                    "title": "Identify and characterize metacharacter-processing vulnerabilities in email headers",
                                    "description": [
                                        "An attacker creates emails with headers containing various metacharacter-based malicious payloads in order to determine whether the target application processes the malicious content and in what manner it does so."
                                    ],
                                    "steps": [
                                        "Use an automated tool (fuzzer) to create malicious emails headers containing metacharacter-based payloads.",
                                        "Manually tampering email headers to inject malicious metacharacter-based payload content in them."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "An attacker leverages vulnerabilities identified during the Experiment Phase to inject malicious email headers and cause the targeted email application to exhibit behavior outside of its expected constraints."
                                    ],
                                    "steps": [
                                        "Send emails with specifically-constructed, metacharacter-based malicious payloads in the email headers to targeted systems running email processing applications identified as vulnerable during the Experiment Phase."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "This attack targets most widely deployed feature rich email applications, including web based email programs."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "To:<someone@example.com>",
                                    "From:<badguy@example.com>",
                                    "Header<SCRIPT>payme</SCRIPT>def: whatever"
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Meta-characters are among the most valuable tools attackers have to deceive users into taking some action on their behalf. E-mail is perhaps the most efficient and cost effective attack distribution tool available, this has led to the phishing pandemic.",
                                    "Meta-characters like \\w \\s \\d ^ can allow the attacker to escape out of the expected behavior to execute additional commands. Escaping out the process (such as email client) lets the attacker run arbitrary code in the user's process."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": "Email",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Metacharacters",
                        "activation_zone": {
                            "description": "Email processing routines of Email program",
                            "categories": [
                                "E-mail System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fbf97797-e538-4128-9e1b-d2f084defc6e",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "name": "Exploiting Multiple Input Interpretation Layers",
                    "description": [
                        "An attacker supplies the target software with input data that contains sequences of special characters designed to bypass input validation logic. This exploit relies on the target making multiples passes over the input data and processing a \"layer\" of special characters with each pass. In this manner, the attacker can disguise input that would otherwise be rejected as invalid by concealing it with layers of special/escape characters that are stripped off by subsequent processing steps.",
                        "The goal is to first discover cases where the input validation layer executes before one or more parsing layers. That is, user input may go through the following logic in an application:",
                        "In such cases, the attacker will need to provide input that will pass through the input validator, but after passing through parser2, will be converted into something that the input validator was supposed to stop.",
                        "<parser1>",
                        "--> <input validator> -->",
                        "<parser2>"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-43",
                            "url": "https://capec.mitre.org/data/definitions/43.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Determine application/system inputs where bypassing input validation is desired",
                                    "description": [
                                        "The attacker first needs to determine all of the application's/system's inputs where input validation is being performed and where he/she wants to bypass it."
                                    ],
                                    "steps": [
                                        "While using an application/system, the attacker discovers an input where validation is stopping him/her from performing some malicious or unauthorized actions."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Determine which character encodings are accepted by the application/system",
                                    "description": [
                                        "The attacker then needs to provide various character encodings to the application/system and determine which ones are accepted. The attacker will need to observe the application's/system's response to the encoded data to determine whether the data was interpreted properly."
                                    ],
                                    "steps": [
                                        "Determine which escape characters are accepted by the application/system. A common escape character is the backslash character, '\\'",
                                        "Determine whether URL encoding is accepted by the application/system.",
                                        "Determine whether UTF-8 encoding is accepted by the application/system.",
                                        "Determine whether UTF-16 encoding is accepted by the application/system.",
                                        "Determine if any other encodings are accepted by the application/system."
                                    ]
                                },
                                {
                                    "title": "Combine multiple encodings accepted by the application.",
                                    "description": [
                                        "The attacker now combines encodings accepted by the application. The attacker may combine different encodings or apply the same encoding multiple times."
                                    ],
                                    "steps": [
                                        "Combine same encoding multiple times and observe its effects. For example, if special characters are encoded with a leading backslash, then the following encoding may be accepted by the application/system: \"\\\\\\.\". With two parsing layers, this may get converted to \"\\.\" after the first parsing layer, and then, to \".\" after the second. If the input validation layer is between the two parsing layers, then \"\\\\\\.\\\\\\.\" might pass a test for \"..\" but still get converted to \"..\" afterwards. This may enable directory traversal attacks.",
                                        "Combine multiple encodings and observe the effects. For example, the attacker might encode \".\" as \"\\.\", and then, encode \"\\.\" as \"&#92;&#46;\", and then, encode that using URL encoding to \"%26%2392%3B%26%2346%3B\""
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Leverage ability to bypass input validation",
                                    "description": [
                                        "Attacker leverages his ability to bypass input validation to gain unauthorized access to system. There are many attacks possible, and a few examples are mentioned here."
                                    ],
                                    "steps": [
                                        "Gain access to sensitive files.",
                                        "Perform command injection.",
                                        "Perform SQL injection.",
                                        "Perform XSS attacks."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "User input is used to construct a command to be executed on the target system or as part of the file name.",
                            "Multiple parser passes are performed on the data supplied by the user."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "Using Escapes",
                                    "The backslash character provides a good example of the multiple-parser issue. A backslash is used to escape characters in strings, but is also used to delimit directories on the NT file system. When performing a command injection that includes NT paths, there is usually a need to \"double escape\" the backslash. In some cases, a quadruple escape is necessary.",
                                    "This diagram shows each successive layer of parsing translating the backslash character. A double backslash becomes a single as it is parsed. By using quadruple backslashes, the attacker is able to control the result in the final string.",
                                    "[R.43.1][REF-2]",
                                    "Original String: C:\\\\\\\\winnt\\\\\\\\system32\\\\\\\\cmd.exe /c",
                                    "<parsing layer>",
                                    "Interim String: C:\\\\winnt\\\\system32\\\\cmd.exe /c",
                                    "<parsing layer>",
                                    "Final String: C:\\winnt\\system32\\cmd.exe /c"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Initially a fuzzer can be used to see what the application is successfully and escaping and what causes problems. This may be a good starting point.",
                            "Manually try to introduce multiple layers of control characters and see how many layers the application can escape."
                        ],
                        "indicators": [
                            "Control characters are being detected by the filters repeatedly."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "name": "Buffer Overflow via Symbolic Links",
                    "description": [
                        "This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker creates or modifies a symbolic link pointing to a resources (e.g., file, directory). The content of the symbolic link file includes out-of-bounds (e.g. excessive length) data."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The target host consumes the data pointed to by the symbolic link file. The target host may either intentionally expect to read a symbolic link or it may be fooled by the replacement of the original resource and read the attackers' symbolic link."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "While consuming the data, the target host does not check for buffer boundary which can lead to a buffer overflow. If the content of the data is controlled by the attacker, this is an avenue for remote code execution."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The attacker can create symbolic link on the target host.",
                            "The target host does not perform correct boundary checking while consuming data from a resources."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Attack Example: Overflow with Symbolic Links in EFTP Server",
                                    "The EFTP server has a buffer overflow that can be exploited if an attacker uploads a .lnk (link) file that contains more than 1,744 bytes. This is a classic example of an indirect buffer overflow. First the attacker uploads some content (the link file) and then the attacker causes the client consuming the data to be exploited. In this example, the ls command is exploited to compromise the server software."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "The attacker will look for temporary files in the world readable directories. Those temporary files are often created and read by the system.",
                            "The attacker will look for Symbolic link or link target file that she can override."
                        ],
                        "indicators": [
                            "An attacker creating or modifying Symbolic links is a potential signal of attack in progress.",
                            "An attacker deleting temporary files can also be a sign that the attacker is trying to replace legitimate resources with malicious ones."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: crash / exit / restart"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read memory"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify memory"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The resource pointed to by the Symbolic link (e.g., file, directory, etc.)",
                            "categories": [
                                "Server"
                            ]
                        },
                        "payload": "The buffer overrun by the attacker.",
                        "activation_zone": {
                            "description": "When the function returns control to the main program, it jumps to the return address portion of the stack frame. Unfortunately that return address may have been overwritten by the overflowed buffer and the address may contain a call to a privileged command or to a malicious code.",
                            "categories": [
                                "Buffer"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--10d68cb6-75fa-433b-ab4f-2632358ba0e6",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "name": "Creating a Rogue Certification Authority Certificate",
                    "description": [
                        "An adversary exploits a weakness in the MD5 hash algorithm (weak collision resistance) to generate a certificate signing request (CSR) that contains collision blocks in the \"to be signed\" part. The adversary specially crafts two different, but valid X.509 certificates that when hashed with the MD5 algorithm would yield the same value. The adversary then sends the CSR for one of the certificates to the Certification Authority which uses the MD5 hashing algorithm. That request is completely valid and the Certificate Authority issues an X.509 certificate to the adversary which is signed with its private key. An adversary then takes that signed blob and inserts it into another X.509 certificate that the attacker generated. Due to the MD5 collision, both certificates, though different, hash to the same value and so the signed blob works just as well in the second certificate.",
                        "The net effect is that the adversary's second X.509 certificate, which the Certification Authority has never seen, is now signed and validated by that Certification Authority. To make the attack more interesting, the second certificate could be not just a regular certificate, but rather itself a signing certificate. Thus the adversary is able to start their own Certification Authority that is anchored in its root of trust in the legitimate Certification Authority that has signed the attackers' first X.509 certificate. If the original Certificate Authority was accepted by default by browsers, so will now the Certificate Authority set up by the adversary and of course any certificates that it signs. So the adversary is now able to generate any SSL certificates to impersonate any web server, and the user's browser will not issue any warning to the victim. This can be used to compromise HTTPS communications and other types of systems where PKI and X.509 certificates may be used (e.g., VPN, IPSec) ."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-459",
                            "url": "https://capec.mitre.org/data/definitions/459.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Certification Authority is using the MD5 hash function to generate the certificate hash to be signed"
                        ],
                        "severity": "Very High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--784ca6d3-d123-4e5c-a9c5-38a6dca214a9",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "name": "HTTP Parameter Pollution (HPP)",
                    "description": [
                        "An attacker overrides or adds HTTP GET/POST parameters by injecting query string delimiters. Via HPP it may be possible to override existing hardcoded HTTP parameters, modify the application behaviors, access and, potentially exploit, uncontrollable variables, and bypass input validation checkpoints and WAF rules."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-460",
                            "url": "https://capec.mitre.org/data/definitions/460.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "HTTP protocol is used with some GET/POST parameters passed"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e7f93b81-aee2-4b29-8c28-6e1d0e6d54c4",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "name": "Web Services API Signature Forgery Leveraging Hash Function Extension Weakness",
                    "description": [
                        "When web services require callees to authenticate, they sometimes issue a token / secret to the caller that the caller is to use to sign their web service calls. In one such scheme the caller when constructing a request would concatenate all of the parameters passed to the web service with the provided authentication token and then generate a hash of the concatenated string (e.g., MD5, SHA1, etc.). That hash then forms the signature that is passed to the web service which is used on the server side to verify the origin authenticity and integrity of the message. There is a practical attack against an authentication scheme of this nature that makes use of the hash function extension / padding weakness. Leveraging this weakness, an attacker, who does not know the secret token, is able to modify the parameters passed to the web service by generating their own call and still generate a legitimate signature hash. For instance, consider the message to be passed to the web service is M (this message includes the parameters passed to the web service concatenated with the secret token / key bytes). The message M is hashed and that hash is passed to the web service and is used for authentication. The attacker does not know M, but can see Hash (M) and Length (M). The attacker can then compute Hash (M || Padding (M) II M') for any M'. The attacker does not know the entire message M, specifically the attacker does not know the secret bytes, but that does not matter. The attacker is still able to sign their own message M' and make the called web service verify the integrity of the message without an error. Because of the iterative design of the hash function, it is possible, from only the hash of a message and its length, to compute the hash of longer messages that start with the initial message and include the padding required for the initial message to reach a multiple of 512 bits. It is important to note that the attack not limited to MD5 and will work just as well with another hash function like SHA1."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-461",
                            "url": "https://capec.mitre.org/data/definitions/461.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Web services check the signature of the API calls Authentication tokens / secrets are shared between the server and the legitimate client The API call signature is generated by concatenating the parameter list with the shared secret and hashing the result. An iterative hash function like MD5 and SHA1 is used. An attacker is able to intercept or in some other way gain access to the information passed between the legitimate client and the server in order to retrieve the hash value and length of the original message. The communication channel between the client and the server is not secured via channel security such as TLS"
                        ],
                        "severity": "High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6dcd0086-b1de-44eb-8cc4-c077c98a9fb9",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "name": "Padding Oracle Crypto Attack",
                    "description": [
                        "An adversary is able to efficiently decrypt data without knowing the decryption key if a target system leaks data on whether or not a padding error happened while decrypting the ciphertext. A target system that leaks this type of information becomes the padding oracle and an adversary is able to make use of that oracle to efficiently decrypt data without knowing the decryption key by issuing on average 128*b calls to the padding oracle (where b is the number of bytes in the ciphertext block). In addition to performing decryption, an adversary is also able to produce valid ciphertexts (i.e., perform encryption) by using the padding oracle, all without knowing the encryption key.",
                        "Any cryptosystem can be vulnerable to padding oracle attacks if the encrypted messages are not authenticated to ensure their validity prior to decryption, and then the information about padding error is leaked to the adversary. This attack technique may be used, for instance, to break CAPTCHA systems or decrypt/modify state information stored in client side objects (e.g., hidden fields or cookies).",
                        "This attack technique is a side-channel attack on the cryptosystem that uses a data leak from an improperly implemented decryption routine to completely subvert the cryptosystem. The one bit of information that tells the adversary whether a padding error during decryption has occurred, in whatever form it comes, is sufficient for the adversary to break the cryptosystem. That bit of information can come in a form of an explicit error message about a padding error, a returned blank page, or even the server taking longer to respond (a timing attack).",
                        "This attack can be launched cross domain where an adversary is able to use cross-domain information leaks to get the bits of information from the padding oracle from a target system / service with which the victim is communicating. To do so an adversary sends a request containing ciphertext to the target system. Due to the browser's same origin policy, the adversary is not able to see the response directly, but can use cross-domain information leak techniques to still get the information needed (i.e., information on whether or not a padding error has occurred). For instance, this can be done using \"img\" tag plus the onerror()/onload() events. The adversary's JavaScript can make web browsers to load an image on the target site, and know if the image is loaded or not. This is 1-bit information needed for the padding oracle attack to work: if the image is loaded, then it is valid padding, otherwise it is not."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-463",
                            "url": "https://capec.mitre.org/data/definitions/463.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The decryption routine does not properly authenticate the message / does not verify its integrity prior to performing the decryption operation",
                            "The target system leaks data (in some way) on whether a padding error has occurred when attempting to decrypt the ciphertext.",
                            "The padding oracle remains available for enough time / for as many requests as needed for the adversary to decrypt the ciphertext."
                        ],
                        "severity": "High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--4e339b96-a09e-40ed-a018-8753f6d0df8d",
                    "created": "2018-05-15T08:54:56.904Z",
                    "modified": "2018-05-15T08:54:56.904Z",
                    "name": "Evercookie",
                    "description": [
                        "An attacker creates a very persistent cookie that stays present even after the user thinks it has been removed. The cookie is stored on the victim's machine in over ten places to include: Standard HTTP Cookies, Local Shared Objects (Flash Cookies), Silverlight Isolated Storage, Storing cookies in RGB values of auto-generated, force-cached, PNGs using HTML5 Canvas tag to read pixels (cookies) back out, Storing cookies in Web History, Storing cookies in HTTP ETags, Storing cookies in Web cache, window.name caching, Internet Explorer userData storage, HTML5 Session Storage, HTML5 Local Storage, HTML5 Global Storage, HTML5 Database Storage via SQLite, among others.",
                        "When the victim clears the cookie cache via traditional means inside the browser, that operation removes the cookie from certain places but not others. The malicious code then replicates the cookie from all of the places where it was not deleted to all of the possible storage locations once again. So the victim again has the cookie in all of the original storage locations. In other words, failure to delete the cookie in even one location will result in the cookie's resurrection everywhere. The evercookie will also persist across different browsers because certain stores (e.g., Local Shared Objects) are shared between different browsers."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-464",
                            "url": "https://capec.mitre.org/data/definitions/464.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The victim's browser is not configured to reject all cookies The victim visits a website that serves the attackers' evercookie"
                        ],
                        "severity": "Medium",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--8b73eade-bd25-4efa-b488-c07aef315c58",
                    "created": "2018-05-15T08:54:56.904Z",
                    "modified": "2018-05-15T08:54:56.904Z",
                    "name": "Cross Site Identification",
                    "description": [
                        "An attacker harvests identifying information about a victim via an active session that the victim's browser has with a social networking site. A victim may have the social networking site open in one tab or perhaps is simply using the \"remember me\" feature to keep his or her session with the social networking site active. An attacker induces a payload to execute in the victim's browser that transparently to the victim initiates a request to the social networking site (e.g., via available social network site APIs) to retrieve identifying information about a victim. While some of this information may be public, the attacker is able to harvest this information in context and may use it for further attacks on the user (e.g., spear phishing).",
                        "In one example of an attack, an attacker may post a malicious posting that contains an image with an embedded link. The link actually requests identifying information from the social networking site. A victim who views the malicious posting in his or her browser will have sent identifying information to the attacker, as long as the victim had an active session with the social networking site. There are many other ways in which the attacker may get the payload to execute in the victim's browser mainly by finding a way to hide it in some reputable site that the victim visits. The attacker could also send the link to the victim in an e-mail and trick the victim into clicking on the link.",
                        "This attack is basically a cross site request forgery attack with two main differences. First, there is no action that is performed on behalf of the user aside from harvesting information. So standard CSRF protection may not work in this situation. Second, what is important in this attack pattern is the nature of the data being harvested, which is identifying information that can be obtained and used in context. This real time harvesting of identifying information can be used as a prelude for launching real time targeted social engineering attacks on the victim."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-467",
                            "url": "https://capec.mitre.org/data/definitions/467.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The victim has an active session with the social networking site."
                        ],
                        "severity": "Low",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--5e2f5c83-ea72-4731-944b-27a936d9ae14",
                    "created": "2018-05-15T08:54:56.905Z",
                    "modified": "2018-05-15T08:54:56.905Z",
                    "name": "Expanding Control over the Operating System from the Database",
                    "description": [
                        "An attacker is able to leverage access gained to the database to read / write data to the file system, compromise the operating system, create a tunnel for accessing the host machine, and use this access to potentially attack other machines on the same network as the database machine.",
                        "Traditionally SQL injections attacks are viewed as a way to gain unauthorized read access to the data stored in the database, modify the data in the database, delete the data, etc. However, almost every data base management system (DBMS) system includes facilities that if compromised allow an attacker complete access to the file system, operating system, and full access to the host running the database. The attacker can then use this privileged access to launch subsequent attacks.",
                        "These facilities include dropping into a command shell, creating user defined functions that can call system level libraries present on the host machine, stored procedures, etc."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-470",
                            "url": "https://capec.mitre.org/data/definitions/470.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "A vulnerable DBMS is used A SQL injection exists that gives an attacker access to the database or an attacker has access to the DBMS via other means"
                        ],
                        "severity": "Very High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7b3c9fbf-4fa1-4952-93d4-8505180ecf98",
                    "created": "2018-05-15T08:54:56.905Z",
                    "modified": "2018-05-15T08:54:56.905Z",
                    "name": "Signature Spoof",
                    "description": [
                        "An attacker generates a message or datablock that causes the recipient to believe that the message or datablock was generated and cryptographically signed by an authoritative or reputable source, misleading a victim or victim operating system into performing malicious actions."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-473",
                            "url": "https://capec.mitre.org/data/definitions/473.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The victim or victim system is dependent upon a cryptographic signature-based verification system for validation of one or more security events or actions.",
                            "The validation can be bypassed via an attacker-provided signature that makes it appear that the legitimate authoritative or reputable source provided the signature."
                        ],
                        "severity": null,
                        "likelihood": null,
                        "examples": [
                            {
                                "description": [
                                    "An attacker provides a victim with a malicious executable disguised as a legitimate executable from an established software by signing the executable with a forged cryptographic key. The victim's operating system attempts to verify the executable by checking the signature, the signature is considered valid, and the attackers' malicious executable runs."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "An attacker exploits weaknesses in a cryptographic algorithm to that allow a private key for a legitimate software vendor to be reconstructed, attacker-created malicious software is cryptographically signed with the reconstructed key, and is installed by the victim operating system disguised as a legitimate software update from the software vendor."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Access_Control",
                                    "Authentication"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--eeb45418-634e-4f2c-9001-33a309715db6",
                    "created": "2018-05-15T08:54:56.905Z",
                    "modified": "2018-05-15T08:54:56.905Z",
                    "name": "Signature Spoofing by Key Theft",
                    "description": [
                        "An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-474",
                            "url": "https://capec.mitre.org/data/definitions/474.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An authoritative or reputable signer is storing their private signature key with insufficient protection."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--93f4dc84-5043-4e9b-a902-c51b0201d64f",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "name": "Signature Spoofing by Mixing Signed and Unsigned Content",
                    "description": [
                        "An attacker exploits the underlying complexity of a data structure that allows for both signed and unsigned content, to cause unsigned data to be processed as though it were signed data."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-477",
                            "url": "https://capec.mitre.org/data/definitions/477.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Signer and recipient are using complex data storage structures that allow for a mix between signed and unsigned data",
                            "Recipient is using signature verification software that does not maintain separation between signed and unsigned data once the signature has been verified."
                        ],
                        "severity": "High",
                        "likelihood": "Low",
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": null,
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--69fdfde6-51a4-4dd8-9f14-32de0403dc25",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "name": "Password Recovery Exploitation",
                    "description": [
                        "An attacker may take advantage of the application feature to help users recover their forgotten passwords in order to gain access into the system with the same privileges as the original user. Generally password recovery schemes tend to be weak and insecure. Most of them use only one security question . For instance, mother's maiden name tends to be a fairly popular one. Unfortunately in many cases this information is not very hard to find, especially if the attacker knows the legitimate user.",
                        "These generic security questions are also re-used across many applications, thus making them even more insecure. An attacker could for instance overhear a coworker talking to a bank representative at the work place and supplying their mother's maiden name for verification purposes. An attacker can then try to log in into one of the victim's accounts, click on \"forgot password\" and there is a good chance that the security question there will be to provide mother's maiden name.",
                        "A weak password recovery scheme totally undermines the effectiveness of a strong password scheme."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-50",
                            "url": "https://capec.mitre.org/data/definitions/50.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "Understand the password recovery mechanism and how it works."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "Find a weakness in the password recovery mechanism and exploit it. For instance, a weakness may be that a standard single security question is used with an easy to determine answer."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The system allows users to recover their passwords and gain access back into the system.",
                            "Password recovery mechanism has been designed or implemented insecurely.",
                            "Password recovery mechanism relies only on something the user knows and not something the user has.",
                            "No third party intervention is required to use the password recovery mechanism."
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "An attacker clicks on the \"forgot password\" and is presented with a single security question. The question is regarding the name of the first dog of the user. The system does not limit the number of attempts to provide the dog's name. An attacker goes through a list of 100 most popular dog names and finds the right name, thus getting the ability to reset the password and access the system."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "phpBanner Exchange is a PHP script (using the mySQL database) that facilitates the running of a banner exchange without extensive knowledge of PHP or mySQL.",
                                    "A SQL injection was discovered in the password recovery module of the system that allows recovering an arbitrary user's password and taking over his account. The problem is due to faulty input sanitization in the phpBannerExchange, specifically the e-mail address of the user which is requested by the password recovery module.",
                                    "The e-mail address requested by the password recovery module on the resetpw.php page. That e-mail address is validated with the following regular expression:",
                                    "A bug in the implementation of eregi() allows to pass additional character using a null byte \"\\0\". Since eregi() is implemented in C, the variable $email is treated as a zero-terminated string. All characters following the Null Byte will not be recognized by the regular expression. So an e-mail address can be provided that includes the special character \" ' \" to break the SQL query below (and it will not be rejected by the regular expression because of the null byte trick). So a SQL injection becomes possible:",
                                    "This query will return a non-zero result set even though the email supplied (attacker's email) is not in the database.",
                                    "Then a new password for the user is generated and sent to the $email address, an e-mail address controlled by the attacker. An attacker can then log in into the system.",
                                    "if(!eregi(\"^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*",
                                    "(\\.[a-z]{2,3})$\", $email)){",
                                    "$get_info=mysql_query(\"select * from banneruser where",
                                    "email='$email' \");"
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-3013",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-3013",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "Trial and error (brute force).",
                            "Social Engineering."
                        ],
                        "indicators": [
                            "Many incorrect attempts to answer the security question."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--84761ad0-5f9a-4af2-a08c-ca5899e83c13",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "name": "Poison Web Service Registry",
                    "description": [
                        "SOA and Web Services often use a registry to perform look up, get schema information, and metadata about services. A poisoned registry can redirect (think phishing for servers) the service requester to a malicious service provider, provide incorrect information in schema or metadata (to effect a denial of service), and delete information about service provider interfaces.",
                        "WS-Addressing is used to virtualize services, provide return addresses and other routing information, however, unless the WS-Addressing headers are protected they are vulnerable to rewriting. The attacker that can rewrite WS-addressing information gains the ability to route service requesters to any service providers, and the ability to route service provider response to any service.",
                        "Content in a registry is deployed by the service provider. The registry in an SOA or Web Services system can be accessed by the service requester via UDDI or other protocol. The basic flow for the attacker consists of either altering the data at rest in the registry or uploading malicious content by spoofing a service provider. The service requester is then redirected to send its requests and/or responses to services the attacker controls."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-51",
                            "url": "https://capec.mitre.org/data/definitions/51.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The attacker must be able to write to resources or redirect access to the service registry."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "WS-Addressing provides location and metadata about the service endpoints. An extremely hard to detect attack is an attacker who updates the WS-Addressing header, leaves the standard service request and service provider addressing and header information intact, but adds an additional WS-Addressing Replyto header. In this case the attacker is able to send a copy (like a cc in mail) of every result the service provider generates. So every query to the bank account service, would generate a reply message of the transaction status to both the authorized service requester and an attacker service. This would be extremely hard to detect at runtime.",
                                    "In this example \"evilsite\" is an additional reply to address with full access to all the messages that the authorized (validClient) has access to. Since this is registered with ReplyTo header it will not generate a Soap fault.",
                                    "<S:Header>",
                                    "</S:Header>",
                                    "<wsa:MessageID>",
                                    "</wsa:MessageID>",
                                    "<wsa:ReplyTo>",
                                    "</wsa:ReplyTo>",
                                    "<wsa:ReplyTo>",
                                    "</wsa:ReplyTo>",
                                    "<wsa:FaultTo>",
                                    "</wsa:FaultTo>",
                                    "http://example.com/Message",
                                    "<wsa:Address>http://valid.example/validClient</wsa:Address>",
                                    "<wsa:Address>http://evilsite/evilClient</wsa:Address>",
                                    "<wsa:Address>http://validfaults.example/ErrorHandler</wsa:Address>"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols, such as UDDI or WS-Addressing.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Command(s) executed directly on service requester, in the case of redirect, or on the service provider, in the case of the additional replyto attack.",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6f526800-3cdd-462a-ad31-77e7244cc147",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "name": "Query System for Information",
                    "description": [
                        "An adversary, aware of an application's location (and possibly authorized to use the application), probes an application's structure and evaluates its robustness by submitting requests and examining responses. Often, this is accomplished by sending variants of expected queries in the hope that these modified queries might return information beyond what the expected set of queries would provide."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-54",
                            "url": "https://capec.mitre.org/data/definitions/54.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "Determine user-controllable parameters of the application"
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "Inject each parameter with content that causes an error condition to manifest"
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "Modify the content of each parameter according to observed error conditions"
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "Repeat above steps with enough parameters until the application has been sufficiently mapped out to launch desired attack (for example, Blind SQL Injection)"
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "This class of attacks does not strictly require authorized access to the application. As Attackers use this attack process to classify, map, and identify vulnerable aspects of an application, it simply requires hypotheses to be verified, interaction with the application, and time to conduct trial-and-error activities."
                        ],
                        "severity": "Low",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Blind SQL injection is an example of this technique, applied to successful exploit."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-4705",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4705",
                                        "description": null
                                    }
                                ]
                            },
                            {
                                "description": [
                                    "Attacker sends bad data at various servlets in a J2EE system, records returned exception stack traces, and maps application functionality.",
                                    "In addition, this technique allows attackers to correlate those servlets used with the underlying open source packages (and potentially version numbers) that provide them."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": [
                            "Repeated errors generated by the same piece of code are an indication, although it requires careful monitoring of the application and its associated error logs, if any."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read memory"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Content, based on application context, crafted to elicit error conditions from the application",
                        "activation_zone": {
                            "description": "Error Handling mechanism within the application",
                            "categories": [
                                "Error Handling System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "Medium",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--0e826c12-f53e-4330-a7ee-36411629efa7",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "name": "Utilizing REST's Trust in the System Resource to Register Man in the Middle",
                    "description": [
                        "This attack utilizes a REST(REpresentational State Transfer)-style applications' trust in the system resources and environment to place man in the middle once SSL is terminated. Rest applications premise is that they leverage existing infrastructure to deliver web services functionality. An example of this is a Rest application that uses HTTP Get methods and receives a HTTP response with an XML document. These Rest style web services are deployed on existing infrastructure such as Apache and IIS web servers with no SOAP stack required. Unfortunately from a security standpoint, there frequently is no interoperable identity security mechanism deployed, so Rest developers often fall back to SSL to deliver security. In large data centers, SSL is typically terminated at the edge of the network - at the firewall, load balancer, or router. Once the SSL is terminated the HTTP request is in the clear (unless developers have hashed or encrypted the values, but this is rare). The attacker can utilize a sniffer such as Wireshark to snapshot the credentials, such as username and password that are passed in the clear once SSL is terminated.",
                        "Once the attacker gathers these credentials, they can submit requests to the web service provider just as authorized user do. There is not typically an authentication on the client side, beyond what is passed in the request itself so once this is compromised, then this is generally sufficient to compromise the service's authentication scheme."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-57",
                            "url": "https://capec.mitre.org/data/definitions/57.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Opportunity to intercept must exist beyond the point where SSL is terminated.",
                            "The attacker must be able to insert a listener actively (proxying the communication) or passively (sniffing the communication) in the client-server communication path."
                        ],
                        "severity": "Very High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "The Rest service provider uses SSL to protect the communications between the service requester (client) to the service provider. In the instance where SSL is terminated before the communications reach the web server, it is very common in enterprise data centers to terminate SSL at a router, firewall, load balancer, proxy or other device, then the attacker can insert a sniffer into the communication stream and gather all the authentication tokens (such as session credentials, username/passwords combinations, and so on). The Rest service requester and service provider do not have any way to detect this attack."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Attacker may use a network sniffer to identify authentication credentials once SSL is terminated."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "HTTP protocol communications",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Command(s) executed directly on host",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--3b2d6b47-9972-4e47-b1ef-ddfd7e54f196",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "name": "DOM-Based XSS",
                    "description": [
                        "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is inserted into the client-side HTML being parsed by a web browser. Content served by a vulnerable web application includes script code used to manipulate the Document Object Model (DOM). This script code either does not properly validate input, or does not perform proper output encoding, thus creating an opportunity for an adversary to inject a malicious script launch a XSS attack. A key distinction between other XSS attacks and DOM-based attacks is that in other XSS attacks, the malicious script runs when the vulnerable web page is initially loaded, while a DOM-based attack executes sometime after the page loads. Another distinction of DOM-based attacks is that in some cases, the malicious script is never sent to the vulnerable web server at all. An attack like this is guaranteed to bypass any server-side filtering attempts to protect users."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-588",
                            "url": "https://capec.mitre.org/data/definitions/588.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An application that leverages a client-side web browser with scripting enabled.",
                            "An application that manipulates the DOM via client-side scripting.",
                            "An application that failS to adequately sanitize or encode untrusted input."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Consider a web application that enables or disables some of the fields of a form on the page via the use of a mode parameter provided on the query string.",
                                    "The application’s client-side code may want to print this mode value to the screen to give the users an understanding of what mode they are in. In this example, JavaScript is used to pull the value from the URL and update the HTML by dynamically manipulating the DOM via a document.write() call.",
                                    "Notice how the value provided on the URL is used directly with no input validation performed and no output encoding in place. A maliciously crafted URL can thus be formed such that if a victim clicked on the URL, a malicious script would then be executed by the victim’s browser:",
                                    "http://my.site.com/aform.html?mode=full",
                                    "<script>document.write(\"<p>Mode is: \" + document.location.href.substring(document.location.href.indexOf('mode=') + 5) + \"</p>\");</script>",
                                    "http://my.site.com/aform.html?mode=<script>alert('hi');</script>"
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "In some DOM-based attacks, the malicious script never gets sent to the web server at all, thus bypassing any server-side protections that might be in place. Consider the previously used web application that displays the mode value. Since the HTML is being generated dynamically through DOM manipulations, a URL fragment (i.e., the part of a URL after the '#' character) can be used.",
                                    "In this variation of a DOM-based XSS attack, the malicious script will not be sent to the web server, but will instead be managed by the victim's browser and is still available to the client-side script code.",
                                    "http://my.site.com/aform.html#mode=<script>alert('hi')</script>"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "To identify a potentially vulnerable application, review the client-side source code for DOM-related capabilities and look for places that display, store, or use user-supplied information without proper encoding or sanitization."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read files or directories"
                                ],
                                "notes": [
                                    "A successful DOM-based XSS attack can enable an adversary to exfiltrate sensitive information from the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Authorization",
                                    "Access_Control"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": [
                                    "A successful DOM-based XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "A successful DOM-based XSS attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify memory",
                                    "Modify files or directories",
                                    "Modify application data"
                                ],
                                "notes": [
                                    "A successful DOM-based XSS attack can allow an adversary to tamper with application data."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "name": "Session Credential Falsification through Prediction",
                    "description": [
                        "This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Find Session IDs",
                                    "description": [
                                        "The attacker interacts with the target host and finds that session IDs are used to authenticate users."
                                    ],
                                    "steps": [
                                        "An attacker makes many anonymous connections and records the session IDs assigned.",
                                        "An attacker makes authorized connections and records the session tokens or credentials issued."
                                    ]
                                },
                                {
                                    "title": "Characterize IDs",
                                    "description": [
                                        "The attacker studies the characteristics of the session ID (size, format, etc.). As a results the attacker finds that legitimate session IDs are predictable."
                                    ],
                                    "steps": [
                                        "Cryptanalysis. The attacker uses cryptanalysis to determine if the session IDs contain any cryptographic protections.",
                                        "Pattern tests. The attacker looks for patterns (odd/even, repetition, multiples, or other arithmetic relationships) between IDs",
                                        "Comparison against time. The attacker plots or compares the issued IDs to the time they were issued to check for correlation."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Match issued IDs",
                                    "description": [
                                        "The attacker brute forces different values of session ID and manages to predict a valid session ID."
                                    ],
                                    "steps": [
                                        "The attacker models the session ID algorithm enough to produce a compatible session IDs, or just one match."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Use matched Session ID",
                                    "description": [
                                        "The attacker uses the falsified session ID to access the target system."
                                    ],
                                    "steps": [
                                        "The attacker loads the session ID into his web browser and browses to restricted data or functionality.",
                                        "The attacker loads the session ID into his network communications and impersonates a legitimate user to gain access to data or functionality."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The target host uses session IDs to keep track of the users.",
                            "Session IDs are used to control access to resources.",
                            "The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time)."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Jetty before 4.2.27, 5.1 before 5.1.12, 6.0 before 6.0.2, and 6.1 before 6.1.0pre3 generates predictable session identifiers using java.util.random, which makes it easier for remote attackers to guess a session identifier through brute force attacks, bypass authentication requirements, and possibly conduct cross-site request forgery attacks."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-6969",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-6969",
                                        "description": null
                                    }
                                ]
                            },
                            {
                                "description": [
                                    "mod_usertrack in Apache 1.3.11 through 1.3.20 generates session ID's using predictable information including host IP address, system time and server process ID, which allows local users to obtain session ID's and bypass authentication when these session ID's are used for authentication."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2001-1534",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1534",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "The attacker can perform analysis of the randomness of the session generation algorithm.",
                            "The attacker may need to steal a few valid session IDs using a different type of attack. And then use those session ID to predict the following ones.",
                            "The attacker can use brute force tools to find a valid session ID."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--a2ac1771-3825-4de6-8c66-956234ce1b71",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "name": "Reflected XSS",
                    "description": [
                        "This type of attack is a form of Cross-Site Scripting (XSS) where a malicious script is “reflected” off a vulnerable web application and then executed by a victim's browser. The process starts with an adversary delivering a malicious script to a victim and convincing the victim to send the script to the vulnerable web application. The most common method of this is through a phishing email where the adversary embeds the malicious script with a URL that the victim then clicks on. In processing the subsequent request, the vulnerable web application incorrectly considers the malicious script as valid input and uses it to creates a reposnse that is then sent back to the victim. To launch a successful Reflected XSS attack, an adversary looks for places where user-input is used directly in the generation of a response. This often involves elements that are not expected to host scripts such as image tags (<img>), or the addition of event attibutes such as onload and onmouseover. These elements are often not subject to the same input validation, output encoding, and other content filtering and checking routines."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-591",
                            "url": "https://capec.mitre.org/data/definitions/591.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An application that leverages a client-side web browser with scripting enabled.",
                            "An application that fail to adequately sanitize or encode untrusted input."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Consider a web application that enables or disables some of the fields of a form on the page via the use of a mode parameter provided on the query string.",
                                    "The application’s server-side code may want to display this mode value in the HTML page being created to give the users an understanding of what mode they are in. In this example, PHP is used to pull the value from the URL and generate the desired HTML.",
                                    "Notice how the value provided on the URL is used directly with no input validation performed and no output encoding in place. A maliciously crafted URL can thus be formed such that if a victim clicked on the URL, a malicious script would then be executed by the victim’s browser:",
                                    "http://my.site.com/aform.html?mode=full",
                                    "<?php",
                                    "echo 'Mode is: ' . $_GET[\"mode\"];",
                                    "?>",
                                    "http://my.site.com/aform.html?mode=<script>alert('hi');</script>"
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Reflected XSS attacks can take advantage of HTTP headers to compromise a victim. For example, assume a vulnerable web application called ‘mysite’ dynamically generates a link using an HTTP header such as HTTP_REFERER. Code somewhere in the application could look like:",
                                    "The HTTP_REFERER header is populated with the URI that linked to the currently executing page. A web site can be created and hosted by an adversary that takes advantage of this by adding a reference to the vulnerable web application. By tricking a victim into clicking a link that executes the attacker’s web page, such as:",
                                    "The vulnerable web application (‘mysite’) is now called via the attacker’s web site, initiated by the victim’s web browser. The HTTP_REFERER header will contain a malicious script, which is embedded into the page by the vulnerable application and served to the victim. The victim’s web browser then executes the injected script, thus compromising the victim’s machine.",
                                    "<?php",
                                    "echo \"<a href=”$_SERVER[‘HTTP_REFERER’]”>Test URL</a>\"",
                                    "?>",
                                    "\"http://attackerswebsite.com?<script>malicious content</script>\""
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Locate system capabilities within the web application that display user-supplied information without proper encoding or sanitization."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read files or directories"
                                ],
                                "notes": [
                                    "A successful Reflected XSS attack can enable an adversary to exfiltrate sensitive information from the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Authorization",
                                    "Access_Control"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": [
                                    "A successful Reflected XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "A successful Reflected attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify memory",
                                    "Modify files or directories",
                                    "Modify application data"
                                ],
                                "notes": [
                                    "A successful Reflected attack can allow an adversary to tamper with application data."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--9ea1d62e-51d1-4690-8ec5-2e613722e9e6",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "name": "Stored XSS",
                    "description": [
                        "This type of attack is a form of Cross-site Scripting (XSS) where a malicious script is persistenly “stored” within the data storage of a vulnerable web application. Initially presented by an adversary to the vulnerable web application, the malicious script is incorrectly considered valid input and is not properly encoded by the web application. A victim is then convinced to use the web application in a way that creates a response that includes the malicious script. This response is subsequently sent to the victim and the malicious script is executed by the victim's browser. To launch a successful Stored XSS attack, an adversary looks for places where stored input data is used in the generation of a response. This often involves elements that are not expected to host scripts such as image tags (<img>), or the addition of event attibutes such as onload and onmouseover. These elements are often not subject to the same input validation, output encoding, and other content filtering and checking routines."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-592",
                            "url": "https://capec.mitre.org/data/definitions/592.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An application that leverages a client-side web browser with scripting enabled.",
                            "An application that fails to adequately sanitize or encode untrusted input.",
                            "An application that stores information provided by the user in data storage of some kind."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "An adversary determines that a system uses a web based interface for administration. The adversary creates a new user record and supplies a malicious script in the user name field. The user name field is not validated by the system and a new log entry is created detailing the creation of the new user. Later, an administrator reviews the log in the administrative console. When the administrator comes across the new user entry, the browser sees a script and executes it, stealing the administrator's authentication cookie and forwarding it to the adversary. An adversary then uses the received authentication cookie to log in to the system as an administrator, provided that the administrator console can be accessed remotely."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "An online discussion forum allows its members to post HTML-enabled messages, which can also include image tags. An adversary embeds JavaScript in the image tags of his message. The adversary then sends the victim an email advertising free goods and provides a link to the form for how to collect. When the victim visits the forum and reads the message, the malicious script is executed within the victim's browser."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Locate system capabilities within a web application that store user-supplied information without proper encoding or sanitization"
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read files or directories"
                                ],
                                "notes": [
                                    "A successful Stored XSS attack can enable an adversary to exfiltrate sensitive information from the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Authorization",
                                    "Access_Control"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": [
                                    "A successful Stored XSS attack can enable an adversary to elevate their privilege level and access functionality they should not otherwise be allowed to access."
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "A successful Stored XSS attack can enable an adversary run arbitrary code of their choosing, thus enabling a complete compromise of the application."
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify memory",
                                    "Modify files or directories",
                                    "Modify application data"
                                ],
                                "notes": [
                                    "A successful Stored XSS attack can allow an adversary to tamper with application data."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--895090b7-a697-446c-a7d5-192a00401f91",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "name": "Session Hijacking",
                    "description": [
                        "This type of attack involves an adversary that exploits weaknesses in an application's use of sessions in performing authentication. The advarsary is able to steal or manipulate an active session and use it to gain unathorized access to the application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-593",
                            "url": "https://capec.mitre.org/data/definitions/593.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "An application that leverages sessions to perform authentication."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "aaa"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": [
                                    "A successful attack can enable an adversary to gain unauthorized access to an application."
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--6c5b9c61-f342-4475-a0c3-23d3974fb03a",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "name": "Argument Injection",
                    "description": [
                        "An attacker changes the behavior or state of a targeted application through injecting data or command syntax through the targets use of non-validated and non-filtered arguments of exposed services or methods."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-6",
                            "url": "https://capec.mitre.org/data/definitions/6.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Discovery of potential injection vectors",
                                    "description": [
                                        "Using an automated tool or manual discovery, the attacker identifies services or methods with arguments that could potentially be used as injection vectors (OS, API, SQL procedures, etc.)."
                                    ],
                                    "steps": [
                                        "Manually cover the application and record the possible places where arguments could be passed into external systems.",
                                        "Use a spider, for web applications, to create a list of URLs and associated inputs."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "1. Attempt variations on argument content",
                                    "description": [
                                        "Possibly using an automated tool, the attacker will perform injection variations of the arguments."
                                    ],
                                    "steps": [
                                        "Use a very large list of probe strings in order to detect if there is a positive result, and, what type of system has been targeted (if obscure).",
                                        "Use a proxy tool to record results, error messages and/or log if accessible."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Abuse of the application",
                                    "description": [
                                        "The attacker injects specific syntax into a particular argument in order to generate a specific malicious effect in the targeted application."
                                    ],
                                    "steps": [
                                        "Manually inject specific payload into targeted argument."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Target software fails to strip all user-supplied input of any content that could cause the shell to perform unexpected actions.",
                            "Software must allow for unvalidated or unfiltered input to be executed on operating system shell, and, optionally, the system configuration must allow for output to be sent back to client."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "A recent example instance of argument injection occurred against Java Web Start technology, which eases the client side deployment for Java programs. The JNLP files that are used to describe the properties for the program. The client side Java runtime used the arguments in the property setting to define execution parameters, but if the attacker appends commands to an otherwise legitimate property file, then these commands are sent to the client command shell. [R.6.2]"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through standard input, the attacker inserts additional arguments on the application's standard interface",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Varies with instantiation of attack pattern. Malicious payload either pass commands through valid parameters or supply metacharacters that cause unexpected termination that redirects to shell",
                        "activation_zone": {
                            "description": "Client machine and client network (e.g. Intranet)",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "Low",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "name": "Reusing Session IDs (aka Session Replay)",
                    "description": [
                        "This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker interacts with the target host and finds that session IDs are used to authenticate users."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker steals a session ID from a valid user."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker tries to use the stolen session ID to gain access to the system with the privileges of the session ID's original owner."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The target host uses session IDs to keep track of the users.",
                            "Session IDs are used to control access to resources.",
                            "The session IDs used by the target host are not well protected from session theft."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "OpenSSL and SSLeay allow remote attackers to reuse SSL sessions and bypass access controls."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-1999-0428",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0428",
                                        "description": null
                                    }
                                ]
                            },
                            {
                                "description": [
                                    "Merak Mail IceWarp Web Mail uses a static identifier as a user session ID that does not change across sessions, which could allow remote attackers with access to the ID to gain privileges as that user, e.g. by extracting the ID from the user's answer or forward URLs."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2002-0258",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0258",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "The attacker can listen to a conversation between the client and server and steal a valid session ID.",
                            "The attacker can try to steal session information from the user's cookies.",
                            "The attacker can try a valid session from a finished transaction and find out that the transaction associated with the session ID did not time out."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--06ede737-cfb8-4fa8-a2e9-49d19e58d903",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "name": "Cryptanalysis of Cellular Encryption",
                    "description": [
                        "The use of cryptanalytic techniques to derive cryptographic keys or otherwise effectively defeat cellular encryption to reveal traffic content. Some cellular encryption algorithms such as A5/1 and A5/2 (specified for GSM use) are known to be vulnerable to such attacks and commercial tools are available to execute these attacks and decrypt mobile phone conversations in real-time. Newer encryption algorithms in use by UMTS and LTE are stronger and currently believed to be less vulnerable to these types of attacks. Note, however, that an attacker with a Cellular Rogue Base Station can force the use of weak cellular encryption even by newer mobile devices."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-608",
                            "url": "https://capec.mitre.org/data/definitions/608.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "None"
                        ],
                        "severity": "High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": null,
                                "impact": [
                                    "Other"
                                ],
                                "notes": [
                                    "Reveals IMSI and IMEI for tracking of retransmission device and enables further follow-on attacks by revealing black network control messages. (e.g., revealing IP addresses of enterprise servers for VOIP connectivity)"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--88edd3ad-04bb-4f3d-aa6b-cb63f7d18a13",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "name": "Session Fixation",
                    "description": [
                        "The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker. Once the user successfully authenticates to the target software, the attacker uses the (now privileged) session identifier in their own transactions. This attack leverages the fact that the target software either relies on client-generated session identifiers or maintains the same session identifiers after privilege elevation."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-61",
                            "url": "https://capec.mitre.org/data/definitions/61.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Setup the Attack",
                                    "description": [
                                        "Setup a session: The attacker has to setup a trap session that provides a valid session identifier, or select an arbitrary identifier, depending on the mechanism employed by the application. A trap session is a dummy session established with the application by the attacker and is used solely for the purpose of obtaining valid session identifiers. The attacker may also be required to periodically refresh the trap session in order to obtain valid session identifiers."
                                    ],
                                    "steps": [
                                        "The attacker chooses a predefined identifier that he knows.",
                                        "The attacker creates a trap session for the victim."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Attract a Victim",
                                    "description": [
                                        "Fixate the session: The attacker now needs to transfer the session identifier from the trap session to the victim by introducing the session identifier into the victim's browser. This is known as fixating the session. The session identifier can be introduced into the victim's browser by leveraging cross site scripting vulnerability, using META tags or setting HTTP response headers in a variety of ways."
                                    ],
                                    "steps": [
                                        "Attackers can put links on web sites (such as forums, blogs, or comment forms).",
                                        "Attackers can establish rogue proxy servers for network protocols that give out the session ID and then redirect the connection to the legitimate service.",
                                        "Attackers can email attack URLs to potential victims through spam and phishing techniques."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Abuse the Victim's Session",
                                    "description": [
                                        "Takeover the fixated session: Once the victim has achieved a higher level of privilege, possibly by logging into the application, the attacker can now take over the session using the fixated session identifier."
                                    ],
                                    "steps": [
                                        "The attacker loads the predefined session ID into his browser and browses to protected data or functionality.",
                                        "The attacker loads the predefined session ID into his software and utilizes functionality with the rights of the victim."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Session identifiers that remain unchanged when the privilege levels change.",
                            "Permissive session management mechanism that accepts random user-generated session identifiers",
                            "Predictable session identifiers"
                        ],
                        "severity": "High",
                        "likelihood": "Medium",
                        "examples": [
                            {
                                "description": [
                                    "Consider a banking application that issues a session identifier in the URL to a user before login, and uses the same identifier to identify the customer following successful authentication. An attacker can easily leverage session fixation to access a victim's account by having the victim click on a forged link that contains a valid session identifier from a trapped session setup by the attacker. Once the victim is authenticated, the attacker can take over the session and continue with the same levels of privilege as the victim."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "An attacker can hijack user sessions, bypass authentication controls and possibly gain administrative privilege by fixating the session of a user authenticating to the Management Console on certain versions of Macromedia JRun 4.0. This can be achieved by setting the session identifier in the user's browser and having the user authenticate to the Management Console. Session fixation is possible since the application server does not regenerate session identifiers when there is a change in the privilege levels."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2004-2182",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2182",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "Determining whether the target application server accepts preset session identifiers is relatively easy. The attacker may try setting session identifiers in the URL or hidden form fields or in cookies, depending upon application design. Having access to an account or by utilizing a dummy account, the attacker can determine whether the preset session identifiers are accepted or not.",
                            "With code or design in hand, the attacker can readily verify whether preset session identifiers are accepted and whether identifiers are regenerated, and possible destroyed, when privilege levels change."
                        ],
                        "indicators": [
                            "There are no indicators for the server since a fixated session identifier is similar to an ordinarily generated one. However, too many invalid sessions due to invalid session identifiers is a potential warning.",
                            "A client can be suspicious if a received link contains preset session identifiers. However, this depends on the client's knowledge of such an issue. Also, fixation through Cross Site Scripting or hidden form fields is usually difficult to detect."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "GET or POST data, Hidden form fields and session cookies",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Preset session identifier",
                        "activation_zone": {
                            "description": "Target application's session management mechanism",
                            "categories": [
                                "Session Management System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b7b8222e-dca4-4be8-8d6d-0cbdaa10ed57",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "name": "Rooting SIM Cards",
                    "description": [
                        "SIM cards are the de facto trust anchor of mobile devices worldwide. The cards protect the mobile identity of subscribers, associate devices with phone numbers, and increasingly store payment credentials, for example in NFC-enabled phones with mobile wallets. This attack leverages over-the-air (OTA) updates deployed via cryptographically-secured SMS messages to deliver executable code to the SIM. By cracking the DES key, an attacker can send properly signed binary SMS messages to a device, which are treated as Java applets and are executed on the SIM. These applets are allowed to send SMS, change voicemail numbers, and query the phone location, among many other predefined functions. These capabilities alone provide plenty of potential for abuse."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-614",
                            "url": "https://capec.mitre.org/data/definitions/614.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "A SIM card that relies on the DES cipher."
                        ],
                        "severity": "High",
                        "likelihood": null,
                        "examples": null,
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": null,
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "name": "Cross-Site Scripting (XSS)",
                    "description": [
                        "An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey the application for user-controllable inputs",
                                    "description": [
                                        "Using a browser or an automated tool, an attacker follows all public links and actions on a web site. He records all the links, the forms, the resources accessed and all other potential entry-points for the web application."
                                    ],
                                    "steps": [
                                        "Use a spidering tool to follow and record all links and analyze the web pages to find entry points. Make special note of any links that include parameters in the URL.",
                                        "Use a proxy tool to record all links visited during a manual traversal of the web application.",
                                        "Use a browser to manually explore the website and analyze how it is constructed. Many browsers' plugins are available to facilitate the analysis or automate the discovery."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Probe identified potential entry points for XSS vulnerability",
                                    "description": [
                                        "The attacker uses the entry points gathered in the \"Explore\" phase as a target list and injects various common script payloads to determine if an entry point actually represents a vulnerability and to characterize the extent to which the vulnerability can be exploited."
                                    ],
                                    "steps": [
                                        "Use a list of XSS probe strings to inject script in parameters of known URLs. If possible, the probe strings contain a unique identifier.",
                                        "Use a proxy tool to record results of manual input of XSS probes in known URLs.",
                                        "Use a list of XSS probe strings to inject script into UI entry fields. If possible, the probe strings contain a unique identifier.",
                                        "Use a list of XSS probe strings to inject script into resources accessed by the application. If possible, the probe strings contain a unique identifier."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Steal session IDs, credentials, page content, etc.",
                                    "description": [
                                        "As the attacker succeeds in exploiting the vulnerability, he can choose to steal user's credentials in order to reuse or to analyze them later on."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and sends document information to the attacker.",
                                        "Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute appropriately."
                                    ]
                                },
                                {
                                    "title": "Forceful browsing",
                                    "description": [
                                        "When the attacker targets the current application or another one (through CSRF vulnerabilities), the user will then be the one who perform the attacks without being aware of it. These attacks are mostly targeting application logic flaws, but it can also be used to create a widespread attack against a particular website on the user's current network (Internet or not)."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and performs actions on the same web site",
                                        "Develop malicious JavaScript that injected through vectors identified during the Experiment Phase and takes commands from an attacker's server and then causes the browser to execute request to other web sites (especially the web applications that have CSRF vulnerabilities)."
                                    ]
                                },
                                {
                                    "title": "Content spoofing",
                                    "description": [
                                        "By manipulating the content, the attacker targets the information that the user would like to get from the website."
                                    ],
                                    "steps": [
                                        "Develop malicious JavaScript that is injected through vectors identified during the Experiment Phase and loaded by the victim's browser and exposes attacker-modified invalid information to the user on the current web page."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Target client software must be a client that allows scripting communication from remote hosts, such as a JavaScript-enabled Web Browser."
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Classic phishing attacks lure users to click on content that appears trustworthy, such as logos, and links that seem to go to their trusted financial institutions and online auction sites. But instead the attacker appends malicious scripts into the otherwise innocent appearing resources. The HTML source for a standard phishing attack looks like this:",
                                    "When the user clicks the link, the appended script also executes on the local user's machine.",
                                    "<a href=\"www.exampletrustedsite.com?Name=<script>maliciousscript</script>\">Trusted Site</a>"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Malicious input delivered through standard content (containing scripts) that is sent to the user's machine, for example HTML page containing JavaScript.",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Varies with instantiation of attack pattern. Malicious script payload may be appended to end of legitimate looking link.",
                        "activation_zone": {
                            "description": "Client browser, its component libraries, and client network (e.g. Intranet).",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "name": "Using Slashes and URL Encoding Combined to Bypass Validation Logic",
                    "description": [
                        "This attack targets the encoding of the URL combined with the encoding of the slash characters. An attacker can take advantage of the multiple ways of encoding a URL and abuse the interpretation of the URL. A URL may contain special character that need special syntax handling in order to be interpreted. Special characters are represented using a percentage character followed by two digits representing the octet code of the original character (%HEX-CODE). For instance US-ASCII space character would be represented with %20. This is often referred as escaped ending or percent-encoding. Since the server decodes the URL from the requests, it may restrict the access to some URL paths by validating and filtering out the URL requests it received. An attacker will try to craft an URL with a sequence of special characters which once interpreted by the server will be equivalent to a forbidden URL. It can be difficult to protect against this attack since the URL can contain other format of encoding such as UTF-8 encoding, Unicode-encoding, etc."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker accesses the server using a specific URL."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker tries to encode some special characters in the URL. The attacker find out that some characters are not filtered properly."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker crafts a malicious URL string request and sends it to the server."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The server decodes and interprets the URL string. Unfortunately since the input filtering is not done properly, the special characters have harmful consequences."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The application accepts and decodes URL string request.",
                            "The application performs insufficient filtering/canonicalization on the URLs."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Attack Example: Combined Encodings CesarFTP",
                                    "Alexandre Cesari released a freeware FTP server for Windows that fails to provide proper filtering against multiple encoding. The FTP server, CesarFTP, included a Web server component that could be attacked with a combination of the triple-dot and URL encoding attacks.",
                                    "An attacker could provide a URL that included a string like",
                                    "This is an interesting exploit because it involves an aggregation of several tricks: the escape character, URL encoding, and the triple dot.",
                                    "/...%5C/"
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2001-1335",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1335",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "An attacker can manually inject special characters in the URL string request and observe the results of the request.",
                            "Custom scripts can also be used. For example, a good script for verifying the correct interpretation of UTF-8 encoded characters can be found at http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt",
                            "Automated tools such as fuzzer can be used to test the URL decoding and filtering."
                        ],
                        "indicators": [
                            "If the first decoding process has left some invalid or blacklisted characters, that may be a sign that the request is malicious.",
                            "Traffic filtering with IDS (or proxy) can detect requests with suspicious URLs. IDS may use signature based identification to reveal such URL based attacks."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: resource consumption (other)"
                                ],
                                "notes": [
                                    "Denial of Service"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "Medium",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ed8708cd-267f-41fa-a154-178dee49653b",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "name": "Sniff Application Code",
                    "description": [
                        "An adversary passively sniffs network communications and captures application code bound for an authorized client. Once obtained, they can use it as-is, or through reverse-engineering glean sensitive information or exploit the trust relationship between the client and server. Such code may belong to a dynamic update to the client, a patch being applied to a client component or any such interaction where the client is authorized to communicate with the server."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-65",
                            "url": "https://capec.mitre.org/data/definitions/65.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "Set up a sniffer",
                                        "The attacker sets up a sniffer in the path between the server and the client and watches the traffic."
                                    ],
                                    "steps": [
                                        "The attacker sets up a sniffer in the path between the server and the client."
                                    ]
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "Capturing Application Code Bound During Patching",
                                        "Attacker knows that the computer/OS/application can request new applications to install, or it periodically checks for an available update. The attacker loads the sniffer set up during Explore phase, and extracts the application code from subsequent communication. The attacker then proceeds to reverse engineer the captured code."
                                    ],
                                    "steps": [
                                        "Attacker loads the sniffer to capture the application code bound during a dynamic update.",
                                        "The attacker proceeds to reverse engineer the captured code."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The attacker must have the ability to place himself in the communication path between the client and server.",
                            "The targeted application must receive some application code from the server; for example, dynamic updates, patches, applets or scripts.",
                            "The attacker must be able to employ a sniffer on the network without being detected."
                        ],
                        "severity": "High",
                        "likelihood": "Low",
                        "examples": [
                            {
                                "description": [
                                    "Attacker receives notification that the computer/OS/application has an available update, loads a network sniffing tool, and extracts update data from subsequent communication. The attacker then proceeds to reverse engineer the captured stream to gain sensitive information, such as encryption keys, validation algorithms, applications patches, etc.."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Plain code, such as applets or JavaScript, is also part of the executing application. If such code is transmitted unprotected, the attacker can capture the code and possibly reverse engineer it to gain sensitive information, such as encryption keys, validation algorithms and such."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Medium",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b39e740d-42ea-4a3b-8ef6-2f17bcf7d926",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "name": "SQL Injection",
                    "description": [
                        "This attack exploits target software that constructs SQL statements based on user input. An attacker crafts input strings so that when the target software constructs SQL statements based on the input, the resulting SQL statement performs actions other than those the application intended.",
                        "SQL Injection results from failure of the application to appropriately validate input. When specially crafted user-controlled input consisting of SQL syntax is used without proper validation as part of SQL queries, it is possible to glean information from the database in ways not envisaged during application design. Depending upon the database and the design of the application, it may also be possible to leverage injection to have the database execute system-related commands of the attackers' choice. SQL Injection enables an attacker to talk directly to the database, thus bypassing the application completely. Successful injection can cause information disclosure as well as ability to add or modify data in the database. In order to successfully inject SQL and retrieve information from a database, an attacker:"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-66",
                            "url": "https://capec.mitre.org/data/definitions/66.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey application",
                                    "description": [
                                        "The attacker first takes an inventory of the functionality exposed by the application."
                                    ],
                                    "steps": [
                                        "Spider web sites for all available links",
                                        "Sniff network communications with application using a utility such as WireShark."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Determine user-controllable input susceptible to injection",
                                    "description": [
                                        "Determine the user-controllable input susceptible to injection. For each user-controllable input that the attacker suspects is vulnerable to SQL injection, attempt to inject characters that have special meaning in SQL (such as a single quote character, a double quote character, two hyphens, a parenthesis, etc.). The goal is to create a SQL query with an invalid syntax."
                                    ],
                                    "steps": [
                                        "Use web browser to inject input through text fields or through HTTP GET parameters.",
                                        "Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, etc.",
                                        "Use network-level packet injection tools such as netcat to inject input",
                                        "Use modified client (modified by reverse engineering) to inject input."
                                    ]
                                },
                                {
                                    "title": "Experiment and try to exploit SQL Injection vulnerability",
                                    "description": [
                                        "After determining that a given input is vulnerable to SQL Injection, hypothesize what the underlying query looks like. Iteratively try to add logic to the query to extract information from the database, or to modify or delete information in the database."
                                    ],
                                    "steps": [
                                        "Use public resources such as \"SQL Injection Cheat Sheet\" at http://ferruh.mavituna.com/makale/sql-injection-cheatsheet/, and try different approaches for adding logic to SQL queries.",
                                        "Add logic to query, and use detailed error messages from the server to debug the query. For example, if adding a single quote to a query causes an error message, try : \"' OR 1=1; --\", or something else that would syntactically complete a hypothesized query. Iteratively refine the query.",
                                        "Use \"Blind SQL Injection\" techniques to extract information about the database schema.",
                                        "If a denial of service attack is the goal, try stacking queries. This does not work on all platforms (most notably, it does not work on Oracle or MySQL). Examples of inputs to try include: \"'; DROP TABLE SYSOBJECTS; --\" and \"'); DROP TABLE SYSOBJECTS; --\". These particular queries will likely not work because the SYSOBJECTS table is generally protected."
                                    ]
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "SQL queries used by the application to store, retrieve or modify data.",
                            "User-controllable input that is not properly validated by the application as part of SQL queries."
                        ],
                        "severity": "High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "With PHP-Nuke versions 7.9 and earlier, an attacker can successfully access and modify data, including sensitive contents such as usernames and password hashes, and compromise the application through SQL Injection. The protection mechanism against SQL Injection employs a blacklist approach to input validation. However, because of improper blacklisting, it is possible to inject content such as \"foo'/**/UNION\" or \"foo UNION/**/\" to bypass validation and glean sensitive information from the database."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-5525",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-5525",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "The attacker tries to inject characters that can cause a SQL error, such as single-quote (') or keywords such as \"UNION\" and \"OR\". If the injection of such characters into the input causes a SQL error and the resulting error is displayed unfiltered, the attacker can begin to determine the nature of input validation and structure of SQL queries. A typical error resulting from such injection would look like: \"You have an error in your SQL Syntax. Check your manual for the right syntax to use near ') FROM db_users.user_table\"",
                            "With available design documentation and code, the attacker can determine whether all user-controllable inputs are being validated or not, and also the structure of SQL queries that such inputs feed into."
                        ],
                        "indicators": [
                            "Too many false or invalid queries to the database, especially those caused by malformed input."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input used as part of non-parameterized SQL queries: This may include input fields on web forms, data in user-accessible files or even command-line parameters.",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "SQL statements intended to reveal information or run malicious code",
                        "activation_zone": {
                            "description": "Back-end database",
                            "categories": [
                                "Database"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--21281146-d735-4458-b887-fcae981cb941",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "name": "Subvert Code-signing Facilities",
                    "description": [
                        "Because languages use code signing facilities to vouch for code's identity and to thus tie code to its assigned privileges within an environment, subverting this mechanism can be instrumental in an attacker escalating privilege.",
                        "Any means of subverting the way that a virtual machine enforces code signing classifies for this style of attack. This pattern does not include circumstances through which a signing key has been stolen."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-68",
                            "url": "https://capec.mitre.org/data/definitions/68.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "A framework-based language that supports code signing (such as, and most commonly, Java or .NET)",
                            "Deployed code that has been signed by its authoring vendor, or a partner.",
                            "The attacker will, for most circumstances, also need to be able to place code in the victim container. This does not necessarily mean that they will have to subvert host-level security, except when explicitly indicated."
                        ],
                        "severity": "Very High",
                        "likelihood": "Low",
                        "examples": [
                            {
                                "description": [
                                    "In old versions (prior to 3.0b4) of the Netscape web browser Attackers able to foist a malicious Applet into a client's browser could execute the \"Magic Coat\" attack. In this attack, the offending Applet would implement its own getSigners() method. This implementation would use the containing VM's APIs to acquire other Applet's signatures (by calling _their_ getSigners() method) and if any running Applet had privileged-enough signature, the malicious Applet would have inherited that privilege just be (metaphorically) donning the others' coats."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Some (older) web browsers allowed scripting languages, such as JavaScript, to call signed Java code. In these circumstances, the browser's VM implementation would choose not to conduct stack inspection across language boundaries (from called signed Java to calling JavaScript) and would short-circuit \"true\" at the language boundary. Doing so meant that the VM would allow any (unprivileged) script to call privileged functions within signed code with impunity, causing them to fall prey to luring attacks."
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "The ability to load unsigned code into the kernel of earlier versions of Vista and bypass integrity checking is an example of such subversion. In the proof-of-concept, it is possible to bypass the signature-checking mechanism Vista uses to load device drivers."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Understanding, and possibly exploiting, the effect of certain flags or environment variables on code signing.",
                            "Introducing unmanaged code into a container-managed environment"
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--d3337b08-ce21-4c24-b03e-6b91ff511cd7",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "name": "Blind SQL Injection",
                    "description": [
                        "Blind SQL Injection results from an insufficient mitigation for SQL Injection. Although suppressing database error messages are considered best practice, the suppression alone is not sufficient to prevent SQL Injection. Blind SQL Injection is a form of SQL Injection that overcomes the lack of error messages. Without the error messages that facilitate SQL Injection, the adversary constructs input strings that probe the target through simple Boolean SQL expressions. The adversary can determine if the syntax and structure of the injection was successful based on whether the query was executed or not. Applied iteratively, the adversary determines how and where the target is vulnerable to SQL Injection."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-7",
                            "url": "https://capec.mitre.org/data/definitions/7.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Hypothesize SQL queries in application",
                                    "description": [
                                        "Generated hypotheses regarding the SQL queries in an application. For example, the adversary may hypothesize that his input is passed directly into a query that looks like:",
                                        "Of course, there are many other possibilities.",
                                        "\"SELECT * FROM orders WHERE ordernum = _____\"",
                                        "or",
                                        "\"SELECT * FROM orders WHERE ordernum IN (_____)\"",
                                        "or",
                                        "\"SELECT * FROM orders WHERE ordernum in (_____) ORDER BY _____\""
                                    ],
                                    "steps": [
                                        "Research types of SQL queries and determine which ones could be used at various places in an application."
                                    ]
                                },
                                {
                                    "title": "Determine how to inject information into the queries",
                                    "description": [
                                        "Determine how to inject information into the queries from the previous step such that the injection does not impact their logic. For example, the following are possible injections for those queries:",
                                        "\"5' OR 1=1; --\"",
                                        "and",
                                        "\"5) OR 1=1; --\"",
                                        "and",
                                        "\"ordernum DESC; --\""
                                    ],
                                    "steps": [
                                        "Add clauses to the SQL queries such that the query logic does not change.",
                                        "Add delays to the SQL queries in case server does not provide clear error messages (e.g. WAITFOR DELAY '0:0:10' in SQL Server or BENCHMARK(1000000000,MD5(1) in MySQL). If these can be injected into the queries, then the length of time that the server takes to respond reveals whether the query is injectable or not."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Determine user-controllable input susceptible to injection",
                                    "description": [
                                        "Determine the user-controllable input susceptible to injection. For each user-controllable input that the adversary suspects is vulnerable to SQL injection, attempt to inject the values determined in the previous step. If an error does not occur, then the adversary knows that the SQL injection was successful."
                                    ],
                                    "steps": [
                                        "Use web browser to inject input through text fields or through HTTP GET parameters.",
                                        "Use a web application debugging tool such as Tamper Data, TamperIE, WebScarab,etc. to modify HTTP POST parameters, hidden fields, non-freeform fields, etc.",
                                        "Use network-level packet injection tools such as netcat to inject input",
                                        "Use modified client (modified by reverse engineering) to inject input."
                                    ]
                                },
                                {
                                    "title": "Determine database type",
                                    "description": [
                                        "Determines the type of the database, such as MS SQL Server or Oracle or MySQL, using logical conditions as part of the injected queries"
                                    ],
                                    "steps": [
                                        "Try injecting a string containing char(0x31)=char(0x31) (this evaluates to 1=1 in SQL Server only)",
                                        "Try injecting a string containing 0x313D31 (this evaluates to 1=1 in MySQL only)",
                                        "Inject other database-specific commands into input fields susceptible to SQL Injection. The adversary can determine the type of database that is running by checking whether the query executed successfully or not (i.e. whether the adversary received a normal response from the server or not)."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Extract information about database schema",
                                    "description": [
                                        "Extract information about database schema by getting the database to answer yes/no questions about the schema."
                                    ],
                                    "steps": [
                                        "Automatically extract database schema using a tool such as Absinthe.",
                                        "Manually perform the blind SQL Injection to extract desired information about the database schema."
                                    ]
                                },
                                {
                                    "title": "Exploit SQL Injection vulnerability",
                                    "description": [
                                        "Use the information obtained in the previous steps to successfully inject the database in order to bypass checks or modify, add, retrieve or delete data from the database"
                                    ],
                                    "steps": [
                                        "Use information about how to inject commands into SQL queries as well as information about the database schema to execute attacks such as dropping tables, inserting records, etc."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "SQL queries used by the application to store, retrieve or modify data.",
                            "User-controllable input that is not properly validated by the application as part of SQL queries."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "An adversary may try entering something like \"username' AND 1=1; --\" in an input field. If the result is the same as when the adversary entered \"username\" in the field, then the adversary knows that the application is vulnerable to SQL Injection. The adversary can then ask yes/no questions from the database server to extract information from it. For example, the adversary can extract table names from a database using the following types of queries:",
                                    "If the above query executes properly, then the adversary knows that the first character in a table name in the database is a letter between m and z. If it doesn't, then the adversary knows that the character must be between a and l (assuming of course that table names only contain alphabetic characters). By performing a binary search on all character positions, the adversary can determine all table names in the database. Subsequently, the adversary may execute an actual attack and send something like:",
                                    "\"username' AND ascii(lower(substring((SELECT TOP 1 name FROM sysobjects WHERE xtype='U'), 1, 1))) > 108\".",
                                    "\"username'; DROP TABLE trades; --"
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "In the PHP application TimeSheet 1.1, an adversary can successfully retrieve username and password hashes from the database using Blind SQL Injection. If the adversary is aware of the local path structure, the adversary can also remotely execute arbitrary code and write the output of the injected queries to the local path. Blind SQL Injection is possible since the application does not properly sanitize the $_POST['username'] variable in the login.php file."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2006-4705",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4705",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "In order to determine the right syntax for the query to inject, the attacker tries to determine the right number of parameters to the query and their types. This is achieved by formulating conditions that result in a true/false answer from the database. If the logical condition is true, the database will execute the rest of the query. If not, a custom error page or a default page is returned. Another approach is to ask such true/false questions of the database and note the response times to a query with a logically true condition and one with a false condition."
                        ],
                        "indicators": [
                            "The only indicators of successful Blind SQL Injection are the application or database logs that show similar queries with slightly differing logical conditions that increase in complexity over time. However, this requires extensive logging as well as knowledge of the queries that can be used to perform such injection and return meaningful information from the database."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input to the application",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "SQL statements intended to bypass checks or retrieve information about the database",
                        "activation_zone": {
                            "description": "Back-end database",
                            "categories": [
                                "Database"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "name": "Manipulating Writeable Configuration Files",
                    "description": [
                        "Generally these are manually edited files that are not in the preview of the system administrators, any ability on the attackers' behalf to modify these files, for example in a CVS repository, gives unauthorized access directly to the application, the same as authorized users."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "Configuration files must be modifiable by the attacker"
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "The BEA Weblogic server uses a config.xml file to store configuration data. If this file is not properly protected by the system access control, an attacker can write configuration information to redirect server output through system logs, database connections, malicious URLs and so on. Access to the Weblogic server may be from a so-called Custom realm which manages authentication and authorization privileges on behalf of user principals. Given write access, the attacker can insert a pointer to a custom realm jar file in the config.xml",
                                    "The main issue with configuration files is that the attacker can leverage all the same functionality the server has, but for malicious means. Given the complexity of server configuration, these changes may be very hard for administrators to detect.",
                                    "< CustomRealm",
                                    "ConfigurationData=\"java.util.Properties\"",
                                    "Name=\"CustomRealm\"",
                                    "RealmClassName=\"Maliciousrealm.jar\"",
                                    "/>"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Configuration files",
                            "categories": [
                                "Server"
                            ]
                        },
                        "payload": "Commands or configuration settings",
                        "activation_zone": {
                            "description": "Configuration file processing routines",
                            "categories": [
                                "Configuration File"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "name": "Manipulating Web Input to File System Calls",
                    "description": [
                        "An attacker manipulates inputs to the target software which the target software passes to file system calls in the OS. The goal is to gain access to, and perhaps modify, areas of the file system that the target software did not intend to be accessible."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Fingerprinting of the operating system",
                                    "description": [
                                        "In order to create a valid file injection, the attacker needs to know what the underlying OS is."
                                    ],
                                    "steps": [
                                        "Port mapping. Identify ports that the system is listening on, and attempt to identify inputs and protocol types on those ports.",
                                        "TCP/IP Fingerprinting. The attacker uses various software to make connections or partial connections and observe idiosyncratic responses from the operating system. Using those responses, he attempts to guess the actual operating system.",
                                        "Induce errors to find informative error messages"
                                    ]
                                },
                                {
                                    "title": "Survey the Application to Identify User-controllable Inputs",
                                    "description": [
                                        "The attacker surveys the target application to identify all user-controllable inputs, possibly as a valid and authenticated user"
                                    ],
                                    "steps": [
                                        "Spider web sites for all available links, entry points to the web site.",
                                        "Manually explore application and inventory all application inputs"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Vary inputs, looking for malicious results",
                                    "description": [
                                        "Depending on whether the application being exploited is a remote or local one the attacker crafts the appropriate malicious input containing the path of the targeted file or other file system control syntax to be passed to the application"
                                    ],
                                    "steps": [
                                        "Inject context-appropriate malicious file path using network packet injection tools (netcat, nemesis, etc.)",
                                        "Inject context-appropriate malicious file path using web test frameworks (proxies, TamperData, custom programs, etc.) or simple HTTP requests",
                                        "Inject context-appropriate malicious file system control syntax"
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Manipulate files accessible by the application",
                                    "description": [
                                        "The attacker may steal information or directly manipulate files (delete, copy, flush, etc.)"
                                    ],
                                    "steps": [
                                        "The attacker injects context-appropriate malicious file path to access the content of the targeted file.",
                                        "The attacker injects context-appropriate malicious file system control syntax to access the content of the targeted file.",
                                        "The attacker injects context-appropriate malicious file path to cause the application to create, delete a targeted file.",
                                        "The attacker injects context-appropriate malicious file system control syntax to cause the application to create, delete a targeted file.",
                                        "The attacker injects context-appropriate malicious file path in order to manipulate the meta-data of the targeted file.",
                                        "The attacker injects context-appropriate malicious file system control syntax in order to manipulate the meta-data of the targeted file."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "Program must allow for user controlled variables to be applied directly to the filesystem"
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "The attacker uses relative path traversal to access files in the application. This is an example of accessing user's password file.",
                                    "However, the target application employs regular expressions to make sure no relative path sequences are being passed through the application to the web page. The application would replace all matches from this regex with the empty string.",
                                    "Then an attacker creates special payloads to bypass this filter:",
                                    "When the application gets this input string, it will be the desired vector by the attacker.",
                                    "http://www.example.com/getProfile.jsp?filename=../../../../etc/passwd",
                                    "http://www.example.com/getProfile.jsp?filename=%2e%2e/%2e%2e/%2e%2e/%2e%2e /etc/passwd"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols and inputs.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "File system commands and specifiers",
                        "activation_zone": {
                            "description": "File system",
                            "categories": [
                                "File System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "name": "Manipulating User-Controlled Variables",
                    "description": [
                        "This attack targets user controlled variables (DEBUG=1, PHP Globals, and So Forth). An attacker can override environment variables leveraging user-supplied, untrusted query variables directly used on the application server without any data sanitization. In extreme cases, the attacker can change variables controlling the business logic of the application. For instance, in languages like PHP, a number of poorly set default configurations may allow the user to override variables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker communicates with the application server using a thin client (browser) or thick client."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "While communicating with the server, the attacker finds that she can control and override a variable consumed by the application server."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker overrides the variable and influences the normal behavior of the application server."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "A variable consumed by the application server is exposed to the client.",
                            "A variable consumed by the application server can be overwritten by the user.",
                            "The application server trusts user supplied data to compute business logic.",
                            "The application server does not perform proper input validation."
                        ],
                        "severity": "Very High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "Attack Example: PHP Global Variables",
                                    "PHP is a study in bad security. The main idea pervading PHP is \"ease of use,\" and the mantra \"don't make the developer go to any extra work to get stuff done\" applies in all cases. This is accomplished in PHP by removing formalism from the language, allowing declaration of variables on first use, initializing everything with preset values, and taking every meaningful variable from a transaction and making it available. In cases of collision with something more technical, the simple almost always dominates in PHP.",
                                    "One consequence of all this is that PHP allows users of a Web application to override environment variables with user-supplied, untrusted query variables. Thus, critical values such as the CWD and the search path can be overwritten and directly controlled by a remote anonymous user.",
                                    "Another similar consequence is that variables can be directly controlled and assigned from the user-controlled values supplied in GET and POST request fields. So seemingly normal code like this, does bizarre things:",
                                    "Normally, this loop will execute its body ten times. The first iteration will be an undefined zero, and further trips though the loop will result in an increment of the variable $count. The problem is that the coder does not initialize the variable to zero before entering the loop. This is fine because PHP initializes the variable on declaration. The result is code that seems to function, regardless of badness. The problem is that a user of the Web application can supply a request such as",
                                    "and cause $count to start out at the value 9, resulting in only one trip through the loop. Yerg.",
                                    "Depending on the configuration, PHP may accept user-supplied variables in place of environment variables. PHP initializes global variables for all process environment variables, such as $PATH and $HOSTNAME. These variables are of critical importance because they may be used in file or network operations. If an attacker can supply a new $PATH variable (such as PATH='/var'), the program may be exploitable.",
                                    "PHP may also take field tags supplied in GET/POST requests and transform them into global variables. This is the case with the $count variable we explored in our previous example.",
                                    "Consider another example of this problem in which a program defines a variable called $tempfile. An attacker can supply a new temp file such as $tempfile = \"/etc/passwd\". Then the temp file may get erased later via a call to unlink($tempfile);. Now the passwd file has been erased--a bad thing indeed on most OSs.",
                                    "Also consider that the use of include() and require() first search $PATH, and that using calls to the shell may execute crucial programs such as ls. In this way, ls may be \"Trojaned\" (the attacker can modify $PATH to cause a Trojan copy of ls to be loaded). This type of attack could also apply to loadable libraries if $LD_LIBRARY_PATH is modified.",
                                    "Finally, some versions of PHP may pass user data to syslog as a format string, thus exposing the application to a format string buffer overflow.",
                                    "while($count < 10){",
                                    "// Do something",
                                    "$count++;",
                                    "}",
                                    "GET /login.php?count=9"
                                ],
                                "external_references": [
                                    {
                                        "source_name": "cve",
                                        "id": "CVE-2000-0860",
                                        "url": "http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0860",
                                        "description": null
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": [
                            "The attacker can try to change the value of the variables that are exposed on the webpage's source code and send them back to the application server. Depending on what program is running on the application server, the attacker may know which variables should be targeted.",
                            "The malicious user may try to guess a global variable just by black box testing at the request level. For instance it is possible to create a variable and assign it a value, then pass it along to the request made to the server.",
                            "Web penetration tool can be used to automate the discovery of client controlled global variables."
                        ],
                        "indicators": [
                            "A web penetration tool probing a web server may generate abnormal activities recorded on log files. Abnormal traffic such as a high number of request coming from the same client may also rise the warnings from a monitoring system or an intrusion detection tool."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The user controlled variable.",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "The new value of the user controlled variable.",
                        "activation_zone": {
                            "description": "The command or request interpreter on the server side is responsible for interpreting the global variables. Sometime the global variables are controlled by a setting. For instance in PHP, the Boolean setting \"register_globals\" defines whether or not to register the EGPCS (Environment, GET, POST, Cookie, Server) variables as global variables. As of PHP 4.2.0, this settings defaults to off. This directive was removed in PHP 6.0.0.",
                            "categories": [
                                "Command Interpreter"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "name": "Using Escaped Slashes in Alternate Encoding",
                    "description": [
                        "This attack targets the use of the backslash in alternate encoding. An attacker can provide a backslash as a leading character and causes a parser to believe that the next character is special. This is called an escape. By using that trick, the attacker tries to exploit alternate ways to encode the same character which leads to filter problems and opens avenues to attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker can send input data to the host target (e.g., via http request or command line request"
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker craft malicious input data which includes escaped slashes. The attacker may need multiple attempts before finding a successful combination."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "The application accepts the backlash character as escape character.",
                            "The application server does incomplete input data decoding, filtering and validation."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "For example, the byte pair \\0 might result in a single zero byte (a NULL) being sent. Another example is \\t, which is sometimes converted into a tab character. There is often an equivalent encoding between the back slash and the escaped back slash. This means that \\/ results in a single forward slash. A single forward slash also results in a single forward slash. The encoding looks like this:",
                                    "/ yields /",
                                    "\\/ yields /"
                                ],
                                "external_references": null
                            },
                            {
                                "description": [
                                    "Attack Example: Escaped Slashes in Alternate Encodings",
                                    "An attack leveraging this pattern is very simple. If you believe the target may be filtering the slash, attempt to supply \\/ and see what happens. Example command strings to try out include",
                                    "which converts in many cases to",
                                    "To probe for this kind of problem, a small C program that uses string output routines can be very useful. File system calls make excellent testing fodder. The simple snippet",
                                    "produces the output",
                                    "Clearly, the back slash is ignored, and thus we have hit on a number of alternative encodings to experiment with. Given our previous example, we can extend the attack to include other possibilities:",
                                    "CWD ..\\/..\\/..\\/..\\/winnt",
                                    "CWD ../../../../winnt",
                                    "int main(int argc, char* argv[])",
                                    "{",
                                    "}",
                                    "puts(\"\\/ \\\\ \\? \\. \\| \");",
                                    "return 0;",
                                    "/ \\ ? . |",
                                    "CWD ..\\?\\?\\?\\?\\/..\\/..\\/..\\/winnt",
                                    "CWD \\.\\.\\/\\.\\.\\/\\.\\.\\/\\.\\.\\/winnt",
                                    "CWD ..\\|\\|\\|\\|\\/..\\/..\\/..\\/winnt"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "An attacker can manually inject backslash characters in the data sent to the target host and observe the results of the request.",
                            "The attacker may also run scripts or automated tools against the target host to uncover a vulnerability related to the use of the backslash character."
                        ],
                        "indicators": [
                            "An attacker can use a fuzzer in order to probe for this vulnerability. The fuzzer should generate suspicious network activity noticeable by an intrusion detection system."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data",
                                    "Read files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Availability"
                                ],
                                "impact": [
                                    "DoS: resource consumption (memory)"
                                ],
                                "notes": [
                                    "Denial of Service"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The user supplied data (e.g., HTTP request)",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "The backslash character injected in the user supplied data. The backslash character can be obfuscated with alternate encoding.",
                        "activation_zone": {
                            "description": "The command or request interpreter used on the host target may consider the backslash character as escape character.",
                            "categories": [
                                "Command Interpreter"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "name": "Using Slashes in Alternate Encoding",
                    "description": [
                        "This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker has access to a resource path and required to use slashes as resource delimiter."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker tries variation and combination of the slashes characters in different encoding format."
                                    ],
                                    "steps": null
                                },
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker found an unfiltered combination which maps to a valid path and accesses unauthorized resources (directories, files, etc.)"
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": null
                        },
                        "prerequisites": [
                            "The application server accepts paths to locate resources.",
                            "The application server does insufficient input data validation on the resource path requested by the user.",
                            "The access right to resources are not set properly."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Attack Example: Slashes in Alternate Encodings",
                                    "The two following requests are equivalent on most Web servers:",
                                    "is equivalent to",
                                    "Multiple encoding conversion problems can also be leveraged as various slashes are instantiated in URL-encoded, UTF-8, or Unicode. Consider the strings",
                                    "where %5C is equivalent to the \\ character.",
                                    "http://target server/some_directory\\..\\..\\..\\winnt",
                                    "http://target server/some_directory/../../../winnt",
                                    "http://target server/some_directory\\..%5C..%5C..\\winnt"
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "An attacker can try different encoding formats for the slashes characters and see if they produce the same filtering results.",
                            "Automated tools such as fuzzer can be used to test the URL decoding and filtering. Custom scripts can also be used. For example, a good script for verifying the correct interpretation of UTF-8 encoded characters can be found at http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt"
                        ],
                        "indicators": [
                            "If the first path decoding process has left some invalid or blacklisted characters, that may be a sign that the request is malicious.",
                            "Traffic filtering with IDS (or proxy) can detect request with suspicious URLs. IDS may use signature based identification to reveal such URL based attacks.",
                            "An attacker can use a fuzzer in order to probe for a UTF-8 encoding vulnerability. The fuzzer should generate suspicious network activity."
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The injection vector is a string path such as URL path.",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "The injection vector is a string path with malicious slashes characters. Alternate encoding format can also be used to code the slashes characters.",
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--b2f73929-b1f0-497c-ae7c-bec2991e8636",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "name": "XPath Injection",
                    "description": [
                        "An attacker can craft special user-controllable input consisting of XPath expressions to inject the XML database and bypass authentication or glean information that he normally would not be able to. XPath Injection enables an attacker to talk directly to the XML database, thus bypassing the application completely. XPath Injection results from the failure of an application to properly sanitize input used as part of dynamic XPath expressions used to query an XML database."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-83",
                            "url": "https://capec.mitre.org/data/definitions/83.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Survey the target",
                                    "description": [
                                        "Using a browser or an automated tool, an attacker records all instances of user-controllable input used to contruct XPath queries."
                                    ],
                                    "steps": [
                                        "Use an automated tool to record all instances of user-controllable input used to contruct XPath queries.",
                                        "Use a browser to manually explore the website and analyze how the application processes inputs."
                                    ]
                                },
                                {
                                    "title": "Determines the structure of queries",
                                    "description": [
                                        "Using manual or automated means, query inputs found for XPath weaknesses."
                                    ],
                                    "steps": [
                                        "Use an automated tool automatically probe the inputs for XPath weaknesses.",
                                        "Manually probe the inputs using characters such as single quote (') that can cause XPath-releated errors, thus indicating an XPath weakness."
                                    ]
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": "Exploit the target",
                                    "description": [
                                        "Craft malicious content containing XPath expressions that is not validated by the application and is executed as part of the XPath queries."
                                    ],
                                    "steps": [
                                        "Use the crafted input to execute unexpected queries that can disclose sensitive database information to the attacker."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "XPath queries used to retrieve information stored in XML documents",
                            "User-controllable input not properly sanitized before being used as part of XPath queries"
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Consider an application that uses an XML database to authenticate its users. The application retrieves the user name and password from a request and forms an XPath expression to query the database. An attacker can successfully bypass authentication and login without valid credentials through XPath Injection. This can be achieved by injecting the query to the XML database with XPath syntax that causes the authentication check to fail. Improper validation of user-controllable input and use of a non-parameterized XPath expression enable the attacker to inject an XPath expression that causes authentication bypass."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "The attacker tries to inject characters that can cause an XPath error, such as single-quote ('), or content that may cause a malformed XPath expression. If the injection of such content into the input causes an XPath error and the resulting error is displayed unfiltered, the attacker can begin to determine the nature of input validation and structure of XPath expressions used in queries."
                        ],
                        "indicators": [
                            "Too many exceptions generated by the application as a result of malformed XPath queries"
                        ],
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input used as part of dynamic XPath queries",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "XPath expressions intended to defeat checks run by XPath queries",
                        "activation_zone": {
                            "description": "XML database",
                            "categories": [
                                "Database"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Medium"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "name": "AJAX Fingerprinting",
                    "description": [
                        "This attack utilizes the frequent client-server roundtrips in Ajax conversation to scan a system. While Ajax does not open up new vulnerabilities per se, it does optimize them from an attacker point of view. In many XSS attacks the attacker must get a \"hole in one\" and successfully exploit the vulnerability on the victim side the first time, once the client is redirected the attacker has many chances to engage in follow on probes, but there is only one first chance. In a widely used web application this is not a major problem because 1 in a 1,000 is good enough in a widely used application.",
                        "A common first step for an attacker is to footprint the environment to understand what attacks will work. Since footprinting relies on enumeration, the conversational pattern of rapid, multiple requests and responses that are typical in Ajax applications enable an attacker to look for many vulnerabilities, well-known ports, network locations and so on."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": null,
                            "exploit": null
                        },
                        "prerequisites": [
                            "The user must allow JavaScript to execute in their browser"
                        ],
                        "severity": "Very High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "Footprinting can be executed over almost any protocol including HTTP, TCP, UDP, and ICMP, with the general goal of gaining further information about a host environment to launch further attacks. By appending a malicious script to an otherwise normal looking URL, the attacker can probe the system for banners, vulnerabilities, filenames, available services, and in short anything the host process has access to. The results of the probe are either used to execute additional javascript (for example, if the attackers' footprint script identifies a vulnerability in a firewall permission, then the client side script executes a javascript to change client firewall settings, or an attacker may simply echo the results of the scan back out to a remote host for targeting future attacks)."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "Payload delivered through standard communication protocols, such as Ajax application.",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "Command(s) executed directly on host",
                        "activation_zone": {
                            "description": "Client machine and client network",
                            "categories": [
                                "Client"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "Low",
                            "availability": "Low"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--bafad767-891e-4cb4-9a71-9c2e4c1d4f8d",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "name": "Forceful Browsing",
                    "description": [
                        "An attacker employs forceful browsing to access portions of a website that are otherwise unreachable through direct URL entry.",
                        "Usually, a front controller or similar design pattern is employed to protect access to portions of a web application.",
                        "Forceful browsing enables an attacker to access information, perform privileged operations and otherwise reach sections of the web application that have been improperly protected."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-87",
                            "url": "https://capec.mitre.org/data/definitions/87.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Spider",
                                    "description": [
                                        "Using an automated tool, an attacker follows all public links on a web site. He records all the links he finds."
                                    ],
                                    "steps": [
                                        "Use a spidering tool to follow and record all links",
                                        "Use a proxy tool to record all links visited during a manual traversal of the web application."
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Attempt well-known or guessable resource locations",
                                    "description": [
                                        "Using an automated tool, an attacker requests a variety of well-known URLs that correspond to administrative, debugging, or other useful internal actions. He records all the positive responses from the server."
                                    ],
                                    "steps": [
                                        "Use a spidering tool to follow and record attempts on well-known URLs",
                                        "Use a proxy tool to record all links visited during a manual traversal of attempts on well-known URLs."
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Use unauthorized resources",
                                    "description": [
                                        "By visiting the unprotected resource, the attacker makes use of unauthorized functionality."
                                    ],
                                    "steps": [
                                        "Access unprotected functions and execute them."
                                    ]
                                },
                                {
                                    "title": "View unauthorized data",
                                    "description": [
                                        "The attacker discovers and views unprotected sensitive data."
                                    ],
                                    "steps": [
                                        "Direct request of protected pages that directly access database back-ends. (e.g., list.jsp, accounts.jsp, status.jsp, etc.)"
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "The forcibly browseable pages or accessible resources must be discoverable and improperly protected."
                        ],
                        "severity": "High",
                        "likelihood": "Very High",
                        "examples": [
                            {
                                "description": [
                                    "A bulletin board application provides an administrative interface at admin.aspx when the user logging in belongs to the administrators group.",
                                    "An attacker can access the admin.aspx interface by making a direct request to the page. Not having access to the interface appropriately protected allows the attacker to perform administrative functions without having to authenticate himself in that role."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": [
                            "Following all the links recursively reveals resources that are available",
                            "Having a directory listing also points to the available pages and resources in the application that may be forcibly browseable."
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read files or directories"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": null
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--7135cef9-b546-422a-a361-66b9606687c7",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "name": "OS Command Injection",
                    "description": [
                        "In this type of an attack, an adversary injects operating system commands into existing application functions. An application that uses untrusted input to build command strings is vulnerable. An adversary can leverage OS command injection in an application to elevate privileges, execute arbitrary commands and compromise the underlying operating system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-88",
                            "url": "https://capec.mitre.org/data/definitions/88.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": "Identify inputs for OS commands",
                                    "description": [
                                        "The attacker determines user controllable input that gets passed as part of a command to the underlying operating system."
                                    ],
                                    "steps": [
                                        "Port mapping. Identify ports that the system is listening on, and attempt to identify inputs and protocol types on those ports.",
                                        "TCP/IP Fingerprinting. The attacker uses various software to make connections or partial connections and observe idiosyncratic responses from the operating system. Using those responses, he attempts to guess the actual operating system.",
                                        "Induce errors to find informative error messages"
                                    ]
                                },
                                {
                                    "title": "Survey the Application",
                                    "description": [
                                        "The attacker surveys the target application, possibly as a valid and authenticated user"
                                    ],
                                    "steps": [
                                        "Spidering web sites for all available links",
                                        "Inventory all application inputs"
                                    ]
                                }
                            ],
                            "experiment": [
                                {
                                    "title": "Vary inputs, looking for malicious results.",
                                    "description": [
                                        "Depending on whether the application being exploited is a remote or local one the attacker crafts the appropriate malicious input, containing OS commands, to be passed to the application"
                                    ],
                                    "steps": [
                                        "Inject command delimiters using network packet injection tools (netcat, nemesis, etc.)",
                                        "Inject command delimiters using web test frameworks (proxies, TamperData, custom programs, etc.)"
                                    ]
                                }
                            ],
                            "exploit": [
                                {
                                    "title": "Execute malicious commands",
                                    "description": [
                                        "The attacker may steal information, install a back door access mechanism, elevate privileges or compromise the system in some other way."
                                    ],
                                    "steps": [
                                        "The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection).",
                                        "The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection).",
                                        "The attacker executes a command that stores sensitive information into a location where he can retrieve it later (perhaps using a different command injection)."
                                    ]
                                }
                            ]
                        },
                        "prerequisites": [
                            "User controllable input used as part of commands to the underlying operating system."
                        ],
                        "severity": "High",
                        "likelihood": "High",
                        "examples": [
                            {
                                "description": [
                                    "A transaction processing system relies on code written in a number of languages. To access this functionality, the system passes transaction information on the system command line.",
                                    "An attacker can gain access to the system command line and execute malicious commands by injecting these commands in the transaction data. If successful, the attacker can steal information, install backdoors and perform other nefarious activities that can compromise the system and its data."
                                ],
                                "external_references": [
                                    {
                                        "source_name": "unknown",
                                        "id": null,
                                        "url": null,
                                        "description": "A vulnerability in Mozilla Firefox 1.x browser allows an attacker to execute arbitrary commands on the UNIX/Linux operating system. The vulnerability is caused due to the shell script used to launch Firefox parsing shell commands that are enclosed within back-ticks in the URL provided via the command line. This can be exploited to execute arbitrary shell commands by tricking a user into following a malicious link in an external application which uses Firefox as the default browser (e.g. the mail client Evolution on Red Hat Enterprise Linux 4)."
                                    }
                                ]
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Integrity",
                                    "Availability"
                                ],
                                "impact": [
                                    "Execute unauthorized code or commands"
                                ],
                                "notes": [
                                    "Run Arbitrary Code"
                                ]
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity",
                                    "Bypass protection mechanism"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "User-controllable input used as part of operating system commands",
                            "categories": [
                                "Client"
                            ]
                        },
                        "payload": "Operating system commands injected by the attacker, intended to escalate privilege or divulge information",
                        "activation_zone": {
                            "description": "Underlying operating system hosting the exploited application.",
                            "categories": [
                                "Operating System"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "name": "Man in the Middle Attack",
                    "description": [
                        "This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": null,
                            "experiment": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker inserts himself into the communication channel initially acting as a routing proxy between the two targeted components. The attacker may or may not have to use cryptography."
                                    ],
                                    "steps": null
                                }
                            ],
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "The attacker observes, filters or alters passed data of its choosing to gain access to sensitive information or to manipulate the actions of the two target components for his own purposes."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "There are two components communicating with each other.",
                            "An attacker is able to identify the nature and mechanism of communication between the two target components.",
                            "An attacker can eavesdrop on the communication between the target components.",
                            "Strong mutual authentication is not used between the two target components yielding opportunity for attacker interposition.",
                            "The communication occurs in clear (not encrypted) or with insufficient and spoofable encryption."
                        ],
                        "severity": "Very High",
                        "likelihood": "Very High",
                        "examples": null,
                        "probing_techniques": [
                            "The attacker can try to get the public-keys of the victims.",
                            "There are free software tool to perform man in the middle attack (packet analysis, etc.)"
                        ],
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": "The captured or modified data in transit",
                            "categories": [
                                "Network"
                            ]
                        },
                        "payload": "The new value of the data or the replay of the same data (e.g. credential)",
                        "activation_zone": {
                            "description": "The messages exchanged between the two target hosts.",
                            "categories": [
                                "Message"
                            ]
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "High"
                        }
                    }
                },
                {
                    "type": "attack-pattern",
                    "id": "attack-pattern--fbf925a4-b1b1-46bc-9e14-60fc4cabead2",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "name": "Cryptanalysis",
                    "description": [
                        "Cryptanalysis is a process of finding weaknesses in cryptographic algorithms and using these weaknesses to decipher the ciphertext without knowing the secret key (instance deduction). Sometimes the weakness is not in the cryptographic algorithm itself, but rather in how it is applied that makes cryptanalysis successful. An attacker may have other goals as well, such as:",
                        "The goal of the attacker performing cryptanalysis will depend on the specific needs of the attacker in a given attack context. In most cases, if cryptanalysis is successful at all, an attacker will not be able to go past being able to deduce some information about the plaintext (goal 3). However, that may be sufficient for an attacker, depending on the context.",
                        "1. Total Break - Finding the secret key",
                        "2. Global Deduction - Finding a functionally equivalent algorithm for encryption and decryption that does not require knowledge of the secret key.",
                        "3. Information Deduction - Gaining some information about plaintexts or ciphertexts that was not previously known",
                        "4. Distinguishing Algorithm - The attacker has the ability to distinguish the output of the encryption (ciphertext) from a random permutation of bits"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-97",
                            "url": "https://capec.mitre.org/data/definitions/97.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "steps": {
                            "explore": [
                                {
                                    "title": null,
                                    "description": [
                                        "An attacker discovers a weakness in the cryptographic algorithm or a weakness in how it was applied to a particular chunk of plaintext."
                                    ],
                                    "steps": null
                                }
                            ],
                            "experiment": null,
                            "exploit": [
                                {
                                    "title": null,
                                    "description": [
                                        "An attacker leverages the discovered weakness to decrypt, partially decrypt or infer some information about the contents of the encrypted message. All of that is done without knowing the secret key."
                                    ],
                                    "steps": null
                                }
                            ]
                        },
                        "prerequisites": [
                            "The target software utilizes some sort of cryptographic algorithm.",
                            "An underlying weaknesses exists either in the cryptographic algorithm used or in the way that it was applied to a particular chunk of plaintext.",
                            "The encryption algorithm is known to the attacker.",
                            "An attacker has access to the ciphertext."
                        ],
                        "severity": "Very High",
                        "likelihood": "Very Low",
                        "examples": [
                            {
                                "description": [
                                    "A very easy to understand (but totally inapplicable to modern cryptographic ciphers) example is a cryptanalysis technique called frequency analysis that can be successfully applied to the very basic classic encryption algorithms that performed mono-alphabetic substitution replacing each letter in the plaintext with its predetermined mapping letter from the same alphabet. This was considered an improvement over a more basic technique that would simply shift all of the letters of the plaintext by some constant number of positions and replace the original letters with the new letter with the resultant alphabet position. While mono-alphabetic substitution ciphers are resilient to blind brute force, they can be broken easily with nothing more than a pen and paper. Frequency analysis cryptanalysis uses the fact that natural language is not random and mono-alphabetic substitution does not hide the statistical properties of the natural language. So if the letter \"E\" in an English language occurs with a certain known frequency (about 12.7%), whatever \"E\" was substituted with to get to the ciphertext, will occur with the similar frequency. Having this frequency information allows the cryptanalyst to quickly determine the substitutions and decipher the ciphertext. Frequency analysis techniques are not applicable to modern ciphers as they are all resilient to it (unless this is a very bad case of a homegrown encryption algorithm). This example is just here to illustrate a rudimentary example of cryptanalysis."
                                ],
                                "external_references": null
                            }
                        ],
                        "probing_techniques": null,
                        "indicators": null,
                        "motivations": [
                            {
                                "scope": [
                                    "Confidentiality"
                                ],
                                "impact": [
                                    "Read application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Integrity"
                                ],
                                "impact": [
                                    "Modify application data"
                                ],
                                "notes": null
                            },
                            {
                                "scope": [
                                    "Confidentiality",
                                    "Access_Control",
                                    "Authorization"
                                ],
                                "impact": [
                                    "Gain privileges / assume identity"
                                ],
                                "notes": null
                            }
                        ],
                        "injection_vector": {
                            "description": null,
                            "categories": null
                        },
                        "payload": null,
                        "activation_zone": {
                            "description": null,
                            "categories": null
                        },
                        "impact": {
                            "confidentiality": "High",
                            "integrity": "High",
                            "availability": "Low"
                        }
                    }
                }
            ],
            "course_of_actions": [
                {
                    "type": "course-of-action",
                    "id": "course-of-action--fcb745c2-b144-4f24-a865-ea62762c539e",
                    "created": "2018-05-15T08:54:56.884Z",
                    "modified": "2018-05-15T08:54:56.884Z",
                    "description": [
                        "In a J2EE setting, administrators can associate a role that is impossible for the authenticator to grant users, such as \"NoAccess\", with all Servlets to which access is guarded by a limited number of servlets visible to, and accessible by, the user.",
                        "Having done so, any direct access to those protected Servlets will be prohibited by the web container.",
                        "In a more general setting, the administrator must mark every resource besides the ones supposed to be exposed to the user as accessible by a role impossible for the user to assume. The default security setting must be to deny access and then grant access only to those resources intended by business logic."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-1",
                            "url": "https://capec.mitre.org/data/definitions/1.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use access control list (ACL)",
                        "mitigation": "Access control list (ACL)"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--fcd41d21-84a7-4133-82a6-e051c47a4cf6",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "description": [
                        "Make sure that HTTPS is used to communicate with the target system. Alternatively, use VPN if possible. It is important to ensure that all communication between the client and the server happens via an encrypted secure channel."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-102",
                            "url": "https://capec.mitre.org/data/definitions/102.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--3c7a9387-1642-4a93-83df-a0dc642e9e14",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "description": [
                        "Modify the session token with each transmission and protect it with cryptography. Add the idea of request sequencing that gives the server an ability to detect replay attacks."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-102",
                            "url": "https://capec.mitre.org/data/definitions/102.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Implement modification of session tokens",
                        "mitigation": "Session token modificator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1e0e1eb5-6fbd-4a05-9d49-1bdc76c822ba",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "description": [
                        "Disable script execution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--4e458635-e58d-41f0-a1a8-7cf547f3db0e",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "description": [
                        "Ensure that sufficient input validation is performed for any potentially untrusted data before it is used in any privileged context or zone"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--107f17f0-249c-44db-b8b2-d278c21ebfa4",
                    "created": "2018-05-15T08:54:56.885Z",
                    "modified": "2018-05-15T08:54:56.885Z",
                    "description": [
                        "Limit the flow of untrusted data into the privileged areas of the system that run in the higher trust zone"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--bcbfe0d3-d93f-47fa-bd6d-54b6513c2974",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Limit the sites that are being added to the local machine zone and restrict the privileges of the code running in that zone to the bare minimum"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9a9a2eb3-65e2-49a6-8bb2-bd29adc0c4ed",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Ensure proper HTML output encoding before writing user supplied data to the page"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-104",
                            "url": "https://capec.mitre.org/data/definitions/104.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0b970bc4-8acb-4c0b-ba2e-985cf449fa48",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Disable MSSQL xp_cmdshell directive on the database"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-108",
                            "url": "https://capec.mitre.org/data/definitions/108.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable MSSQL",
                        "mitigation": "MSSQL disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d94c120e-8bdb-4416-8ea7-638db4e4ac35",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Properly validate the data (syntactically and semantically) before writing it to the database."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-108",
                            "url": "https://capec.mitre.org/data/definitions/108.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--11943b67-707c-4a64-95c6-0d137426fdc5",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Do not implicitly trust the data stored in the database. Re-validate it prior to usage to make sure that it is safe to use in a given context (e.g. as a command line argument)."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-108",
                            "url": "https://capec.mitre.org/data/definitions/108.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2b104bb8-d997-4810-afad-d4ab68c3f885",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Remember to understand how to use the data access methods generated by the ORM tool / framework properly in a way that would leverage the built-in security mechanisms of the framework"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-109",
                            "url": "https://capec.mitre.org/data/definitions/109.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict data access",
                        "mitigation": "Data access restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--74df4c06-4901-49d7-959a-f04aac51803f",
                    "created": "2018-05-15T08:54:56.886Z",
                    "modified": "2018-05-15T08:54:56.886Z",
                    "description": [
                        "Ensure to keep up to date with security relevant updates to the persistence framework used within your application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-109",
                            "url": "https://capec.mitre.org/data/definitions/109.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9ef31254-0d00-4e92-8aba-8231b299d478",
                    "created": "2018-05-15T08:54:56.887Z",
                    "modified": "2018-05-15T08:54:56.887Z",
                    "description": [
                        "Implementation: Server routines should be determined by content not determined by filename or file extension."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-11",
                            "url": "https://capec.mitre.org/data/definitions/11.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Avoid basing logic on file-types",
                        "mitigation": "Don't base logic on file-types"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0db08b9f-8351-4397-b5f6-c32928b6480f",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Properly validate and sanitize/reject user input at the service provider."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-110",
                            "url": "https://capec.mitre.org/data/definitions/110.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2b661a15-5144-42cd-b89b-38b22e5caa63",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Ensure that prepared statements or other mechanism that enables parameter binding is used when accessing the database in a way that would prevent the attackers' supplied data from controlling the structure of the executed query."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-110",
                            "url": "https://capec.mitre.org/data/definitions/110.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Bind parameters",
                        "mitigation": "Parameter binder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2b72a8af-9218-4ab5-9b79-d25b6fef034c",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "At the database level, ensure that the database user used by the application in a particular context has the minimum needed privileges to the database that are needed to perform the operation. When possible, run queries against pre-generated views rather than the tables directly."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-110",
                            "url": "https://capec.mitre.org/data/definitions/110.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--45f58c42-f841-4e35-b6d9-e66c9a03d489",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Select a provably large secret space for selection of the secret. Provably large means that the procedure by which the secret is selected does not have artifacts that significantly reduce the size of the total secret space."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-112",
                            "url": "https://capec.mitre.org/data/definitions/112.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Allow many possible secrets",
                        "mitigation": "Large secret space"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b866f863-def7-4836-8ed4-7406b2dbdf1c",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Do not provide the means for an attacker to determine success independently. This forces the attacker to check their guesses against an external authority, which can slow the attack and warn the defender. This mitigation may not be possible if testing material must appear externally, such as with a transmitted cryptotext."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-112",
                            "url": "https://capec.mitre.org/data/definitions/112.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check secrets against external authority",
                        "mitigation": "External authority secret checks"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--3746ea11-d6f9-428a-b6e6-4d8d23e20be2",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Design: Configure the access control correctly."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Configure access control",
                        "mitigation": "Access controller"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2664dc4d-ff8f-438a-a71e-83aec254a4ea",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Design: Enforce principle of least privilege."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--72eff15c-a2dd-4159-a763-a89e77cb34f4",
                    "created": "2018-05-15T08:54:56.888Z",
                    "modified": "2018-05-15T08:54:56.888Z",
                    "description": [
                        "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0f989f04-274d-4188-9504-8353d6759e9c",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Design: Input validation. Assume that user inputs are malicious. Utilize strict type, character, and encoding enforcement."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--3f2187e9-a5f9-4300-8a6e-2248c4fc321b",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use proxy communication",
                        "mitigation": "Communication proxy"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--04c4d18d-bed8-4a4e-9694-38b0ad5e49ae",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2f092e3d-2473-420d-816b-88473f6d919e",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Monitor integrity",
                        "mitigation": "Integrity monitor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--767aebb2-21c3-4c78-9e6c-2231cef22b37",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Perform input validation for all remote content, including remote and user-generated content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--cc0510c5-0064-44a5-8cc9-54eded0925cb",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan or test for vulnerabilities",
                        "mitigation": "Vulnerability scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--bb8cbca2-b75a-4b6b-8fe9-4d97b25700e6",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Use indirect references rather than actual file names."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use indirect references",
                        "mitigation": "Indirect referencer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f63b9005-937f-4a5c-bf1d-63103463aeb0",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Use possible permissions on file access when developing and deploying web applications."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict data access",
                        "mitigation": "Data access restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1df8accf-a019-4c4e-b622-35a71b58e788",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "Implementation: Validate user input by only accepting known good. Ensure all content that is delivered to client is sanitized against an acceptable content specification -- whitelisting approach."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--6c9aa93a-76b0-4047-a061-39ef34da3e22",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "1. Using blank index.html: putting blank index.html simply prevent directory listings from displaying to site visitors."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-127",
                            "url": "https://capec.mitre.org/data/definitions/127.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use blank index.html",
                        "mitigation": "Blank index.html"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--28e2bb6e-dbea-44ca-b217-6d89814cf538",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "2. Preventing with .htaccess in Apache web server: In .htaccess, write \"Options-indexes\"."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-127",
                            "url": "https://capec.mitre.org/data/definitions/127.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Prevent with .htaccess",
                        "mitigation": ".htaccess file"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--888ea44a-b704-45de-8f60-2d5d9e99bd7e",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "3. Suppressing error messages: using error 403 \"Forbidden\" message exactly like error 404 \"Not Found\" message."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-127",
                            "url": "https://capec.mitre.org/data/definitions/127.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Suppress error messages",
                        "mitigation": "Error message suppressor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--aa86e0f7-3069-480d-8522-daffa9ac05cd",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "Protect environment variables against unauthorized read and write access."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Protect environment variables",
                        "mitigation": "Environment variable protector"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e72f44b2-d1f7-4aff-8186-ae87458e20f1",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "Protect the configuration files which contain environment variables against illegitimate read and write access."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Protect environment variables",
                        "mitigation": "Environment variable protector"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9758ab96-a0e0-4615-bd2e-a5ed189d539a",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--28953ee6-d2ce-4f74-831a-3429ab2ab50d",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--030dbe69-ffbd-427c-89c0-9304feb6d719",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "Design: Minimize switch and option functionality to only that necessary for correct function of the command."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-133",
                            "url": "https://capec.mitre.org/data/definitions/133.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Minimize switches and options",
                        "mitigation": "Minimal switches and options"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2593205c-42cc-484c-9e9a-c205fb306830",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Implementation: Remove all debug and testing options from production code."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-133",
                            "url": "https://capec.mitre.org/data/definitions/133.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Delete debug testing in production",
                        "mitigation": "No debug testing in production"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e344f099-eb26-4a77-a773-7f3691f6d92c",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as LDAP content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-136",
                            "url": "https://capec.mitre.org/data/definitions/136.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Strongly validate input",
                        "mitigation": "Strong input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--495ce42f-34ec-43e1-afcb-7674fea6182f",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the LDAP or application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-136",
                            "url": "https://capec.mitre.org/data/definitions/136.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--92a3245b-361d-4445-8c29-9fe3b7787ea8",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Design: Perform whitelist validation against a positive specification for command length, type, and parameters."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0c0c3840-131e-47f1-9c88-858a9e2803b3",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Design: Limit program privileges, so if commands circumvent program input validation or filter routines then commands do not running under a privileged account"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c6a7c52f-a676-4593-9dce-040b33e20019",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Implementation: Perform input validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e28a10fd-866d-4616-8c71-1d8106432856",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Implementation: Use type conversions such as JDBC prepared statements."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use type conversion",
                        "mitigation": "Type converter"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--445820c3-7f3d-47e6-a306-3507c6d15a53",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Employ robust authentication processes (e.g., multi-factor authentication)."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-151",
                            "url": "https://capec.mitre.org/data/definitions/151.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e7b1f22d-b598-4589-8180-9584e0a96480",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Cryptographic techniques that render a data-stream unreadable can thwart this type of attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-158",
                            "url": "https://capec.mitre.org/data/definitions/158.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt data",
                        "mitigation": "Data encrypter"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--573731ea-96af-49c3-b92c-3ecec02d2210",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Design: Enforce principle of least privilege"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-17",
                            "url": "https://capec.mitre.org/data/definitions/17.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--25303564-e31d-4260-90c4-d7bd45614182",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-17",
                            "url": "https://capec.mitre.org/data/definitions/17.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ba1500bc-2a43-4021-a50c-618d89498b9c",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-17",
                            "url": "https://capec.mitre.org/data/definitions/17.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan or test for vulnerabilities",
                        "mitigation": "Vulnerability scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--36f158bc-87c9-41c9-bbdb-2375d77b8b91",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Use browser technologies that do not allow client side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--083e4702-2215-4fed-90ca-9d59f0ce6e57",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Utilize strict type, character, and encoding enforcement."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e94d9e65-016f-4dc0-bf65-8a043a776140",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Server side developers should not proxy content via XHR or other means. If a HTTP proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use proxy communication",
                        "mitigation": "Communication proxy"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e433e5c6-5cf8-4760-9a92-79ba6d9943ca",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Ensure all content that is delivered to client is sanitized against an acceptable content specification."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Sanitize content",
                        "mitigation": "Content sanitizer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--27655364-736d-4f8c-94a8-196f3897ac48",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Perform input validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c0efe893-5d0b-4d59-9707-a2659129ad18",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Perform output validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1ed3c2bd-c2c9-48ac-9a65-560a112d24bf",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Disable scripting languages such as JavaScript in browser"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--722f7f0b-b3ab-4d3d-822c-f2e15ed07718",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Session tokens for specific host"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ea711c94-20d4-45b2-ae58-801114a6a63e",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--cd5d4551-a8be-46aa-8b43-525049a2c1b6",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--69bd9bc1-f829-419b-817b-4dd147a1f36c",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Implementation: Use session IDs that are difficult to guess or brute-force: One way for the attackers to obtain valid session IDs is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-196",
                            "url": "https://capec.mitre.org/data/definitions/196.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--80cd90fe-d40a-4b4d-9beb-37e39d2c2955",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Implementation: Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-196",
                            "url": "https://capec.mitre.org/data/definitions/196.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ff4bcc3e-2fef-49c5-a144-c1a37e583e31",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Use commonly accepted algorithms and recommended key sizes. The key size used will depend on how important it is to keep the data confidential and for how long."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-20",
                            "url": "https://capec.mitre.org/data/definitions/20.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use sufficiently complex decryption key",
                        "mitigation": "Complex decryption key"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--8b35179f-58ef-451a-8266-a7a506a43a4a",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "In theory a brute force attack performing an exhaustive key space search will always succeed, so the goal is to have computational security. Moore's law needs to be taken into account that suggests that computing resources double every eighteen months."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-20",
                            "url": "https://capec.mitre.org/data/definitions/20.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use sufficiently complex decryption key",
                        "mitigation": "Complex decryption key"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1a4e19af-29b5-4138-86ca-1968d3e62041",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Design: utilize strong federated identity such as SAML to encrypt and sign identity tokens in transit."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use security assertion markup language (SAML) for communication",
                        "mitigation": "Security assertion markup language (SAML) communication"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--68eed600-bce1-41f6-90f2-e631809ca2be",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Implementation: Use industry standards session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--10563166-9713-4dc7-9fd6-6fffd718d087",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Implementation: If the session identifier is used for authentication, such as in the so-called single sign on use cases, then ensure that it is protected at the same level of assurance as authentication tokens."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2da97144-e9a0-4004-bf82-7e5237a203fc",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Implementation: If the web or application server supports it, then encrypting and/or signing the session ID (such as cookie) can protect the ID if intercepted."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d15d97c0-e59d-4158-801c-809552a681bf",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Design: Use strong session identifiers that are protected in transit and at rest."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--79aa6c58-67ee-4e77-8f25-a98fc620243e",
                    "created": "2018-05-15T08:54:56.894Z",
                    "modified": "2018-05-15T08:54:56.894Z",
                    "description": [
                        "Implementation: Utilize a session timeout for all sessions, for example 20 minutes. If the user does not explicitly logout, the server terminates their session after this period of inactivity. If the user logs back in then a new session key is generated."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b5c04fec-9f02-4dcf-9903-3bd0376e2716",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "description": [
                        "Implementation: Verify of authenticity of all session IDs at runtime."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f8ebfe39-5328-49c1-a80e-beebd11d29f0",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "description": [
                        "Design: Construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are catalogued and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use a code book",
                        "mitigation": "Code book"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c6ce4e92-7ea5-437c-9ae2-fc87887830eb",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "description": [
                        "Design: wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7e2b6877-a0dc-4bf6-9c1e-8b719d765478",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "description": [
                        "Implementation: Obfuscate server fields of HTTP response."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--161e73cc-c756-439b-9db9-29de5440cbe1",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Hide inner ordering of HTTP response header."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d883fe1d-5e70-4f25-9ed2-ae0917d9b067",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Customizing HTTP error codes such as 404 or 500."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--70fd72d0-62c7-468a-83eb-bab38fd391f0",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Hide HTTP response header software information filed."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f98bc3f5-f6b6-4d6c-ba07-0937c17c2ac9",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Hide cookie's software information filed."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0dc73c61-661b-4b53-993e-ec5930e1507a",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Obfuscate database type in Database API's error message."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Hide data",
                        "mitigation": "Data hider"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ed9127df-c4fe-42f6-854e-ce7e752fa460",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--50894d28-a738-4869-b686-74af61cbb4ef",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Do not rely on client validation or encoding for security purposes."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c01e428b-3edd-4ae0-910e-601f4e55c4ed",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Utilize digital signatures to increase authentication assurance."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d697e6a0-0187-4c7b-93f0-1a40efb5b914",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Utilize two factor authentication to increase authentication assurance."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1a3af804-cd59-4cad-a53b-2ded9eb8546e",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Implementation: Perform input validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-22",
                            "url": "https://capec.mitre.org/data/definitions/22.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b104d4b7-c447-4c00-9da8-0495078f03f3",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Enforce principle of least privilege"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--753d88f4-bbdf-4da2-b99d-c6b76c879819",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Validate all input for content including files. Ensure that if files and remote content must be accepted that once accepted, they are placed in a sandbox type location so that lower assurance clients cannot write up to higher assurance processes (like Web server processes for example)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c66114c2-fd48-4821-9459-72836cc944eb",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Execute programs with constrained privileges, so parent process does not open up further vulnerabilities. Ensure that all directories, temporary directories and files, and memory are executing with limited privileges to protect against remote execution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b4032fd7-4f99-455d-b8d4-faf5dd384364",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Design: Proxy communication to host, so that communications are terminated at the proxy, sanitizing the requests before forwarding to server host."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use proxy communication",
                        "mitigation": "Communication proxy"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--faab2298-e0b8-44a0-9d76-e4d6a4f19bba",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Implementation: Virus scanning on host"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Install anti-virus software",
                        "mitigation": "Anti-virus software"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f1e19856-dacc-4307-8513-87a7dbc7329c",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Implementation: Host integrity monitoring for critical files, directories, and processes. The goal of host integrity monitoring is to be aware when a security issue has occurred so that incident response and other forensic activities can begin."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Monitor integrity",
                        "mitigation": "Integrity monitor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d07dd2ac-2836-402b-99f0-38df346928a0",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Carefully validate and sanitize all user-controllable data prior to passing it to the XML parser routine. Ensure that the resultant data is safe to pass to the XML parser."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a221165d-ee32-4589-ba42-1ca046fda955",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Perform validation on canonical data."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d34a791e-54d5-45d9-b0f0-c011ba6b5e0e",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Pick a robust implementation of an XML parser."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use a strong XML parser",
                        "mitigation": "Strong XML parser"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--33ac9679-e912-4476-8a17-bb502243bfba",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Validate XML against a valid schema or DTD prior to parsing."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--cf2aed52-6502-4788-b921-685b9b08a0a7",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "All user-controllable input should be validated and filtered for potentially unwanted characters. Whitelisting input is desired, but if a blacklisting approach is necessary, then focusing on command related terms and delimiters is necessary."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-248",
                            "url": "https://capec.mitre.org/data/definitions/248.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f20e649a-fbdb-4a2a-8a23-066af4fdb7b5",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Input should be encoded prior to use in commands to make sure command related characters are not treated as part of the command. For example, quotation characters may need to be encoded so that the application does not treat the quotation as a delimiter."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-248",
                            "url": "https://capec.mitre.org/data/definitions/248.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--48f72c1e-39f9-4b6d-8048-1b333f42a538",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Input should be parameterized, or restricted to data sections of a command, thus removing the chance that the input will be treated as part of the command itself."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-248",
                            "url": "https://capec.mitre.org/data/definitions/248.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ce079a56-eabe-4fe1-bf3d-b1d5a3fdd819",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XML data or a query.",
                        "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-250",
                            "url": "https://capec.mitre.org/data/definitions/250.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Strongly validate input",
                        "mitigation": "Strong input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--90c8f2a6-7245-4b67-bf08-987fec1f6ac1",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "Design: Use input validation for cookies"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ee00c42a-dd69-41be-8720-fda7d9acada7",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "Design: Generate and validate MAC for cookies"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--43ea7b51-f3d5-40b8-8a07-774d68a83d8b",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "Implementation: Use SSL/TLS to protect cookie in transit"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7936c6e2-ae90-4723-8cc4-05d26a2182bc",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "Implementation: Ensure the web server implements all relevant security patches, many exploitable buffer overflows are fixed in patches issued for the software."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--5064d993-b8ca-4462-a4d6-3d8ddb7c57a7",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "One solution to this problem is to protect encrypted data with a CRC of some sort. If knowing who last manipulated the data is important, then using a cryptographic \"message authentication code\" (or hMAC) is prescribed. However, this guidance is not a panacea. In particular, any value created by (and therefore encrypted by) the client, which itself is a \"malicious\" value, all the protective cryptography in the world can't make the value 'correct' again. Put simply, if the client has control over the whole process of generating and encoding the value, then simply protecting its integrity doesn't help."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-39",
                            "url": "https://capec.mitre.org/data/definitions/39.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--5db312e9-754b-4769-abd2-1cb8cb0d4c02",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Make sure to protect client side authentication tokens for confidentiality (encryption) and integrity (signed hash)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-39",
                            "url": "https://capec.mitre.org/data/definitions/39.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Monitor integrity",
                        "mitigation": "Integrity monitor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--653c1d47-026c-4afd-97c4-26c1fb9f2e6b",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Make sure that all session tokens use a good source of randomness"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-39",
                            "url": "https://capec.mitre.org/data/definitions/39.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d48a8116-1f40-4453-92d1-92255807e6a6",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Perform validation on the server side to make sure that client side data tokens are consistent with what is expected."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-39",
                            "url": "https://capec.mitre.org/data/definitions/39.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e76894c3-5f9f-49fa-b53f-8ff099fc56d2",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Design: Perform validation on email header data"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-41",
                            "url": "https://capec.mitre.org/data/definitions/41.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--281ae476-eb92-4a5b-b1f5-a042e8511c1c",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Implementation: Implement email filtering solutions on mail server or on MTA, relay server."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-41",
                            "url": "https://capec.mitre.org/data/definitions/41.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Filter e-mail",
                        "mitigation": "E-mail filterer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--6ed6fcac-ec60-4469-84f8-090b22e945d8",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Implementation: Mail servers that perform strict validation may catch these attacks, because metacharacters are not allowed in many header variables such as dns names"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-41",
                            "url": "https://capec.mitre.org/data/definitions/41.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--fccaed6a-149f-4cf0-987e-0250c275ab57",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "description": [
                        "An iterative approach to input validation may be required to ensure that no dangerous characters are present. It may be necessary to implement redundant checking across different input validation layers. Ensure that invalid data is rejected as soon as possible and do not continue to work with it."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-43",
                            "url": "https://capec.mitre.org/data/definitions/43.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--098508d6-ca30-46ac-8947-0ef9629da51c",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "description": [
                        "Make sure to perform input validation on canonicalized data (i.e. data that is data in its most standard form). This will help avoid tricky encodings getting past the filters."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-43",
                            "url": "https://capec.mitre.org/data/definitions/43.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f24b4b14-722b-4ed9-bb02-40868eb675f9",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-43",
                            "url": "https://capec.mitre.org/data/definitions/43.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--111a63a7-70d2-4da4-89d1-182fee77ac33",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "description": [
                        "Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check for symbolic links",
                        "mitigation": "Symbolic link checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--957f02f0-6077-499f-b762-4c2f54f137c1",
                    "created": "2018-05-15T08:54:56.900Z",
                    "modified": "2018-05-15T08:54:56.900Z",
                    "description": [
                        "Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check for symbolic links",
                        "mitigation": "Symbolic link checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c7d2186d-d1a6-4506-96e1-13fb33de0de0",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Pay attention to the resource pointed to by your symlink links (See attack pattern named \"Forced Symlink race\"), they can be replaced by malicious resources."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check for symbolic links",
                        "mitigation": "Symbolic link checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e81af56f-4d6d-4374-a3b8-9163ef367c24",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Always check the size of the input data before copying to a buffer."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Prevent buffer overflow",
                        "mitigation": "Buffer overflow preventor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9427dd37-fbf2-45b2-88b1-019ec7cc0444",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Use a language or compiler that performs automatic bounds checking."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check buffer bounds",
                        "mitigation": "Buffer bounds checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--27d7d1ea-8e80-4a4c-881c-9359f2228b47",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Use an abstraction library to abstract away risky APIs. Not a complete solution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Avoid risky APIs",
                        "mitigation": "API risk checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0c00f312-addf-4c8c-baef-d4ba6242348f",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Check buffer bounds",
                        "mitigation": "Buffer bounds checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a4224f24-386a-45f1-af60-c63c58517002",
                    "created": "2018-05-15T08:54:56.901Z",
                    "modified": "2018-05-15T08:54:56.901Z",
                    "description": [
                        "Use OS-level preventative functionality. Not a complete solution."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": null,
                        "mitigation": null
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--08c5cd0f-6794-4048-a053-e5438dd157ed",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "description": [
                        "Certification Authorities need to stop using the weak collision prone MD5 hashing algorithm to hash the certificates that they are about to sign. Instead they should be using stronger hashing functions such as SHA-256 or SHA-512."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-459",
                            "url": "https://capec.mitre.org/data/definitions/459.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong hash algorithms (like SHA-256 or SHA-512)",
                        "mitigation": "Strong hash algorithm (like SHA-256 or SHA-512)"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c35c2e20-eaed-42f0-82d1-76c788021334",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "description": [
                        "Configuration: If using a Web Application Firewall (WAF), filters should be carefully configured to detect abnormal HTTP requests",
                        "Design: Perform URL encoding",
                        "Implementation: Use strict regular expressions in URL rewriting",
                        "Implementation: Beware of multiple occurrences of a parameter in a Query String"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-460",
                            "url": "https://capec.mitre.org/data/definitions/460.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--4527f0b0-83f5-4bb8-a224-eb66e3b106fc",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "description": [
                        "Design: Use a secure message authentication code (MAC) function such as an HMAC-SHA1"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-461",
                            "url": "https://capec.mitre.org/data/definitions/461.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9bf4ecae-5ea0-47bf-9d4d-d3e8d12a652d",
                    "created": "2018-05-15T08:54:56.903Z",
                    "modified": "2018-05-15T08:54:56.903Z",
                    "description": [
                        "Design: Use a message authentication code (MAC) or another mechanism to perform verification of message authenticity / integrity prior to decryption",
                        "Implementation: Do not leak information back to the user as to any cryptography (e.g., padding) encountered during decryption."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-463",
                            "url": "https://capec.mitre.org/data/definitions/463.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Monitor integrity",
                        "mitigation": "Integrity monitor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c65bb1a9-979b-4d62-aec2-32c61e78a043",
                    "created": "2018-05-15T08:54:56.904Z",
                    "modified": "2018-05-15T08:54:56.904Z",
                    "description": [
                        "Design: Browser's design needs to be changed to limit where cookies can be stored on the client side and provide an option to clear these cookies in all places, as well as another option to stop these cookies from being written in the first place.",
                        "Design: Safari browser's private browsing mode is currently effective against evercookies."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-464",
                            "url": "https://capec.mitre.org/data/definitions/464.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Minimize switches and options",
                        "mitigation": "Minimal switches and options"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--77291d15-3708-4ea1-a73a-38b2647885a3",
                    "created": "2018-05-15T08:54:56.904Z",
                    "modified": "2018-05-15T08:54:56.904Z",
                    "description": [
                        "Usage: Users should always explicitly log out from the social networking sites when done using them.",
                        "Usage: Users should not open other tabs in the browser when using a social networking site."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-467",
                            "url": "https://capec.mitre.org/data/definitions/467.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Force users to logout",
                        "mitigation": "Logout forcer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1ff022f3-43bf-41b1-af68-25d70a7b949c",
                    "created": "2018-05-15T08:54:56.905Z",
                    "modified": "2018-05-15T08:54:56.905Z",
                    "description": [
                        "Design: Follow the defensive programming practices needed to protect an application accessing the database from SQL injection",
                        "Configuration: Ensure that the DBMS is patched with the latest security patches",
                        "Design: Ensure that the DBMS login used by the application has the lowest possible level of privileges in the DBMS",
                        "Design: Ensure that DBMS runs with the lowest possible level of privileges on the host machine and that it runs as a separate user",
                        "Usage: Do not use the DBMS machine for anything else other than the database",
                        "Usage: Do not place any trust in the database host on the internal network. Authenticate and validate all network activity originating from the database host.",
                        "Usage: Use an intrusion detection system to monitor network connections and logs on the database host.",
                        "Implementation: Remove / disable all unneeded / unused functions of the DBMS system that may allow an attacker to elevate privileges if compromised"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-470",
                            "url": "https://capec.mitre.org/data/definitions/470.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c70ab7c0-9716-41c3-848f-5b71bc12fc48",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "description": [
                        "Restrict access to private keys from non-supervisory accounts",
                        "Restrict access to administrative personnel and processes only",
                        "Ensure all remote methods are secured",
                        "Ensure all services are patched and up to date"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-474",
                            "url": "https://capec.mitre.org/data/definitions/474.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1c43bff3-48dd-4ad8-85ec-3f2092b371e3",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "description": [
                        "Ensure the application is fully patched and does not allow the processing of unsigned data as if it is signed data."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-477",
                            "url": "https://capec.mitre.org/data/definitions/477.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--903bd10f-a672-4070-9ffe-bb238fc15958",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "description": [
                        "Use multiple security questions (e.g. have three and make the user answer two of them correctly). Let the user select their own security questions or provide them with choices of questions that are not generic."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-50",
                            "url": "https://capec.mitre.org/data/definitions/50.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use security questions for password recovery",
                        "mitigation": "Security questions"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dddbec30-beb4-4a3b-b59b-3579ed7afb30",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "description": [
                        "E-mail the temporary password to the registered e-mail address of the user rather than letting the user reset the password online."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-50",
                            "url": "https://capec.mitre.org/data/definitions/50.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "E-mail temporary password instead of doing it online",
                        "mitigation": "Temporary password sent by e-mail"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--189923d1-903e-4999-a694-b8024e40a39e",
                    "created": "2018-05-15T08:54:56.906Z",
                    "modified": "2018-05-15T08:54:56.906Z",
                    "description": [
                        "Ensure that your password recovery functionality is not vulnerable to an injection style attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-50",
                            "url": "https://capec.mitre.org/data/definitions/50.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": null,
                        "mitigation": null
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--304188e4-e8ee-496f-939b-5d61358deaed",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "description": [
                        "Design: Enforce principle of least privilege"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-51",
                            "url": "https://capec.mitre.org/data/definitions/51.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a91dc2ec-dd2f-4672-acec-e33cc8ef72d6",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "description": [
                        "Design: Harden registry server and file access permissions"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-51",
                            "url": "https://capec.mitre.org/data/definitions/51.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict data access",
                        "mitigation": "Data access restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--8b836d39-43de-44c6-8ff1-c553a4c197ea",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "description": [
                        "Implementation: Implement communications to and from the registry using secure protocols"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-51",
                            "url": "https://capec.mitre.org/data/definitions/51.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--12e019b9-2a94-456f-953b-02df9a8389d9",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "description": [
                        "Application designers can construct a 'code book' for error messages. When using a code book, application error messages aren't generated in string or stack trace form, but are cataloged and replaced with a unique (often integer-based) value 'coding' for the error. Such a technique will require helpdesk and hosting personnel to use a 'code book' or similar mapping to decode application errors/logs in order to respond to them normally."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-54",
                            "url": "https://capec.mitre.org/data/definitions/54.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use a code book",
                        "mitigation": "Code book"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c96654a2-dde8-43dc-9c46-e4efc1459227",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Application designers can wrap application functionality (preferably through the underlying framework) in an output encoding scheme that obscures or cleanses error messages to prevent such attacks. Such a technique is often used in conjunction with the above 'code book' suggestion."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-54",
                            "url": "https://capec.mitre.org/data/definitions/54.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--78265cc4-133c-423d-ad4d-bf7c66d58d06",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Implementation: Implement message level security such as HMAC in the HTTP communication"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-57",
                            "url": "https://capec.mitre.org/data/definitions/57.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use hashed message authentication code (HMAC) to verify messages",
                        "mitigation": "HMAC verifier"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--5bd696e8-6da3-44f3-b47a-6d558acd4ae5",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Design: Utilize defense in depth, do not rely on a single security mechanism like SSL"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-57",
                            "url": "https://capec.mitre.org/data/definitions/57.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use multiple security mechanisms",
                        "mitigation": "Usage of multiple security mechanisms"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--3f454c35-1c91-4070-9893-ed41529ee6ad",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Design: Enforce principle of least privilege"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-57",
                            "url": "https://capec.mitre.org/data/definitions/57.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e23a7339-621a-438c-b16e-9a7777c8030a",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Use browser technologies that do not allow client-side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-588",
                            "url": "https://capec.mitre.org/data/definitions/588.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--941f1c94-f4bb-432d-a858-e6de3291cb59",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Utilize proper character encoding for all output produced within client-site scripts manipulating the DOM."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-588",
                            "url": "https://capec.mitre.org/data/definitions/588.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--13b0b9a1-161f-4064-9f5b-7c0200e66c6d",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Ensure that all user-supplied input is validated before use."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-588",
                            "url": "https://capec.mitre.org/data/definitions/588.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--90a7e1a7-db2e-4ae3-9c3b-50aa2198495f",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Use a strong source of randomness to generate a session ID."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--c28adc22-69ba-4ee9-9926-544bbcf87109",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Use adequate length session IDs"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--eece4e39-321c-4ccb-8d8d-d661932978ee",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Do not use information available to the user in order to generate session ID (e.g., time)."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7233edf2-82d0-4293-a757-17680c8569fd",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Ideas for creating random numbers are offered by Eastlake [RFC1750]"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": null,
                        "mitigation": null
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--24908fa3-7a47-49b9-ab7e-d0db307cf79e",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-59",
                            "url": "https://capec.mitre.org/data/definitions/59.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7c83c375-4f28-4345-9434-777d42cf33ca",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Use browser technologies that do not allow client-side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-591",
                            "url": "https://capec.mitre.org/data/definitions/591.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f4c1790e-d676-411b-b435-279b87718513",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Utilize strict type, character, and encoding enforcement."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-591",
                            "url": "https://capec.mitre.org/data/definitions/591.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ac716e1d-8491-4c2c-b7ad-22487a3401c1",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Ensure that all user-supplied input is validated before use."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-591",
                            "url": "https://capec.mitre.org/data/definitions/591.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e40e01fe-6f20-4210-92c6-76c3b4bcbfbc",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Use browser technologies that do not allow client-side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-592",
                            "url": "https://capec.mitre.org/data/definitions/592.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--6e5fb9a7-d39f-4963-bee2-44130956bfbe",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Utilize strict type, character, and encoding enforcement."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-592",
                            "url": "https://capec.mitre.org/data/definitions/592.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e22b9d94-7a8a-42ae-aca0-46bd116279ad",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Ensure that all user-supplied input is validated before being stored."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-592",
                            "url": "https://capec.mitre.org/data/definitions/592.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--55269bc6-af8c-483f-b78e-e3e6e39c70a9",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Properly encrypt and sign identity tokens in transit, and uses industry standarad session key generation mechanisms that utilize high amount of entropy to generate the session key. Many standard web and application servers will perform this task on your behalf. Utilize a session timeout for all sessions. If the user does not explicitly logout, terminate their session after this period of inactivity. If the user logs back in then a new session key should be generated."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-593",
                            "url": "https://capec.mitre.org/data/definitions/593.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--89be8b95-3e28-430c-b247-cba76e6a3349",
                    "created": "2018-05-15T08:54:56.911Z",
                    "modified": "2018-05-15T08:54:56.911Z",
                    "description": [
                        "Design: Do not program input values directly on command shell, instead treat user input as guilty until proven innocent. Build a function that takes user input and converts it to applications specific types and values, stripping or filtering out all unauthorized commands and characters in the process."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-6",
                            "url": "https://capec.mitre.org/data/definitions/6.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dc087a43-1e52-492c-ac94-3d9c5d29cef4",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Design: Limit program privileges, so if metacharacters or other methods circumvent program input validation routines and shell access is attained then it is not running under a privileged account. chroot jails create a sandbox for the application to execute in, making it more difficult for an attacker to elevate privilege even in the case that a compromise has occurred."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-6",
                            "url": "https://capec.mitre.org/data/definitions/6.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dacaa847-a87c-4e54-99da-8c6f47e5bb61",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Implementation: Implement an audit log that is written to a separate host, in the event of a compromise the audit log may be able to provide evidence and details of the compromise."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-6",
                            "url": "https://capec.mitre.org/data/definitions/6.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Implement an audit log",
                        "mitigation": "Audit log"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9f201528-9630-42c5-897a-ff489f44c849",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Always invalidate a session ID after the user logout."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d2a3c4d9-8790-4be6-bff2-2ebd3d8c6a69",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Setup a session time out for the session IDs."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a09e9d3b-d4b2-44a5-8d06-4a3e58e1e55a",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--4a0fe92a-012f-4cb8-b54d-30e53467092c",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--47378483-4f78-4075-a65f-8ee82161c47b",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Encrypt the session data associated with the session ID."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--bfb6d69a-7b82-4dee-9986-e0e1a847d1cb",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Use multifactor authentication."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-60",
                            "url": "https://capec.mitre.org/data/definitions/60.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--bc86a2ef-34e2-4054-b5f5-b57ae006ca90",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Use of hardened baseband firmware on retransmission device to detect and prevent the use of weak cellular encryption."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-608",
                            "url": "https://capec.mitre.org/data/definitions/608.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Prevent weak encryption",
                        "mitigation": "Weak encryption preventer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--eea0fc48-4ae1-410d-a2e2-58765f63ff6f",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Monitor cellular RF interface to detect the usage of weaker-than-expected cellular encryption."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-608",
                            "url": "https://capec.mitre.org/data/definitions/608.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Prevent weak encryption",
                        "mitigation": "Weak encryption preventer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dbcb66fc-8aa5-4593-b03f-f9f3bc8f70c6",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Use a strict session management mechanism that only accepts locally generated session identifiers: This prevents attackers from fixating session identifiers of their own choice."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-61",
                            "url": "https://capec.mitre.org/data/definitions/61.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--31ac1620-d7d2-49fe-8cfe-48d5202db2d8",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Regenerate and destroy session identifiers when there is a change in the level of privilege: This ensures that even though a potential victim may have followed a link with a fixated identifier, a new one is issued when the level of privilege changes."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-61",
                            "url": "https://capec.mitre.org/data/definitions/61.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--47b8887c-b55f-4306-ac50-dd742e3ebd31",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Use session identifiers that are difficult to guess or brute-force: One way for the attackers to obtain valid session identifiers is by brute-forcing or guessing them. By choosing session identifiers that are sufficiently random, brute-forcing or guessing becomes very difficult."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-61",
                            "url": "https://capec.mitre.org/data/definitions/61.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--fddf4d02-3ca6-4b53-976d-94fe7208cda8",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Upgrade the SIM card to use the state-of-the-art AES or the somewhat outdated 3DES algorithm for OTA."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-614",
                            "url": "https://capec.mitre.org/data/definitions/614.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Upgrade SIM card algorithm",
                        "mitigation": "Strong SIM card algorithm"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--6f808cee-285d-42c3-9a4a-6423f100eb96",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Design: Use browser technologies that do not allow client side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1938ea69-19a6-46a7-82c1-eaef23ad6464",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Design: Utilize strict type, character, and encoding enforcement"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--91040c52-4a0f-468d-b27a-3cac3fcd0836",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use proxy communication",
                        "mitigation": "Communication proxy"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--99f6a913-3066-4382-884f-a6319998cb58",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Sanitize content",
                        "mitigation": "Content sanitizer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--4da705a5-db04-4ba1-a3db-0937956149d8",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Implementation: Perform input validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--777374b4-a72e-4dc8-bcf8-783043439d34",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Implementation: Perform output validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--4407ec7a-b76b-4732-b76e-52aa738f7e66",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Implementation: Session tokens for specific host"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use strong session tokens",
                        "mitigation": "Strong session token checker"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dcc6163c-5d7f-4945-aea1-f864cfcb10d8",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--0d5cde74-9ade-40e9-8267-0826b291c3af",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system. Test your decoding process against malicious input."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--868d69b7-5adb-4b62-898a-a6a1ed03858e",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--da04cb53-358a-4f00-82fe-ae8c71aa4b3a",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use POST- over GET-requests for submitting data",
                        "mitigation": "POST-requests for submitting data"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--052d8695-525d-4d76-90de-a2656ce4eaa2",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--71a011f9-0ef0-4b39-8c7c-e667526a6853",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Refer to the RFCs to safely decode URL."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode/decode URL or parameters safely",
                        "mitigation": "Safe URL and parameter encoder/decoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e6b7c0f9-8f6f-4e4a-9bb9-be7d668c2244",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Regular expression can be used to match safe URL patterns. However, that may discard valid URL requests if the regular expression is too restrictive."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--66c4b761-b52f-4c08-ab74-bd75b3e934f1",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-64",
                            "url": "https://capec.mitre.org/data/definitions/64.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan for valid URL",
                        "mitigation": "URL scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ce2c1ec6-f362-4297-9fb1-648ed127bf91",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Design: Encrypt all communication between the client and server."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-65",
                            "url": "https://capec.mitre.org/data/definitions/65.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ebe0dde2-0534-4606-bbaf-a42ab1d7a289",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Implementation: Use SSL, SSH, SCP."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-65",
                            "url": "https://capec.mitre.org/data/definitions/65.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--521b7800-24b1-472f-b0fb-6cbd586b97ee",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Operation: Use \"ifconfig/ipconfig\" or other tools to detect the sniffer installed in the network."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-65",
                            "url": "https://capec.mitre.org/data/definitions/65.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan for network sniffer",
                        "mitigation": "Network sniffer scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b51004ca-cfd7-4632-8c80-59cf144cda1c",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-66",
                            "url": "https://capec.mitre.org/data/definitions/66.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Strongly validate input",
                        "mitigation": "Strong input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--be0d8e05-f27c-4590-a415-75cb436c7afe",
                    "created": "2018-05-15T08:54:56.914Z",
                    "modified": "2018-05-15T08:54:56.914Z",
                    "description": [
                        "Use of parameterized queries or stored procedures - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails. Note that SQL Injection is possible even in the presence of stored procedures if the eventual query is constructed dynamically."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-66",
                            "url": "https://capec.mitre.org/data/definitions/66.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--cd05fd70-ef54-49e5-b348-fc483dee1917",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "description": [
                        "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-66",
                            "url": "https://capec.mitre.org/data/definitions/66.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--8249ebf6-e55a-483e-9dd2-bf6c48c0fa50",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "description": [
                        "A given code signing scheme may be fallible due to improper use of cryptography. Developers must never roll out their own cryptography, nor should existing primitives be modified or ignored."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-68",
                            "url": "https://capec.mitre.org/data/definitions/68.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Avoid self-made cryptography",
                        "mitigation": "No self-made cryptography"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--667bc7ff-5b24-4a91-9949-b085ffc9708b",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "description": [
                        "If an attacker cannot attack the scheme directly, he might try to alter the environment that affects the signing and verification processes. A possible mitigation is to avoid reliance on flags or environment variables that are user-controllable."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-68",
                            "url": "https://capec.mitre.org/data/definitions/68.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Protect environment variables",
                        "mitigation": "Environment variable protector"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--546f8f33-170e-4348-b1b4-d9e7498d118b",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "description": [
                        "Security by Obscurity is not a solution to preventing SQL Injection. Rather than suppress error messages and exceptions, the application must handle them gracefully, returning either a custom error page or redirecting the user to a default page, without revealing any information about the database or the application internals."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-7",
                            "url": "https://capec.mitre.org/data/definitions/7.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Don't rely on security by obscurity for to avoid injection",
                        "mitigation": "Don't use security by obscurity for injection"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b7647dd5-d4f1-4367-b1c5-f00629deb130",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as SQL content. Keywords such as UNION, SELECT or INSERT must be filtered in addition to characters such as a single-quote(') or SQL-comments (--) based on the context in which they appear."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-7",
                            "url": "https://capec.mitre.org/data/definitions/7.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Strongly validate input",
                        "mitigation": "Strong input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a2b572c1-88c7-4dbe-ace7-5ad6d6addb88",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: Enforce principle of least privilege"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--af112b0e-4be0-496d-a8cd-e7be4d9ee746",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: Backup copies of all configuration files"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Protect configuration files",
                        "mitigation": "Configuration protector"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--2a982ef6-561e-435a-8325-34bb7e9405c9",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Implementation: Integrity monitoring for configuration files"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Monitor integrity",
                        "mitigation": "Integrity monitor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--8573aa0e-22ee-492a-b512-22c32c98a068",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Implementation: Enforce audit logging on code and configuration promotion procedures."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Implement an audit log",
                        "mitigation": "Audit log"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ac0f733f-563b-446b-9b87-599af6b15c2e",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Implementation: Load configuration from separate process and memory space, for example a separate physical device like a CD"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": null,
                        "mitigation": null
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a1cae7ec-0a12-4942-8fa4-d1b747c9dd04",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: Enforce principle of least privilege."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--10802930-0622-4bc9-b510-cb0188a70cde",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: Ensure all input is validated, and does not contain file system commands"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a43d5035-91f9-4374-a132-cb5e9763bdf4",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: Run server interfaces with a non-root account and/or utilize chroot jails or other configuration techniques to constrain privileges even if attacker gains some limited access to commands."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7d67e1ff-6e65-46bb-b4aa-9bf44769ad88",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Design: For interactive user applications, consider if direct file system interface is necessary, instead consider having the application proxy communication."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use proxy communication",
                        "mitigation": "Communication proxy"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--acc87337-bc4d-4b9c-826a-4a76f5034c2c",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Implementation: Perform testing such as pen-testing and vulnerability scanning to identify directories, programs, and interfaces that grant direct access to executables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan or test for vulnerabilities",
                        "mitigation": "Vulnerability scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--840005c9-7112-44ce-b0bb-0b5d3b59b418",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Do not allow override of global variables and do Not Trust Global Variables.",
                        "If the register_globals option is enabled, PHP will create global variables for each GET, POST, and cookie variable included in the HTTP request. This means that a malicious user may be able to set variables unexpectedly. For instance make sure that the server setting for PHP does not expose global variables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--943fec81-4346-4f27-bc90-4660936dbe29",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "A software system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking is performed when relying on input from outside a trust boundary."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e35303b8-1f42-40dc-8f43-ac61623790f5",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Separate the presentation layer and the business logic layer. Variables at the business logic layer should not be exposed at the presentation layer. This is to prevent computation of business logic from user controlled input data."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Separate the business and presentation layers",
                        "mitigation": "Separate business and presentation layers"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9342b208-97a7-4654-8a39-22761cb325c8",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Use encapsulation when declaring your variables. This is to lower the exposure of your variables."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encapsulate variables",
                        "mitigation": "Encapsulated variables"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1fa58c93-5181-4864-81eb-0219acc4bd01",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should be rejected by the program."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--96853013-3ba5-4ca9-b958-8263940cdee3",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Verify that the user-supplied data does not use backslash character to escape malicious characters."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Verify escaped characters",
                        "mitigation": "Escaped character verifier"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--6df7afff-dbf5-4553-a6b2-10996a450fc4",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--00a6e303-76d9-497b-bb11-a244d4f5a026",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Be aware of the threat of alternative method of data encoding."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--55ac0fba-0d7b-43fc-858c-67f1cab08771",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Regular expressions can be used to filter out backslash. Make sure you decode before filtering and validating the untrusted input data."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--60dd9cce-769c-4519-be9a-105deddfbb46",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--41b617c1-47bc-4aaa-98bc-202d63338836",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dda70c85-7e3a-4e78-adca-0db33e57935a",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": null,
                        "mitigation": null
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d8fd27a8-a95a-46ee-a6a3-e32cbe26343e",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--50d3f7c8-0d8f-40dd-8e44-5bfc57f0b2e8",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "When client input is required from web-based forms, avoid using the \"GET\" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the \"POST method whenever possible."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use POST- over GET-requests for submitting data",
                        "mitigation": "POST-requests for submitting data"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--9c5e12b8-c3ca-4d8e-9d5e-e93d669f0873",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scan for valid URL",
                        "mitigation": "URL scanner"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--d06579c3-5a54-4c07-9fe6-ee5da911be6e",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--e639472d-3e63-4086-8bab-5b784ca4ecb3",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Test your path decoding process against malicious input."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode/decode URL or parameters safely",
                        "mitigation": "Safe URL and parameter encoder/decoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--fc3f1aba-4721-4a3e-bd29-a975bb698e1a",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b80e3384-0820-4b67-a9e0-a9b77c6d8508",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-79",
                            "url": "https://capec.mitre.org/data/definitions/79.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Assume input is malicious",
                        "mitigation": "Input is malicious assumption"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--93649edf-cb32-432d-be26-eca6e38c20f0",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Strong input validation - All user-controllable input must be validated and filtered for illegal characters as well as content that can be interpreted in the context of an XPath expression. Characters such as a single-quote(') or operators such as or (|), and (&) and such should be filtered if the application does not expect them in the context in which they appear. If such content cannot be filtered, it must at least be properly escaped to avoid them being interpreted as part of XPath expressions."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-83",
                            "url": "https://capec.mitre.org/data/definitions/83.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Strongly validate input",
                        "mitigation": "Strong input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--a85e539a-b942-42cc-87c8-89f97a3022de",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Use of parameterized XPath queries - Parameterization causes the input to be restricted to certain domains, such as strings or integers, and any input outside such domains is considered invalid and the query fails."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-83",
                            "url": "https://capec.mitre.org/data/definitions/83.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f3a95def-11b6-4a53-af82-e176790de49b",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Use of custom error pages - Attackers can glean information about the nature of queries from descriptive error messages. Input validation must be coupled with customized error pages that inform about an error without disclosing information about the database or application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-83",
                            "url": "https://capec.mitre.org/data/definitions/83.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--afca3e68-df84-4e13-a7aa-8d318dfc5fd0",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Design: Use browser technologies that do not allow client side scripting."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--79b7d4f0-756f-48c6-b7d9-c73c8e455e6b",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Design: Utilize strict type, character, and encoding enforcement"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encode input/output",
                        "mitigation": "Input/output encoder"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ad9033fe-77ad-45d1-8aeb-7dc01dc1df60",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Sanitize content",
                        "mitigation": "Content sanitizer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1e800fb3-2e0d-484f-a86f-9555f6ecf77a",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Implementation: Perform input validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate input",
                        "mitigation": "Input validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--cecf4abf-39d3-4d78-bd8f-a16758995b46",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Implementation: Perform output validation for all remote content."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Validate",
                        "mitigation": "Validator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--1a10be92-fef4-4542-a36b-d6057ec38027",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Implementation: Disable scripting languages such as JavaScript in browser"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Disable script execution",
                        "mitigation": "Script disabler"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--53c94101-cb10-4d25-8d05-d87c8b85a762",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Keep system up to date",
                        "mitigation": "System updater"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--59f12848-6887-4a8c-a99c-374b14455558",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Authenticate request to every resource. In addition, every page or resource must ensure that the request it is handling has been made in an authorized context."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-87",
                            "url": "https://capec.mitre.org/data/definitions/87.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--61debab2-78ca-4e2a-919b-e367727d67fc",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Forceful browsing can also be made difficult to a large extent by not hard-coding names of application pages or resources. This way, the attacker cannot figure out, from the application alone, the resources available from the present context."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-87",
                            "url": "https://capec.mitre.org/data/definitions/87.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Avoid hard-coding",
                        "mitigation": "No hard-coding"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--7375773a-2869-424e-ab62-5fb8ce5fbfd2",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Use language APIs rather than relying on passing data to the operating system shell or command line. Doing so ensures that the available protection mechanisms in the language are intact and applicable."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-88",
                            "url": "https://capec.mitre.org/data/definitions/88.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Use language APIs over OS commands",
                        "mitigation": "Language APIs used over OS commands"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--ec6c49a9-75fa-46e4-abe4-d08b80e702b4",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Filter all incoming data to escape or remove characters or strings that can be potentially misinterpreted as operating system or shell commands"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-88",
                            "url": "https://capec.mitre.org/data/definitions/88.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Filter out potential OS commands",
                        "mitigation": "OS command filterer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--dcbcc2a3-e881-4de1-89cb-e4aef498853d",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "All application processes should be run with the minimal privileges required. Also, processes must shed privileges as soon as they no longer require them."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-88",
                            "url": "https://capec.mitre.org/data/definitions/88.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--471e415e-2f6e-46f6-ae94-d78fec6e498d",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Get your Public Key signed by a Certificate Authority"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Sign public key",
                        "mitigation": "Public key signer"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--b199a650-bd36-48b8-a1c0-53f560d0a3a1",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Encrypt your communication using cryptography (SSL,...)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt communication (with SSL, TSL, SSH, SCP, or others)",
                        "mitigation": "Encrypted communication channels"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f18ebf11-0747-41e8-aafc-a5c1363631a7",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Use Strong mutual authentication to always fully authenticate both ends of any communications channel."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Authenticate users",
                        "mitigation": "Authenticator"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--365cf85c-d596-4dc4-93f8-566c43bdb603",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Exchange public keys using a secure channel"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Restrict privileged areas",
                        "mitigation": "Privileged zone restrictor"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--06c80628-ad44-425d-9121-3e19c975497d",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Use proven cryptographic algorithms with recommended key sizes."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-97",
                            "url": "https://capec.mitre.org/data/definitions/97.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt data",
                        "mitigation": "Data encrypter"
                    }
                },
                {
                    "type": "course-of-action",
                    "id": "course-of-action--f8f2c3d4-b372-4b82-bf17-9d857c4fe9d2",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Ensure that the algorithms are used properly. That means:",
                        "1. Not rolling out your own crypto; Use proven algorithms and implementations.",
                        "2. Choosing initialization vectors with sufficiently random numbers",
                        "3. Generating key material using good sources of randomness and avoiding known weak keys",
                        "4. Using proven protocols and their implementations.",
                        "5. Picking the most appropriate cryptographic algorithm for your usage context and data"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-97",
                            "url": "https://capec.mitre.org/data/definitions/97.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Encrypt data",
                        "mitigation": "Data encrypter"
                    }
                }
            ],
            "assets": [
                {
                    "type": "asset",
                    "id": "asset--e7d77483-000f-473d-989d-d4ab35622579",
                    "created": "2018-05-15T08:54:56.887Z",
                    "modified": "2018-05-15T08:54:56.887Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-11",
                            "url": "https://capec.mitre.org/data/definitions/11.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--ad32bd16-bfe7-45e2-ba0b-de4ae5765199",
                    "created": "2018-05-15T08:54:56.889Z",
                    "modified": "2018-05-15T08:54:56.889Z",
                    "description": [
                        "File system"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-126",
                            "url": "https://capec.mitre.org/data/definitions/126.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "File System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--0c61916a-154b-4fca-a130-b108645dce3a",
                    "created": "2018-05-15T08:54:56.890Z",
                    "modified": "2018-05-15T08:54:56.890Z",
                    "description": [
                        "The activation zone is the server side function where the client controlled parameter is consumed."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-13",
                            "url": "https://capec.mitre.org/data/definitions/13.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Server Side Function"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--2a01e9bb-95c0-4641-80a2-8e7d89c5bbc4",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Back-end LDAP directory tree"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-136",
                            "url": "https://capec.mitre.org/data/definitions/136.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "LDAP System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--e69144ad-e90b-45b3-9e10-7f70f7c5ad81",
                    "created": "2018-05-15T08:54:56.891Z",
                    "modified": "2018-05-15T08:54:56.891Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-15",
                            "url": "https://capec.mitre.org/data/definitions/15.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--deba506f-c721-4ae9-a346-4dc104f34679",
                    "created": "2018-05-15T08:54:56.892Z",
                    "modified": "2018-05-15T08:54:56.892Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-17",
                            "url": "https://capec.mitre.org/data/definitions/17.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--5d63bf73-e8c9-4169-9d56-faf67d214178",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Web server scripting host"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-19",
                            "url": "https://capec.mitre.org/data/definitions/19.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Scripting Host"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--f1ac88a6-92b8-46a5-ac1b-c8acf95d385e",
                    "created": "2018-05-15T08:54:56.893Z",
                    "modified": "2018-05-15T08:54:56.893Z",
                    "description": [
                        "Target application's session management mechanism"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-196",
                            "url": "https://capec.mitre.org/data/definitions/196.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Session Management System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--315d4ca5-8b81-47ab-a323-bc64ef2be6f9",
                    "created": "2018-05-15T08:54:56.895Z",
                    "modified": "2018-05-15T08:54:56.895Z",
                    "description": [
                        "Client machine and client network (e.g. Intranet)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-21",
                            "url": "https://capec.mitre.org/data/definitions/21.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--7d3973df-6f7f-403f-83f5-c048458718de",
                    "created": "2018-05-15T08:54:56.896Z",
                    "modified": "2018-05-15T08:54:56.896Z",
                    "description": [
                        "Error handling mechanism within the application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-215",
                            "url": "https://capec.mitre.org/data/definitions/215.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Error Handling System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--9c47eebd-a44d-469b-ab84-c2b68f39410f",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-23",
                            "url": "https://capec.mitre.org/data/definitions/23.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--90302971-2a8f-4fa0-aeca-1ed3ea0065c4",
                    "created": "2018-05-15T08:54:56.897Z",
                    "modified": "2018-05-15T08:54:56.897Z",
                    "description": [
                        "The XML parser code."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-231",
                            "url": "https://capec.mitre.org/data/definitions/231.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Data Parser"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--ca7a9b59-e1ee-4d06-a5df-2504030088e0",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "XML database"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-250",
                            "url": "https://capec.mitre.org/data/definitions/250.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Database"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--a0a7a193-033b-4575-ab59-7324aea3ab99",
                    "created": "2018-05-15T08:54:56.898Z",
                    "modified": "2018-05-15T08:54:56.898Z",
                    "description": [
                        "Client software, such as a browser and its component libraries, or an intermediary"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-31",
                            "url": "https://capec.mitre.org/data/definitions/31.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--9450ad60-d27c-4a87-a1e7-3719781dc9ed",
                    "created": "2018-05-15T08:54:56.899Z",
                    "modified": "2018-05-15T08:54:56.899Z",
                    "description": [
                        "Email processing routines of Email program"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-41",
                            "url": "https://capec.mitre.org/data/definitions/41.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "E-mail System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--a06e6626-2fca-4795-bc80-f6b61d285344",
                    "created": "2018-05-15T08:54:56.902Z",
                    "modified": "2018-05-15T08:54:56.902Z",
                    "description": [
                        "When the function returns control to the main program, it jumps to the return address portion of the stack frame. Unfortunately that return address may have been overwritten by the overflowed buffer and the address may contain a call to a privileged command or to a malicious code."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-45",
                            "url": "https://capec.mitre.org/data/definitions/45.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Buffer"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--57a3ebb0-dede-4e97-929a-585062352493",
                    "created": "2018-05-15T08:54:56.909Z",
                    "modified": "2018-05-15T08:54:56.909Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-51",
                            "url": "https://capec.mitre.org/data/definitions/51.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--54f528fd-beff-48ee-86bb-c567b01a9714",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Error Handling mechanism within the application"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-54",
                            "url": "https://capec.mitre.org/data/definitions/54.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Error Handling System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--97aab46c-f0c8-475b-a478-9afad52f57a4",
                    "created": "2018-05-15T08:54:56.910Z",
                    "modified": "2018-05-15T08:54:56.910Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-57",
                            "url": "https://capec.mitre.org/data/definitions/57.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--e47565d4-c938-4b80-8ae3-93dda98d3b9e",
                    "created": "2018-05-15T08:54:56.912Z",
                    "modified": "2018-05-15T08:54:56.912Z",
                    "description": [
                        "Client machine and client network (e.g. Intranet)"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-6",
                            "url": "https://capec.mitre.org/data/definitions/6.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--c9c1b6b7-b23a-43a2-a29e-20f495e4d240",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Target application's session management mechanism"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-61",
                            "url": "https://capec.mitre.org/data/definitions/61.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Session Management System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--bd92b5c5-5b3e-4448-bcd5-627c84aca7c0",
                    "created": "2018-05-15T08:54:56.913Z",
                    "modified": "2018-05-15T08:54:56.913Z",
                    "description": [
                        "Client browser, its component libraries, and client network (e.g. Intranet)."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-63",
                            "url": "https://capec.mitre.org/data/definitions/63.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--83001a90-9d14-4a25-a9f5-f763e47e95c5",
                    "created": "2018-05-15T08:54:56.915Z",
                    "modified": "2018-05-15T08:54:56.915Z",
                    "description": [
                        "Back-end database"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-66",
                            "url": "https://capec.mitre.org/data/definitions/66.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Database"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--b4fc6e78-04b5-4876-b491-b140ff54ff53",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Back-end database"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-7",
                            "url": "https://capec.mitre.org/data/definitions/7.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Database"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--579a6fbc-f7c3-43d0-b1b1-9941cf8b7087",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "Configuration file processing routines"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-75",
                            "url": "https://capec.mitre.org/data/definitions/75.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Configuration File"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--e71c5ccd-3b3f-418c-a257-88954b4dc86a",
                    "created": "2018-05-15T08:54:56.916Z",
                    "modified": "2018-05-15T08:54:56.916Z",
                    "description": [
                        "File system"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-76",
                            "url": "https://capec.mitre.org/data/definitions/76.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "File System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--d8afc995-11e4-477d-aa57-d30b870d2bc0",
                    "created": "2018-05-15T08:54:56.917Z",
                    "modified": "2018-05-15T08:54:56.917Z",
                    "description": [
                        "The command or request interpreter on the server side is responsible for interpreting the global variables. Sometime the global variables are controlled by a setting. For instance in PHP, the Boolean setting \"register_globals\" defines whether or not to register the EGPCS (Environment, GET, POST, Cookie, Server) variables as global variables. As of PHP 4.2.0, this settings defaults to off. This directive was removed in PHP 6.0.0."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-77",
                            "url": "https://capec.mitre.org/data/definitions/77.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Command Interpreter"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--d1b1458a-9a8f-49e2-8da2-c7d2f70d5c1b",
                    "created": "2018-05-15T08:54:56.918Z",
                    "modified": "2018-05-15T08:54:56.918Z",
                    "description": [
                        "The command or request interpreter used on the host target may consider the backslash character as escape character."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-78",
                            "url": "https://capec.mitre.org/data/definitions/78.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Command Interpreter"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--5e28d40f-eed8-4bbe-91b2-d556db064b6a",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "XML database"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-83",
                            "url": "https://capec.mitre.org/data/definitions/83.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Database"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--11368319-e183-4d14-b08e-a853ff8c7dba",
                    "created": "2018-05-15T08:54:56.919Z",
                    "modified": "2018-05-15T08:54:56.919Z",
                    "description": [
                        "Client machine and client network"
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-85",
                            "url": "https://capec.mitre.org/data/definitions/85.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Client"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--a71bd69b-8524-4776-9512-a3b8d5c1f314",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "Underlying operating system hosting the exploited application."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-88",
                            "url": "https://capec.mitre.org/data/definitions/88.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Operating System"
                    }
                },
                {
                    "type": "asset",
                    "id": "asset--5c5b5112-a6c1-47f7-a200-465753206b88",
                    "created": "2018-05-15T08:54:56.920Z",
                    "modified": "2018-05-15T08:54:56.920Z",
                    "description": [
                        "The messages exchanged between the two target hosts."
                    ],
                    "external_references": [
                        {
                            "source_name": "capec",
                            "id": "CAPEC-94",
                            "url": "https://capec.mitre.org/data/definitions/94.html",
                            "description": null
                        }
                    ],
                    "custom": {
                        "category": "Message"
                    }
                }
            ]
        },
        "SROs": {
            "relationships": [
                {
                    "type": "relationship",
                    "id": "relationship--000ce522-f5f0-4f63-9fc4-069f16672d4b",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--fcb745c2-b144-4f24-a865-ea62762c539e",
                    "target_ref": "attack-pattern--2863d1b2-56d5-4e18-b9a0-30e1cfbc7b0f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6a6772ac-4b54-4f2d-810c-0d5840f26227",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--fcd41d21-84a7-4133-82a6-e051c47a4cf6",
                    "target_ref": "attack-pattern--c24ffca5-046a-4e26-85a9-f0b54571adc4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7383619a-624d-465b-999d-5ec2f8b9add5",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--3c7a9387-1642-4a93-83df-a0dc642e9e14",
                    "target_ref": "attack-pattern--c24ffca5-046a-4e26-85a9-f0b54571adc4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--94d650f8-b25d-4730-a7ab-f015a50eb91a",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1e0e1eb5-6fbd-4a05-9d49-1bdc76c822ba",
                    "target_ref": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886"
                },
                {
                    "type": "relationship",
                    "id": "relationship--a34aaa38-7976-4241-bc6f-88acf298367e",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--4e458635-e58d-41f0-a1a8-7cf547f3db0e",
                    "target_ref": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886"
                },
                {
                    "type": "relationship",
                    "id": "relationship--46dc68e2-8381-42c7-a37f-a8ede747f6ee",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--107f17f0-249c-44db-b8b2-d278c21ebfa4",
                    "target_ref": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ae082670-975a-4dfe-a3f2-58cdbe2817d8",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--bcbfe0d3-d93f-47fa-bd6d-54b6513c2974",
                    "target_ref": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f316af42-3740-429f-9829-b354b5ab39ca",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9a9a2eb3-65e2-49a6-8bb2-bd29adc0c4ed",
                    "target_ref": "attack-pattern--990b6a14-9dc3-4c24-bef5-d83fec4fa886"
                },
                {
                    "type": "relationship",
                    "id": "relationship--29a0d518-cf58-427d-8eeb-69115593ebcd",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0b970bc4-8acb-4c0b-ba2e-985cf449fa48",
                    "target_ref": "attack-pattern--7d277159-2e4c-44f9-b642-e887bcd76bc5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f9347364-39f1-4918-b6c4-e7c18aef42f1",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d94c120e-8bdb-4416-8ea7-638db4e4ac35",
                    "target_ref": "attack-pattern--7d277159-2e4c-44f9-b642-e887bcd76bc5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b5a079fb-5adb-4f1d-bc37-f85375611c43",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--11943b67-707c-4a64-95c6-0d137426fdc5",
                    "target_ref": "attack-pattern--7d277159-2e4c-44f9-b642-e887bcd76bc5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6d9e37d3-e806-472d-905c-1078759262db",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2b104bb8-d997-4810-afad-d4ab68c3f885",
                    "target_ref": "attack-pattern--8bc82424-635b-492a-be95-7be19db2f550"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ca6b9f62-fc0e-4440-97b9-e1139cf1a3d4",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--74df4c06-4901-49d7-959a-f04aac51803f",
                    "target_ref": "attack-pattern--8bc82424-635b-492a-be95-7be19db2f550"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e9c44403-de47-4a75-9f3f-ac30dd58096b",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9ef31254-0d00-4e92-8aba-8231b299d478",
                    "target_ref": "attack-pattern--59ed2658-d167-4603-85ef-45743496e6e6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4f34e55c-5861-4c47-928d-e090a7958394",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--59ed2658-d167-4603-85ef-45743496e6e6",
                    "target_ref": "asset--e7d77483-000f-473d-989d-d4ab35622579"
                },
                {
                    "type": "relationship",
                    "id": "relationship--77324f13-c176-496d-a6a0-8e04c8ace0d4",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0db08b9f-8351-4397-b5f6-c32928b6480f",
                    "target_ref": "attack-pattern--77be55ff-0fde-4039-bcac-a367c93d8f72"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d42dda6a-b856-4c9f-b3b6-310a1edb121f",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2b661a15-5144-42cd-b89b-38b22e5caa63",
                    "target_ref": "attack-pattern--77be55ff-0fde-4039-bcac-a367c93d8f72"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9dff07ca-49e4-48f5-96d8-7f0fa974a7ae",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2b72a8af-9218-4ab5-9b79-d25b6fef034c",
                    "target_ref": "attack-pattern--77be55ff-0fde-4039-bcac-a367c93d8f72"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4ab504fa-d28d-42fe-a697-aefd75ff15d7",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--45f58c42-f841-4e35-b6d9-e66c9a03d489",
                    "target_ref": "attack-pattern--5bd71f08-648e-4876-840a-ce3cab3828ca"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8fcc5dbd-4a10-4953-b551-7d50941fac49",
                    "created": "2018-05-15T08:54:56.921Z",
                    "modified": "2018-05-15T08:54:56.921Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b866f863-def7-4836-8ed4-7406b2dbdf1c",
                    "target_ref": "attack-pattern--5bd71f08-648e-4876-840a-ce3cab3828ca"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e824913b-6dfc-4ff9-81ca-28e7b4b405a7",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--3746ea11-d6f9-428a-b6e6-4d8d23e20be2",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5a189a51-04a7-4819-becd-4f2454ed64ec",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2664dc4d-ff8f-438a-a71e-83aec254a4ea",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--01ce8ce8-eeea-461d-aca5-a8db3f25c02b",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--72eff15c-a2dd-4159-a763-a89e77cb34f4",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--1a9aa270-3aff-4c73-8e4a-0f67eb743a1e",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0f989f04-274d-4188-9504-8353d6759e9c",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--558420ea-7071-4efd-b582-8083b88c6052",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--3f2187e9-a5f9-4300-8a6e-2248c4fc321b",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5df4160f-ea7f-4c43-9b97-09207cc9398e",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--04c4d18d-bed8-4a4e-9694-38b0ad5e49ae",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--76eda213-3d16-4c08-8f30-2081debe4301",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2f092e3d-2473-420d-816b-88473f6d919e",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ae427b5e-a904-4bbd-9c3c-bf35cec5d2b5",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--767aebb2-21c3-4c78-9e6c-2231cef22b37",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--52f4055d-4a22-4f22-8b98-bc67929b58a7",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--cc0510c5-0064-44a5-8cc9-54eded0925cb",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ce462ef7-a425-46fa-b613-e2c750f0ed27",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--bb8cbca2-b75a-4b6b-8fe9-4d97b25700e6",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ac7568ab-de7f-496a-b6f8-3079b53a76d3",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f63b9005-937f-4a5c-bf1d-63103463aeb0",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b96cb9a7-4883-467e-8eac-a059f3f3d325",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1df8accf-a019-4c4e-b622-35a71b58e788",
                    "target_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fcae996a-c9e2-498f-ad28-bdea0231f7b7",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--15f0f365-9ab3-459c-a43a-d984d58b5557",
                    "target_ref": "asset--ad32bd16-bfe7-45e2-ba0b-de4ae5765199"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8da2c7e1-846e-4eee-81c5-ea39a71105cf",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--6c9aa93a-76b0-4047-a061-39ef34da3e22",
                    "target_ref": "attack-pattern--ac3dd450-6d15-4065-b4a3-85042ac429c4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--66835827-3fe8-430f-94c7-03d7711ccf43",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--28e2bb6e-dbea-44ca-b217-6d89814cf538",
                    "target_ref": "attack-pattern--ac3dd450-6d15-4065-b4a3-85042ac429c4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--591ad307-64b4-452d-8221-4580b17b7bd0",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--888ea44a-b704-45de-8f60-2d5d9e99bd7e",
                    "target_ref": "attack-pattern--ac3dd450-6d15-4065-b4a3-85042ac429c4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5ec94d5f-45e4-4a6a-ad74-2a495b8715c7",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--aa86e0f7-3069-480d-8522-daffa9ac05cd",
                    "target_ref": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9963d1d4-9901-45f1-98b3-d25345ba23b8",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e72f44b2-d1f7-4aff-8186-ae87458e20f1",
                    "target_ref": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--525d1b15-29dc-4b0f-94b8-10546ced6082",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9758ab96-a0e0-4615-bd2e-a5ed189d539a",
                    "target_ref": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6efb73c4-db39-452e-b79c-46d483e6950c",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--28953ee6-d2ce-4f74-831a-3429ab2ab50d",
                    "target_ref": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8c3f19bb-5dee-416c-8cda-269621d6c46b",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--fba5fc64-aafb-4cca-951a-c33a5f5cee1f",
                    "target_ref": "asset--0c61916a-154b-4fca-a130-b108645dce3a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--29269706-fcba-4c27-8a73-1ce32bb1c5f6",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--030dbe69-ffbd-427c-89c0-9304feb6d719",
                    "target_ref": "attack-pattern--68206981-695b-4c78-a98e-33ea1ee5b36c"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3b51896e-3a51-4195-87a0-93bf05385b99",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2593205c-42cc-484c-9e9a-c205fb306830",
                    "target_ref": "attack-pattern--68206981-695b-4c78-a98e-33ea1ee5b36c"
                },
                {
                    "type": "relationship",
                    "id": "relationship--79c2fe3d-e486-458e-939d-d5fc2df479bd",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e344f099-eb26-4a77-a773-7f3691f6d92c",
                    "target_ref": "attack-pattern--987fc72e-04d8-41bd-ba94-23c4da5d594a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c2f1b23f-d77c-48e3-b523-ec11e6a4dd5b",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--495ce42f-34ec-43e1-afcb-7674fea6182f",
                    "target_ref": "attack-pattern--987fc72e-04d8-41bd-ba94-23c4da5d594a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f5e73192-d27c-483d-910c-ca388283e9f2",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--987fc72e-04d8-41bd-ba94-23c4da5d594a",
                    "target_ref": "asset--2a01e9bb-95c0-4641-80a2-8e7d89c5bbc4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--31ce7129-be62-48c6-8b49-d1bd34ec1735",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--92a3245b-361d-4445-8c29-9fe3b7787ea8",
                    "target_ref": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3f2ec6dd-cc0e-4653-9fc3-804458f2b20c",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0c0c3840-131e-47f1-9c88-858a9e2803b3",
                    "target_ref": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2b9d83d9-844e-4e0c-b8f5-6ed528e095b9",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c6a7c52f-a676-4593-9dce-040b33e20019",
                    "target_ref": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c41dc305-f795-4b24-bb9b-496aee7bdc75",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e28a10fd-866d-4616-8c71-1d8106432856",
                    "target_ref": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8e14b43c-fae7-420d-87bd-12fa990e23a8",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--03754b33-e90d-4400-b235-32230e462d90",
                    "target_ref": "asset--e69144ad-e90b-45b3-9e10-7f70f7c5ad81"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fc865e97-a63a-46fc-a0e4-fe82b83dbcd7",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--445820c3-7f3d-47e6-a306-3507c6d15a53",
                    "target_ref": "attack-pattern--c7b84791-a892-40b4-81c1-a67e7ccdd12e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--54875958-3cb1-47e0-950c-1d69fe783584",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e7b1f22d-b598-4589-8180-9584e0a96480",
                    "target_ref": "attack-pattern--be1118ad-68d6-4e72-a2e3-c0d6006cff23"
                },
                {
                    "type": "relationship",
                    "id": "relationship--65105f1a-2c4b-47be-97f4-8487a118efbd",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--573731ea-96af-49c3-b92c-3ecec02d2210",
                    "target_ref": "attack-pattern--9e58e7d9-af38-4db5-acd5-eb8e123e430d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--131c76d0-767e-4e39-b8e8-abf64b7b241a",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--25303564-e31d-4260-90c4-d7bd45614182",
                    "target_ref": "attack-pattern--9e58e7d9-af38-4db5-acd5-eb8e123e430d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4825471d-fda4-4b82-b0b0-df635cff1607",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ba1500bc-2a43-4021-a50c-618d89498b9c",
                    "target_ref": "attack-pattern--9e58e7d9-af38-4db5-acd5-eb8e123e430d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--83f1349f-162d-402e-a448-ee2f3f6914d1",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--9e58e7d9-af38-4db5-acd5-eb8e123e430d",
                    "target_ref": "asset--deba506f-c721-4ae9-a346-4dc104f34679"
                },
                {
                    "type": "relationship",
                    "id": "relationship--cd1c0aeb-689b-4ed9-a85c-3a71c3932123",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--36f158bc-87c9-41c9-bbdb-2375d77b8b91",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3585d5e9-461e-447b-8eb7-b98135fd2be9",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--083e4702-2215-4fed-90ca-9d59f0ce6e57",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2f18c99a-c16c-4aa6-943c-229fc8ca60f5",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e94d9e65-016f-4dc0-bf65-8a043a776140",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--579a356a-a33d-4de1-bf25-e059894f5736",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e433e5c6-5cf8-4760-9a92-79ba6d9943ca",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--dcdf3363-2252-4e9b-9431-69a8c879b327",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--27655364-736d-4f8c-94a8-196f3897ac48",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7a024483-733f-4272-b854-c8caf1f94d56",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c0efe893-5d0b-4d59-9707-a2659129ad18",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fdc36776-1132-4c0a-9e3b-a243de084656",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1ed3c2bd-c2c9-48ac-9a65-560a112d24bf",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--710d33d4-d2ef-4c8a-946f-e944b7af8809",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--722f7f0b-b3ab-4d3d-822c-f2e15ed07718",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9f0fa4a1-657f-4c3e-97bf-089b21958ab4",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ea711c94-20d4-45b2-ae58-801114a6a63e",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--aed63703-4c9c-438f-85bd-abafffd86b2e",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--cd5d4551-a8be-46aa-8b43-525049a2c1b6",
                    "target_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76"
                },
                {
                    "type": "relationship",
                    "id": "relationship--85518009-c982-4443-879d-b4c1765f7a0e",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--5a615a2a-12a4-4c86-a9e7-ad640bd07f76",
                    "target_ref": "asset--5d63bf73-e8c9-4169-9d56-faf67d214178"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8855772c-cee4-4786-b675-d7b599527f6c",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--69bd9bc1-f829-419b-817b-4dd147a1f36c",
                    "target_ref": "attack-pattern--231c06b7-5cb4-4443-982e-7772480b9d3c"
                },
                {
                    "type": "relationship",
                    "id": "relationship--efad3837-f9df-4e20-9f5f-a68c7721590d",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--80cd90fe-d40a-4b4d-9beb-37e39d2c2955",
                    "target_ref": "attack-pattern--231c06b7-5cb4-4443-982e-7772480b9d3c"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8d1afe03-ad0d-4059-92e7-88f10fd6ed0e",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--231c06b7-5cb4-4443-982e-7772480b9d3c",
                    "target_ref": "asset--f1ac88a6-92b8-46a5-ac1b-c8acf95d385e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--45145af4-d137-404e-979e-cfd3edf15a93",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ff4bcc3e-2fef-49c5-a144-c1a37e583e31",
                    "target_ref": "attack-pattern--13546eea-b901-4e20-8f4a-61201ca9f0b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3ebaa35c-bbb0-49a0-80a1-664a657d033a",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--8b35179f-58ef-451a-8266-a7a506a43a4a",
                    "target_ref": "attack-pattern--13546eea-b901-4e20-8f4a-61201ca9f0b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--200c8515-5a3c-48e5-bb27-5727613d2a16",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1a4e19af-29b5-4138-86ca-1968d3e62041",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3f17164f-ef0a-4e4c-95b6-f7edf179f26d",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--68eed600-bce1-41f6-90f2-e631809ca2be",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b3b88f58-e9c0-4f90-9003-369ccc94f707",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--10563166-9713-4dc7-9fd6-6fffd718d087",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b11415a8-e680-4135-b0aa-acef43b2f161",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2da97144-e9a0-4004-bf82-7e5237a203fc",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c337c02b-12a7-4f99-9ce6-c19aa7593950",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d15d97c0-e59d-4158-801c-809552a681bf",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--335ffe4a-2048-43be-97b8-d78d37cc3fc4",
                    "created": "2018-05-15T08:54:56.922Z",
                    "modified": "2018-05-15T08:54:56.922Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--79aa6c58-67ee-4e77-8f25-a98fc620243e",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ecbbfb17-c7f7-43be-8d21-3546fb8d6258",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b5c04fec-9f02-4dcf-9903-3bd0376e2716",
                    "target_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89"
                },
                {
                    "type": "relationship",
                    "id": "relationship--911a954b-465a-4d2f-9623-15a56f7531a8",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--ebfaed28-64bc-4801-893e-177eb9265a89",
                    "target_ref": "asset--315d4ca5-8b81-47ab-a323-bc64ef2be6f9"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5fff8252-2cde-4933-b850-db6d097c3162",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f8ebfe39-5328-49c1-a80e-beebd11d29f0",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--955497ff-5b1d-4ccf-829c-1d6ed5ede6bb",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c6ce4e92-7ea5-437c-9ae2-fc87887830eb",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--818647b0-09b4-4ce1-913d-d8fd67b010aa",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7e2b6877-a0dc-4bf6-9c1e-8b719d765478",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9caea97c-be12-4ee1-a8ac-fa89b3906304",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--161e73cc-c756-439b-9db9-29de5440cbe1",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2fcb2de4-5176-4eb6-85a5-5c92f7ca6b13",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d883fe1d-5e70-4f25-9ed2-ae0917d9b067",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ce111c41-0d90-43d3-94eb-20d95d867107",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--70fd72d0-62c7-468a-83eb-bab38fd391f0",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f3328cd3-7cbe-453b-94ba-7fc034414326",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f98bc3f5-f6b6-4d6c-ba07-0937c17c2ac9",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--a9aafd1d-b08c-4954-9845-b35d76a21fbe",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0dc73c61-661b-4b53-993e-ec5930e1507a",
                    "target_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93"
                },
                {
                    "type": "relationship",
                    "id": "relationship--28e90f8d-3151-4ce1-8a35-d76497c5d8fe",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--c61e9be6-8236-4fed-a6c8-89b2ad89de93",
                    "target_ref": "asset--7d3973df-6f7f-403f-83f5-c048458718de"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7b199fa6-e3bb-4e47-a397-240502bbcfd0",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ed9127df-c4fe-42f6-854e-ce7e752fa460",
                    "target_ref": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ddca5097-6fbe-4b6f-9479-2bcb1c1ee1f4",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--50894d28-a738-4869-b686-74af61cbb4ef",
                    "target_ref": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b92d9ba5-2d52-4900-81d4-a9d96f21c2e6",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c01e428b-3edd-4ae0-910e-601f4e55c4ed",
                    "target_ref": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--849d2556-de9c-445b-af73-cf7e77f98058",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d697e6a0-0187-4c7b-93f0-1a40efb5b914",
                    "target_ref": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--1b08feb9-606d-415f-842e-2afce2da8a4f",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1a3af804-cd59-4cad-a53b-2ded9eb8546e",
                    "target_ref": "attack-pattern--7dc7a1a2-a0ba-4349-8bcd-1881c6a0f6b5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6a85758e-5bd8-4489-8b21-538277dbbd6a",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b104d4b7-c447-4c00-9da8-0495078f03f3",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--59ae6b10-bd8f-43b4-ac94-394d7cea5e76",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--753d88f4-bbdf-4da2-b99d-c6b76c879819",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4385c9b2-2277-4564-ab5a-92c3e8f979ff",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c66114c2-fd48-4821-9459-72836cc944eb",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ed0e1188-0f1b-41de-acaf-ccbad9d33d85",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b4032fd7-4f99-455d-b8d4-faf5dd384364",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c6834773-b5f8-4685-beff-3c9474754622",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--faab2298-e0b8-44a0-9d76-e4d6a4f19bba",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6b808490-6685-43f4-9d8e-566575baa473",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f1e19856-dacc-4307-8513-87a7dbc7329c",
                    "target_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2fa42445-31e7-4d87-9d39-e20ec18de014",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--4af756a3-e7c3-4724-aeb1-5fca0f4e2f2a",
                    "target_ref": "asset--9c47eebd-a44d-469b-ab84-c2b68f39410f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--074ba14a-7d89-4ce6-b49b-a05bc9851956",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d07dd2ac-2836-402b-99f0-38df346928a0",
                    "target_ref": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--37be9698-450a-4bb1-9db9-7207f0a305d3",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a221165d-ee32-4589-ba42-1ca046fda955",
                    "target_ref": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--33b8824d-1491-4134-beb3-3d9ff02bc3f9",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d34a791e-54d5-45d9-b0f0-c011ba6b5e0e",
                    "target_ref": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--862e7d4b-ee35-4079-9d7e-83e1bb540906",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--33ac9679-e912-4476-8a17-bb502243bfba",
                    "target_ref": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--771562e6-14a9-4836-b7ce-88a1665ae366",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--aa4aaf69-8a88-4377-a4de-3714a72a3ef5",
                    "target_ref": "asset--90302971-2a8f-4fa0-aeca-1ed3ea0065c4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c4d6f8ab-8ed0-41a9-92ff-7ca1e874a336",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--cf2aed52-6502-4788-b921-685b9b08a0a7",
                    "target_ref": "attack-pattern--546c3cd9-496d-418e-84e5-8c540a9774dc"
                },
                {
                    "type": "relationship",
                    "id": "relationship--eb15b863-a74b-4428-bf4c-129c52efae8a",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f20e649a-fbdb-4a2a-8a23-066af4fdb7b5",
                    "target_ref": "attack-pattern--546c3cd9-496d-418e-84e5-8c540a9774dc"
                },
                {
                    "type": "relationship",
                    "id": "relationship--1363a600-0080-4b74-a717-07f55c550d68",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--48f72c1e-39f9-4b6d-8048-1b333f42a538",
                    "target_ref": "attack-pattern--546c3cd9-496d-418e-84e5-8c540a9774dc"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e1e43191-d7bb-4a6e-8c27-5ba9e98cac45",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ce079a56-eabe-4fe1-bf3d-b1d5a3fdd819",
                    "target_ref": "attack-pattern--fdfa46b0-2184-47ed-b849-e12d5c84fa3a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--45a2b011-e294-4044-a77c-9353e411dabe",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--fdfa46b0-2184-47ed-b849-e12d5c84fa3a",
                    "target_ref": "asset--ca7a9b59-e1ee-4d06-a5df-2504030088e0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d879b292-c783-49b2-928c-793528e31a4d",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--90c8f2a6-7245-4b67-bf08-987fec1f6ac1",
                    "target_ref": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58"
                },
                {
                    "type": "relationship",
                    "id": "relationship--195d788a-af67-41ba-8e4b-03b71e42d74d",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ee00c42a-dd69-41be-8720-fda7d9acada7",
                    "target_ref": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58"
                },
                {
                    "type": "relationship",
                    "id": "relationship--776a4ebb-a8f7-4ddf-a21d-afb3a2492de1",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--43ea7b51-f3d5-40b8-8a07-774d68a83d8b",
                    "target_ref": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58"
                },
                {
                    "type": "relationship",
                    "id": "relationship--828b8a8e-c818-4f7d-93be-59c1dd03a9f9",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7936c6e2-ae90-4723-8cc4-05d26a2182bc",
                    "target_ref": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58"
                },
                {
                    "type": "relationship",
                    "id": "relationship--beb9c719-1318-43e8-91f5-4661e4cd9cb9",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--7e61cadc-f580-4e46-a406-c5ace7bd2c58",
                    "target_ref": "asset--a0a7a193-033b-4575-ab59-7324aea3ab99"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7aa4a706-767a-40d1-aa2b-23716f08a670",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--5064d993-b8ca-4462-a4d6-3d8ddb7c57a7",
                    "target_ref": "attack-pattern--0e0713e0-2cdf-4dee-badc-9e696288f106"
                },
                {
                    "type": "relationship",
                    "id": "relationship--36e52f2a-d192-4ff1-b2d4-53abfcc340c8",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--5db312e9-754b-4769-abd2-1cb8cb0d4c02",
                    "target_ref": "attack-pattern--0e0713e0-2cdf-4dee-badc-9e696288f106"
                },
                {
                    "type": "relationship",
                    "id": "relationship--12b3abac-6b8c-406a-9ad3-cac3f44c1eb4",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--653c1d47-026c-4afd-97c4-26c1fb9f2e6b",
                    "target_ref": "attack-pattern--0e0713e0-2cdf-4dee-badc-9e696288f106"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6d050ec1-1414-4439-8a5a-b1314bfc8940",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d48a8116-1f40-4453-92d1-92255807e6a6",
                    "target_ref": "attack-pattern--0e0713e0-2cdf-4dee-badc-9e696288f106"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0709ad0d-12ea-433e-9650-a250c7277994",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e76894c3-5f9f-49fa-b53f-8ff099fc56d2",
                    "target_ref": "attack-pattern--2e28dade-577f-4848-9b9f-85654b1dd4f1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ff08c633-6637-4a25-9361-1f13654a6f2b",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--281ae476-eb92-4a5b-b1f5-a042e8511c1c",
                    "target_ref": "attack-pattern--2e28dade-577f-4848-9b9f-85654b1dd4f1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ef4ec776-8762-4c6f-badf-af8abcdf8cba",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--6ed6fcac-ec60-4469-84f8-090b22e945d8",
                    "target_ref": "attack-pattern--2e28dade-577f-4848-9b9f-85654b1dd4f1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--65c7d806-6019-48c0-8b55-f52d4d48857b",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--2e28dade-577f-4848-9b9f-85654b1dd4f1",
                    "target_ref": "asset--9450ad60-d27c-4a87-a1e7-3719781dc9ed"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3f5441de-77f5-4129-aee9-8ba4c10034d2",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--fccaed6a-149f-4cf0-987e-0250c275ab57",
                    "target_ref": "attack-pattern--fbf97797-e538-4128-9e1b-d2f084defc6e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--87d553a3-2053-49de-a8a7-a3f39dcdc855",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--098508d6-ca30-46ac-8947-0ef9629da51c",
                    "target_ref": "attack-pattern--fbf97797-e538-4128-9e1b-d2f084defc6e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--99cd07ef-35b4-4cd9-85d1-4efc3d48f6d7",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f24b4b14-722b-4ed9-bb02-40868eb675f9",
                    "target_ref": "attack-pattern--fbf97797-e538-4128-9e1b-d2f084defc6e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fedae271-52df-4fd2-bde7-176e4ffeab8b",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--111a63a7-70d2-4da4-89d1-182fee77ac33",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6421dbbb-802f-4315-aa1e-540dcec780ef",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--957f02f0-6077-499f-b762-4c2f54f137c1",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--20fd755e-3e52-4001-9050-38859b7b5d87",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c7d2186d-d1a6-4506-96e1-13fb33de0de0",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--882f6e4c-61a0-490e-ac5b-fee8fa2a2693",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e81af56f-4d6d-4374-a3b8-9163ef367c24",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fe30008f-4fc4-4715-988b-9d9c7f318386",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9427dd37-fbf2-45b2-88b1-019ec7cc0444",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b7c96647-cd86-4bc3-a0c4-722e8c6dd139",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--27d7d1ea-8e80-4a4c-881c-9359f2228b47",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--07812e00-b1e7-4930-bfa7-24e55dd48ba6",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0c00f312-addf-4c8c-baef-d4ba6242348f",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--721232d6-e7f8-4b6c-93f5-547326871352",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a4224f24-386a-45f1-af60-c63c58517002",
                    "target_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ea159e66-4c43-4b4c-9020-8e3037b1521b",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--ad17407d-a53c-49e5-97c3-1b959b4af26e",
                    "target_ref": "asset--a06e6626-2fca-4795-bc80-f6b61d285344"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7d27d3bc-b005-44cc-b07e-9c2288a1da22",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--08c5cd0f-6794-4048-a053-e5438dd157ed",
                    "target_ref": "attack-pattern--10d68cb6-75fa-433b-ab4f-2632358ba0e6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--51575d7b-a52b-4474-b565-492242354e53",
                    "created": "2018-05-15T08:54:56.923Z",
                    "modified": "2018-05-15T08:54:56.923Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c35c2e20-eaed-42f0-82d1-76c788021334",
                    "target_ref": "attack-pattern--784ca6d3-d123-4e5c-a9c5-38a6dca214a9"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7cc67a55-16ac-4491-8033-53c77e40ec92",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--4527f0b0-83f5-4bb8-a224-eb66e3b106fc",
                    "target_ref": "attack-pattern--e7f93b81-aee2-4b29-8c28-6e1d0e6d54c4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d128ffb3-53ae-43ef-9e92-f8a45283f036",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9bf4ecae-5ea0-47bf-9d4d-d3e8d12a652d",
                    "target_ref": "attack-pattern--6dcd0086-b1de-44eb-8cc4-c077c98a9fb9"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b8abd55d-6fd6-4205-bdc9-e414a44d31b5",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c65bb1a9-979b-4d62-aec2-32c61e78a043",
                    "target_ref": "attack-pattern--4e339b96-a09e-40ed-a018-8753f6d0df8d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7bc16465-a0da-413f-be1c-14b1395c719c",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--77291d15-3708-4ea1-a73a-38b2647885a3",
                    "target_ref": "attack-pattern--8b73eade-bd25-4efa-b488-c07aef315c58"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e922c9c4-2399-4e15-894c-2408e26c94cf",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1ff022f3-43bf-41b1-af68-25d70a7b949c",
                    "target_ref": "attack-pattern--5e2f5c83-ea72-4731-944b-27a936d9ae14"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d87030a8-afb6-41cb-8bbd-3d9892746280",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c70ab7c0-9716-41c3-848f-5b71bc12fc48",
                    "target_ref": "attack-pattern--eeb45418-634e-4f2c-9001-33a309715db6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c8cea752-949f-4627-921c-595c36a5e093",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1c43bff3-48dd-4ad8-85ec-3f2092b371e3",
                    "target_ref": "attack-pattern--93f4dc84-5043-4e9b-a902-c51b0201d64f"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2108f1be-7de2-4be8-afcf-d35e8ff0910e",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--903bd10f-a672-4070-9ffe-bb238fc15958",
                    "target_ref": "attack-pattern--69fdfde6-51a4-4dd8-9f14-32de0403dc25"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f31f48b6-bb93-426b-ba97-08e60b1687ad",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dddbec30-beb4-4a3b-b59b-3579ed7afb30",
                    "target_ref": "attack-pattern--69fdfde6-51a4-4dd8-9f14-32de0403dc25"
                },
                {
                    "type": "relationship",
                    "id": "relationship--06935fcd-3425-4131-baa7-42eeff42156f",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--189923d1-903e-4999-a694-b8024e40a39e",
                    "target_ref": "attack-pattern--69fdfde6-51a4-4dd8-9f14-32de0403dc25"
                },
                {
                    "type": "relationship",
                    "id": "relationship--10154f4f-095f-48e6-b106-cd1b0df3af46",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--304188e4-e8ee-496f-939b-5d61358deaed",
                    "target_ref": "attack-pattern--84761ad0-5f9a-4af2-a08c-ca5899e83c13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--90bda49b-8501-4c0f-93c4-e7f14270297d",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a91dc2ec-dd2f-4672-acec-e33cc8ef72d6",
                    "target_ref": "attack-pattern--84761ad0-5f9a-4af2-a08c-ca5899e83c13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--08fe6099-998c-4c4c-a62e-6e78449ced1a",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--8b836d39-43de-44c6-8ff1-c553a4c197ea",
                    "target_ref": "attack-pattern--84761ad0-5f9a-4af2-a08c-ca5899e83c13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ba916c66-e1c1-4235-85a0-f6296e2b31e8",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--84761ad0-5f9a-4af2-a08c-ca5899e83c13",
                    "target_ref": "asset--57a3ebb0-dede-4e97-929a-585062352493"
                },
                {
                    "type": "relationship",
                    "id": "relationship--259e8e69-99d2-4646-9a98-d306f87eb505",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--12e019b9-2a94-456f-953b-02df9a8389d9",
                    "target_ref": "attack-pattern--6f526800-3cdd-462a-ad31-77e7244cc147"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c0ca0b37-69ae-4800-8cea-1bd43b398d5d",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c96654a2-dde8-43dc-9c46-e4efc1459227",
                    "target_ref": "attack-pattern--6f526800-3cdd-462a-ad31-77e7244cc147"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5fc15daa-b06e-4205-ac3a-d4b0889afa27",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--6f526800-3cdd-462a-ad31-77e7244cc147",
                    "target_ref": "asset--54f528fd-beff-48ee-86bb-c567b01a9714"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ee7526aa-6b03-476f-a93a-f1b115fc8a71",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--78265cc4-133c-423d-ad4d-bf7c66d58d06",
                    "target_ref": "attack-pattern--0e826c12-f53e-4330-a7ee-36411629efa7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c25b3f51-334a-4065-bf7e-0f124f697362",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--5bd696e8-6da3-44f3-b47a-6d558acd4ae5",
                    "target_ref": "attack-pattern--0e826c12-f53e-4330-a7ee-36411629efa7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e750eb22-3291-4e06-a008-2ac69ee871c9",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--3f454c35-1c91-4070-9893-ed41529ee6ad",
                    "target_ref": "attack-pattern--0e826c12-f53e-4330-a7ee-36411629efa7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b933c7c8-68ef-4590-8c6f-bf7a444c8648",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--0e826c12-f53e-4330-a7ee-36411629efa7",
                    "target_ref": "asset--97aab46c-f0c8-475b-a478-9afad52f57a4"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c6638f1c-18fd-4c0d-9e67-713ae2834e59",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e23a7339-621a-438c-b16e-9a7777c8030a",
                    "target_ref": "attack-pattern--3b2d6b47-9972-4e47-b1ef-ddfd7e54f196"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fe937244-0925-4832-ad14-c2536be0ce66",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--941f1c94-f4bb-432d-a858-e6de3291cb59",
                    "target_ref": "attack-pattern--3b2d6b47-9972-4e47-b1ef-ddfd7e54f196"
                },
                {
                    "type": "relationship",
                    "id": "relationship--99cfca2f-cd5b-4fd1-a9c3-0b70e480a311",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--13b0b9a1-161f-4064-9f5b-7c0200e66c6d",
                    "target_ref": "attack-pattern--3b2d6b47-9972-4e47-b1ef-ddfd7e54f196"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ebced826-e8e7-432b-b4e1-91f03bde0246",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--90a7e1a7-db2e-4ae3-9c3b-50aa2198495f",
                    "target_ref": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--91147493-3f06-4e52-a0b0-651eb966c11f",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--c28adc22-69ba-4ee9-9926-544bbcf87109",
                    "target_ref": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--70c83a33-f656-4ff3-bcd4-53f2073549a4",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--eece4e39-321c-4ccb-8d8d-d661932978ee",
                    "target_ref": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2eeac09e-9829-4dcc-89f9-c6254ed15873",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7233edf2-82d0-4293-a757-17680c8569fd",
                    "target_ref": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--41b3ce70-031f-4cc0-a40f-0a50e9a75720",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--24908fa3-7a47-49b9-ab7e-d0db307cf79e",
                    "target_ref": "attack-pattern--9c926092-1ce2-4d97-bf1e-c9752e205ee0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e3893bbd-70f0-4057-bf98-eac7f3bc9576",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7c83c375-4f28-4345-9434-777d42cf33ca",
                    "target_ref": "attack-pattern--a2ac1771-3825-4de6-8c66-956234ce1b71"
                },
                {
                    "type": "relationship",
                    "id": "relationship--adadfadd-284f-46e3-8243-3a60762f8850",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f4c1790e-d676-411b-b435-279b87718513",
                    "target_ref": "attack-pattern--a2ac1771-3825-4de6-8c66-956234ce1b71"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6a0b7c41-744d-4049-8d73-7203fb74ea1e",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ac716e1d-8491-4c2c-b7ad-22487a3401c1",
                    "target_ref": "attack-pattern--a2ac1771-3825-4de6-8c66-956234ce1b71"
                },
                {
                    "type": "relationship",
                    "id": "relationship--22b3dfcb-f47f-4cb8-a0f3-8951c5e5d093",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e40e01fe-6f20-4210-92c6-76c3b4bcbfbc",
                    "target_ref": "attack-pattern--9ea1d62e-51d1-4690-8ec5-2e613722e9e6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f4f21fb1-b486-4416-b2d7-a58fb3a3420e",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--6e5fb9a7-d39f-4963-bee2-44130956bfbe",
                    "target_ref": "attack-pattern--9ea1d62e-51d1-4690-8ec5-2e613722e9e6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--cc252f46-2639-4198-b16a-f7b89abdac68",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e22b9d94-7a8a-42ae-aca0-46bd116279ad",
                    "target_ref": "attack-pattern--9ea1d62e-51d1-4690-8ec5-2e613722e9e6"
                },
                {
                    "type": "relationship",
                    "id": "relationship--065d028a-8960-447e-a20a-252c0abff936",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--55269bc6-af8c-483f-b78e-e3e6e39c70a9",
                    "target_ref": "attack-pattern--895090b7-a697-446c-a7d5-192a00401f91"
                },
                {
                    "type": "relationship",
                    "id": "relationship--a0e9a77d-7006-45c3-9cd1-596767c6b9a5",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--89be8b95-3e28-430c-b247-cba76e6a3349",
                    "target_ref": "attack-pattern--6c5b9c61-f342-4475-a0c3-23d3974fb03a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f6489b46-164b-4d82-8bc8-6f2115dd612f",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dc087a43-1e52-492c-ac94-3d9c5d29cef4",
                    "target_ref": "attack-pattern--6c5b9c61-f342-4475-a0c3-23d3974fb03a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b042b528-22ab-4e51-b376-d2834fbeb7d6",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dacaa847-a87c-4e54-99da-8c6f47e5bb61",
                    "target_ref": "attack-pattern--6c5b9c61-f342-4475-a0c3-23d3974fb03a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--49dc3179-80f6-4785-bb5b-0c611d5c3a15",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--6c5b9c61-f342-4475-a0c3-23d3974fb03a",
                    "target_ref": "asset--e47565d4-c938-4b80-8ae3-93dda98d3b9e"
                },
                {
                    "type": "relationship",
                    "id": "relationship--53a2536c-a306-47ec-9515-117e78a8a39c",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9f201528-9630-42c5-897a-ff489f44c849",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--80657193-d786-43f7-86b2-b63d7f3bfb09",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d2a3c4d9-8790-4be6-bff2-2ebd3d8c6a69",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ce7a002f-5770-48d6-9500-12b696c89432",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a09e9d3b-d4b2-44a5-8d06-4a3e58e1e55a",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--cfd1cf60-52e6-4d0e-91d8-2b4ce2265065",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--4a0fe92a-012f-4cb8-b54d-30e53467092c",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b1ae6475-e0c3-4b87-8deb-cdf64096d370",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--47378483-4f78-4075-a65f-8ee82161c47b",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b6936308-0c8b-442f-a8ad-96dd6215862a",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--bfb6d69a-7b82-4dee-9986-e0e1a847d1cb",
                    "target_ref": "attack-pattern--b29a063c-85db-4539-a048-0a18580fe000"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e9c7db1a-ae35-4116-946b-07cb8fbdff98",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--bc86a2ef-34e2-4054-b5f5-b57ae006ca90",
                    "target_ref": "attack-pattern--06ede737-cfb8-4fa8-a2e9-49d19e58d903"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c270f627-7889-4ed4-b171-b1b0dfcfc86e",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--eea0fc48-4ae1-410d-a2e2-58765f63ff6f",
                    "target_ref": "attack-pattern--06ede737-cfb8-4fa8-a2e9-49d19e58d903"
                },
                {
                    "type": "relationship",
                    "id": "relationship--2cced56d-5374-4d99-8b43-bc10b44433ad",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dbcb66fc-8aa5-4593-b03f-f9f3bc8f70c6",
                    "target_ref": "attack-pattern--88edd3ad-04bb-4f3d-aa6b-cb63f7d18a13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b8eff2e2-11f3-4d3d-a9ee-a53495a33b59",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--31ac1620-d7d2-49fe-8cfe-48d5202db2d8",
                    "target_ref": "attack-pattern--88edd3ad-04bb-4f3d-aa6b-cb63f7d18a13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--140a7e52-c898-423e-bb0b-58262459d8ab",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--47b8887c-b55f-4306-ac50-dd742e3ebd31",
                    "target_ref": "attack-pattern--88edd3ad-04bb-4f3d-aa6b-cb63f7d18a13"
                },
                {
                    "type": "relationship",
                    "id": "relationship--752fec75-e84a-49b7-bf1e-375d96cfeb7d",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--88edd3ad-04bb-4f3d-aa6b-cb63f7d18a13",
                    "target_ref": "asset--c9c1b6b7-b23a-43a2-a29e-20f495e4d240"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d05b70c1-1e79-45ee-aeb8-558d40a0fe81",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--fddf4d02-3ca6-4b53-976d-94fe7208cda8",
                    "target_ref": "attack-pattern--b7b8222e-dca4-4be8-8d6d-0cbdaa10ed57"
                },
                {
                    "type": "relationship",
                    "id": "relationship--1e5a3da5-bca2-4c9b-bd8e-d8b57abb50d3",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--6f808cee-285d-42c3-9a4a-6423f100eb96",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--07ca2f8f-deee-45ca-ac91-7dc86b792d50",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1938ea69-19a6-46a7-82c1-eaef23ad6464",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--97fdd1a9-5906-49d9-888f-a122901e5d36",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--91040c52-4a0f-468d-b27a-3cac3fcd0836",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f111a568-abf2-4c97-8abc-e03a1d974e91",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--99f6a913-3066-4382-884f-a6319998cb58",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--47250cdb-83f5-48ed-9706-ea7cce7084ce",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--4da705a5-db04-4ba1-a3db-0937956149d8",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ce9b9006-3c2a-45fd-8bf5-643087676418",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--777374b4-a72e-4dc8-bcf8-783043439d34",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8e333444-9a6e-4823-8713-0bfedd5bf723",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--4407ec7a-b76b-4732-b76e-52aa738f7e66",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--10f9f6ad-519c-4857-a413-4842df0da752",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dcc6163c-5d7f-4945-aea1-f864cfcb10d8",
                    "target_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70"
                },
                {
                    "type": "relationship",
                    "id": "relationship--719ee58b-0a55-4ecd-8b07-001c4c55512d",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--fe10463d-e970-43ab-a9d7-f475b9bfbd70",
                    "target_ref": "asset--bd92b5c5-5b3e-4448-bcd5-627c84aca7c0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8eaea1a5-2a72-40aa-8a63-6409db4f687b",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--0d5cde74-9ade-40e9-8267-0826b291c3af",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e29523e7-0d1c-4a40-a22b-fc7542bd5bba",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--868d69b7-5adb-4b62-898a-a6a1ed03858e",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0183959d-820b-4f4a-b4fc-78450d4bad32",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--da04cb53-358a-4f00-82fe-ae8c71aa4b3a",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--76b183a6-1119-4141-9c79-267260b4f3b7",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--052d8695-525d-4d76-90de-a2656ce4eaa2",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--1d567102-4f53-475c-b06d-88d713903fca",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--71a011f9-0ef0-4b39-8c7c-e667526a6853",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9e32a0d4-b4a2-4b45-aa41-c732673046e3",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e6b7c0f9-8f6f-4e4a-9bb9-be7d668c2244",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7c926c23-4e9e-40ef-a33f-d6a6e42dabd5",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--66c4b761-b52f-4c08-ab74-bd75b3e934f1",
                    "target_ref": "attack-pattern--5f6dbcf4-1017-4042-bdef-5a7b7233a064"
                },
                {
                    "type": "relationship",
                    "id": "relationship--559237c6-7b34-4134-bc41-61ec96877692",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ce2c1ec6-f362-4297-9fb1-648ed127bf91",
                    "target_ref": "attack-pattern--ed8708cd-267f-41fa-a154-178dee49653b"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0a26353e-bd3a-40d6-b187-1cd25252e0a0",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ebe0dde2-0534-4606-bbaf-a42ab1d7a289",
                    "target_ref": "attack-pattern--ed8708cd-267f-41fa-a154-178dee49653b"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5a86d66e-645f-489e-84b4-ca1d0998f2b7",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--521b7800-24b1-472f-b0fb-6cbd586b97ee",
                    "target_ref": "attack-pattern--ed8708cd-267f-41fa-a154-178dee49653b"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3836b9f7-bc3f-411d-9bba-8872e2dbe6d5",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b51004ca-cfd7-4632-8c80-59cf144cda1c",
                    "target_ref": "attack-pattern--b39e740d-42ea-4a3b-8ef6-2f17bcf7d926"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8bc0f975-2706-47db-8fd4-600e6640712f",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--be0d8e05-f27c-4590-a415-75cb436c7afe",
                    "target_ref": "attack-pattern--b39e740d-42ea-4a3b-8ef6-2f17bcf7d926"
                },
                {
                    "type": "relationship",
                    "id": "relationship--75fcd0e9-3b81-4a9b-a693-3d9126a0eb37",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--cd05fd70-ef54-49e5-b348-fc483dee1917",
                    "target_ref": "attack-pattern--b39e740d-42ea-4a3b-8ef6-2f17bcf7d926"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f00ce51d-9c81-4fb6-a2e4-0f1ea5da91a3",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--b39e740d-42ea-4a3b-8ef6-2f17bcf7d926",
                    "target_ref": "asset--83001a90-9d14-4a25-a9f5-f763e47e95c5"
                },
                {
                    "type": "relationship",
                    "id": "relationship--58b6a5e7-68bb-43b0-b427-60a3306c734f",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--8249ebf6-e55a-483e-9dd2-bf6c48c0fa50",
                    "target_ref": "attack-pattern--21281146-d735-4458-b887-fcae981cb941"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f388c2e4-26ed-4ee9-ba97-cfce831aa5d3",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--667bc7ff-5b24-4a91-9949-b085ffc9708b",
                    "target_ref": "attack-pattern--21281146-d735-4458-b887-fcae981cb941"
                },
                {
                    "type": "relationship",
                    "id": "relationship--d39b65e5-39a6-473f-8b98-1822abb5bf8a",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--546f8f33-170e-4348-b1b4-d9e7498d118b",
                    "target_ref": "attack-pattern--d3337b08-ce21-4c24-b03e-6b91ff511cd7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--677ad70e-09b0-452a-a8bb-3bab5290850c",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b7647dd5-d4f1-4367-b1c5-f00629deb130",
                    "target_ref": "attack-pattern--d3337b08-ce21-4c24-b03e-6b91ff511cd7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9aae3ed8-c50a-46ff-989e-766356479cba",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--d3337b08-ce21-4c24-b03e-6b91ff511cd7",
                    "target_ref": "asset--b4fc6e78-04b5-4876-b491-b140ff54ff53"
                },
                {
                    "type": "relationship",
                    "id": "relationship--259a4eea-05fd-4ead-b6aa-1110f5a31109",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a2b572c1-88c7-4dbe-ace7-5ad6d6addb88",
                    "target_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--14af1f1c-104b-44ef-b881-36310950ebc0",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--af112b0e-4be0-496d-a8cd-e7be4d9ee746",
                    "target_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fa0aa8c5-252f-4484-b881-2fdb9823f6a0",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--2a982ef6-561e-435a-8325-34bb7e9405c9",
                    "target_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e4c45218-beb1-455b-8025-7800012ef0e3",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--8573aa0e-22ee-492a-b512-22c32c98a068",
                    "target_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--091f3c16-e504-4b42-834c-a760f92dbfb6",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ac0f733f-563b-446b-9b87-599af6b15c2e",
                    "target_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c653dda7-7f0a-4ec5-bd77-8ab8f8d16259",
                    "created": "2018-05-15T08:54:56.924Z",
                    "modified": "2018-05-15T08:54:56.924Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--f99cea7a-90d0-41be-bc97-7b806259e4f3",
                    "target_ref": "asset--579a6fbc-f7c3-43d0-b1b1-9941cf8b7087"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f37f47cc-6503-4d0b-9474-ef10e6c41d36",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a1cae7ec-0a12-4942-8fa4-d1b747c9dd04",
                    "target_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c90207ff-75d3-493c-88e6-8be7aa626df7",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--10802930-0622-4bc9-b510-cb0188a70cde",
                    "target_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7cf3bfc4-a264-4af4-9552-3aee6ed78a72",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a43d5035-91f9-4374-a132-cb5e9763bdf4",
                    "target_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--8d5f4ce1-8f3f-446b-88f2-52945ef709f1",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7d67e1ff-6e65-46bb-b4aa-9bf44769ad88",
                    "target_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--945656ef-c111-4699-b75b-8abc0119653a",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--acc87337-bc4d-4b9c-826a-4a76f5034c2c",
                    "target_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5ffa8998-11b1-494f-86f7-51c03f27f9a4",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--e189452a-5fc7-40c4-9f1b-da21d97927a2",
                    "target_ref": "asset--e71c5ccd-3b3f-418c-a257-88954b4dc86a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--46823da1-7c64-4d15-ad90-ed5b8e33821f",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--840005c9-7112-44ce-b0bb-0b5d3b59b418",
                    "target_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--483d81ad-fd17-409b-9780-248ed56d7b5b",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--943fec81-4346-4f27-bc90-4660936dbe29",
                    "target_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4e271339-fad0-48ab-83f7-9b32c59a647e",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e35303b8-1f42-40dc-8f43-ac61623790f5",
                    "target_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--911d5ec1-1add-405b-a1f1-5ff36729c26f",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9342b208-97a7-4654-8a39-22761cb325c8",
                    "target_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6cb30743-ec87-453b-87ef-9602a5e55be0",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1fa58c93-5181-4864-81eb-0219acc4bd01",
                    "target_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--50fd3653-aee0-415e-acd2-b12b6c95cc6c",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--fe8a3805-0c10-4e6a-95e4-1b678c72c6a2",
                    "target_ref": "asset--d8afc995-11e4-477d-aa57-d30b870d2bc0"
                },
                {
                    "type": "relationship",
                    "id": "relationship--128a4455-e59e-4751-a90e-246a19e43d9a",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--96853013-3ba5-4ca9-b958-8263940cdee3",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--98ba71b5-825f-499f-b0a4-9cc14f400102",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--6df7afff-dbf5-4553-a6b2-10996a450fc4",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b29c4d1d-1ae4-4720-8a5c-adb113a4a75e",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--00a6e303-76d9-497b-bb11-a244d4f5a026",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3aaba70c-18a1-4a17-b6f6-7d71f8b73c34",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--55ac0fba-0d7b-43fc-858c-67f1cab08771",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--a678e386-91ad-47fa-8275-05913fea566f",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--60dd9cce-769c-4519-be9a-105deddfbb46",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0e9b92bb-b015-4b9e-a094-ff32fe29d76e",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--41b617c1-47bc-4aaa-98bc-202d63338836",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--9e8741c8-2458-4756-a9fc-a166ba16c381",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dda70c85-7e3a-4e78-adca-0db33e57935a",
                    "target_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132"
                },
                {
                    "type": "relationship",
                    "id": "relationship--7734d673-9c5f-46cc-80cc-1c557f9c1c67",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--ddbf8523-658a-4722-aff5-fa1812da0132",
                    "target_ref": "asset--d1b1458a-9a8f-49e2-8da2-c7d2f70d5c1b"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6db307e2-479f-49b9-b01a-e55093deee56",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d8fd27a8-a95a-46ee-a6a3-e32cbe26343e",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--83745432-e760-413c-ad24-33fc8caeee55",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--50d3f7c8-0d8f-40dd-8e44-5bfc57f0b2e8",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ffbf6f52-97c7-4469-b05f-691485bbf910",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--9c5e12b8-c3ca-4d8e-9d5e-e93d669f0873",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--4aac3055-d8d3-4702-8a47-e20b98a204e2",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--d06579c3-5a54-4c07-9fe6-ee5da911be6e",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b4d49d9e-1576-4dca-9ad9-8284705348c9",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--e639472d-3e63-4086-8bab-5b784ca4ecb3",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0defd505-3f22-47e5-b49e-5a247aa9166a",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--fc3f1aba-4721-4a3e-bd29-a975bb698e1a",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--00853f52-7401-492c-9914-10426a87b3eb",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b80e3384-0820-4b67-a9e0-a9b77c6d8508",
                    "target_ref": "attack-pattern--ccea5e6e-9a31-4c28-9a7f-b625b9933859"
                },
                {
                    "type": "relationship",
                    "id": "relationship--41072407-3e4d-45bb-a5bd-9f133ced34eb",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--93649edf-cb32-432d-be26-eca6e38c20f0",
                    "target_ref": "attack-pattern--b2f73929-b1f0-497c-ae7c-bec2991e8636"
                },
                {
                    "type": "relationship",
                    "id": "relationship--70835127-3dbd-4098-bddf-7363757573bb",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--a85e539a-b942-42cc-87c8-89f97a3022de",
                    "target_ref": "attack-pattern--b2f73929-b1f0-497c-ae7c-bec2991e8636"
                },
                {
                    "type": "relationship",
                    "id": "relationship--b2b38526-dc5d-43c7-b783-9ff71ff1dd68",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f3a95def-11b6-4a53-af82-e176790de49b",
                    "target_ref": "attack-pattern--b2f73929-b1f0-497c-ae7c-bec2991e8636"
                },
                {
                    "type": "relationship",
                    "id": "relationship--e8836f3c-7dd4-4f44-9756-3c71686a3387",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--b2f73929-b1f0-497c-ae7c-bec2991e8636",
                    "target_ref": "asset--5e28d40f-eed8-4bbe-91b2-d556db064b6a"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3cf3377b-e803-4165-af36-b9f108fbf4c5",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--afca3e68-df84-4e13-a7aa-8d318dfc5fd0",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--dc14c94e-65bf-4644-93a5-cfaaa7c39b60",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--79b7d4f0-756f-48c6-b7d9-c73c8e455e6b",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--11a49e1e-92e7-47a4-b5f1-e27087bee5db",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ad9033fe-77ad-45d1-8aeb-7dc01dc1df60",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--a6f5667b-4080-45a5-a581-99174990e2d6",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1e800fb3-2e0d-484f-a86f-9555f6ecf77a",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c8884400-e6a1-4942-9e43-3964c01790b1",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--cecf4abf-39d3-4d78-bd8f-a16758995b46",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--968546e2-a3f4-4569-bf79-4004866ed2f4",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--1a10be92-fef4-4542-a36b-d6057ec38027",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--334a6db6-73cf-484f-a411-efbe7e265a16",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--53c94101-cb10-4d25-8d05-d87c8b85a762",
                    "target_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3"
                },
                {
                    "type": "relationship",
                    "id": "relationship--5dc6d8cc-9b44-4746-9d1e-9403e2e2c7d7",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--68336522-b721-4ce9-a9b3-bf7f374447b3",
                    "target_ref": "asset--11368319-e183-4d14-b08e-a853ff8c7dba"
                },
                {
                    "type": "relationship",
                    "id": "relationship--de3711f2-b05f-4de3-9fc8-b211082dec1c",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--59f12848-6887-4a8c-a99c-374b14455558",
                    "target_ref": "attack-pattern--bafad767-891e-4cb4-9a71-9c2e4c1d4f8d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--6154672f-5364-4f41-ba4e-e9cfd70de27e",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--61debab2-78ca-4e2a-919b-e367727d67fc",
                    "target_ref": "attack-pattern--bafad767-891e-4cb4-9a71-9c2e4c1d4f8d"
                },
                {
                    "type": "relationship",
                    "id": "relationship--ca2a2232-42b5-4571-a26c-869991b2bfa3",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--7375773a-2869-424e-ab62-5fb8ce5fbfd2",
                    "target_ref": "attack-pattern--7135cef9-b546-422a-a361-66b9606687c7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--15fd8991-b49b-4106-bb68-de05b728a5a9",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--ec6c49a9-75fa-46e4-abe4-d08b80e702b4",
                    "target_ref": "attack-pattern--7135cef9-b546-422a-a361-66b9606687c7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--0e714a81-8ccc-4176-a84c-650dd133ad89",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--dcbcc2a3-e881-4de1-89cb-e4aef498853d",
                    "target_ref": "attack-pattern--7135cef9-b546-422a-a361-66b9606687c7"
                },
                {
                    "type": "relationship",
                    "id": "relationship--fc229cbb-d5ab-4fde-95fe-fdd5c68049f9",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--7135cef9-b546-422a-a361-66b9606687c7",
                    "target_ref": "asset--a71bd69b-8524-4776-9512-a3b8d5c1f314"
                },
                {
                    "type": "relationship",
                    "id": "relationship--728d9742-688a-415b-b718-1c550d085605",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--471e415e-2f6e-46f6-ae94-d78fec6e498d",
                    "target_ref": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--3e9832c6-6b07-4858-8685-27df07cb204d",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--b199a650-bd36-48b8-a1c0-53f560d0a3a1",
                    "target_ref": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--deb1d5ca-b7d5-42e0-b523-ea0daa6bc183",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f18ebf11-0747-41e8-aafc-a5c1363631a7",
                    "target_ref": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--f8ae0ee9-5965-45ae-b86d-466f841cb6d7",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--365cf85c-d596-4dc4-93f8-566c43bdb603",
                    "target_ref": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1"
                },
                {
                    "type": "relationship",
                    "id": "relationship--c68b2828-76b4-4e84-9214-70e71b66989b",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "targets",
                    "source_ref": "attack-pattern--c3c5128d-d2d8-44a2-917c-df49dcd39eb1",
                    "target_ref": "asset--5c5b5112-a6c1-47f7-a200-465753206b88"
                },
                {
                    "type": "relationship",
                    "id": "relationship--17e2c573-ad74-4a4b-91b9-7bb10b286e85",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--06c80628-ad44-425d-9121-3e19c975497d",
                    "target_ref": "attack-pattern--fbf925a4-b1b1-46bc-9e14-60fc4cabead2"
                },
                {
                    "type": "relationship",
                    "id": "relationship--bac8b3dc-a299-467a-9ed2-e9191553bd1b",
                    "created": "2018-05-15T08:54:56.925Z",
                    "modified": "2018-05-15T08:54:56.925Z",
                    "relationship_type": "mitigates",
                    "source_ref": "course-of-action--f8f2c3d4-b372-4b82-bf17-9d857c4fe9d2",
                    "target_ref": "attack-pattern--fbf925a4-b1b1-46bc-9e14-60fc4cabead2"
                }
            ]
        }
    }
}